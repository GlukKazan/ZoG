(macro eat-pre-condition
   (pre (check (or is-first-part? is-current?)))
)

(macro common-eat
   (let current-set piece)
   (check (not is-captured?))
   (set is-captured? t)
   (let current-set current-piece)
   (let captured-counter (+ captured-counter piece-value))
   (if (is-piece-type? King)
       (let king-captured-counter (+ king-captured-counter piece-value))
   )
)

(macro checker-eat-begin
   (check direction)
   (check enemy?)
   common-eat
)

(macro checker-eat-end
   (check direction)
   (check empty?)
   (move from here)
   (end-move-part eat-mode)
)

(macro king-eat-begin
   (loop
       (check direction)
       (break (not empty?))
   )
   (check enemy?)
   (let current-set piece)
   (check (not is-captured?))
   (set is-captured? t)
   (let current-set current-piece)
   (let captured-counter (+ captured-counter piece-value))
   (if (is-piece-type? King)
       (let king-captured-counter (+ king-captured-counter piece-value))
   )
)

(macro king-eat-end
   (loop
       (check direction)
       (check empty?)
       (move from here)
       (end-move-part eat-mode)
   )
)

(macro linear-begin
   (check direction)
   (check friend?)
   (check (is-piece-type? Man))
   (loop
       (check direction)
       (break empty?)
       (check friend?)
       (check (is-piece-type? Man))
   )
   (move from here)
)

(macro (common-directions opposite-player)
   (dir (name nw)  -1  1)
   (dir (name ne)   1  1)
   (dir (name sw)  -1 -1)
   (dir (name se)   1 -1)
   (dir (players opposite-player) (nw se) (sw ne) (ne sw) (se nw))
)

(macro turkish-directions
   (dir (name n)   0  1)
   (dir (name s)   0 -1)
   (dir (name w)  -1  0)
   (dir (name e)   1  0)
   (dir (players Black) (n s) (s n))
)

(macro common-conditions
   (let is-first-part? t)
   (attribute is-current? f)
   (attribute is-captured? f)
   (pre
       (set is-current? f)
       (set is-captured? f)
   )
   (post
       (set is-first-part? f)
   )
   (post
       (if is-current?
             (check (= 0 (count-moves (and is-current? (= current-mode eat-mode)))))
       )
   )
)

(macro max-eat-conditions
   (let captured-counter 0)
   (let max-captured 0)
   (post
       (check (>= captured-counter max-captured))
       (set max-captured captured-counter)
   )
)

(macro italian-eat-conditions
   (let captured-counter 0)
   (let max-captured 0)
   (let king-captured-counter 0)
   (let max-king-captured 0)
   (post
       (check (>= captured-counter max-captured))
       (set max-captured captured-counter)
       (if (> captured-counter max-captured)
              (set max-king-captured 0)
       )
       (check (>= captured-king-counter max-king-captured))
       (set max-king-captured king-captured-counter)
   )
)

(macro priority-condition
   (pre
       (check (= 0 (count-moves (= current-mode eat-mode))))
   )
)

(macro set-current-condition
   (post
       (set is-current? t)
   )
)

(macro delayed-promotion-condition
   (post
       (if (and is-current? is-promouted?)
             (promote King)
       )
   )
)

(macro delayed-promotion-prepare
   (attribute is-promouted? f)
   (post 
        (if (in-zone? promotion)
             (set is-promouted? t)
        )
   )
)

(macro immediate-promotion-condition
   (post 
        (if (in-zone? promotion)
             (promote King)
        )
   )
)

(macro break-promotion-condition
   (post 
        (if (in-zone? promotion)
             (promote King)
             end-move
        )
   )
)

(macro stalemate-goal
   (goals
       (loss stalemate?)
   )
)

(move
   (name checker-move)
   (arg direction)
   (action
       (check direction)
       (check empty?)
       (move from here)
       end-move
   )
)

(move
   (name checker-eat)
   (arg direction)
   eat-pre-condition
   (action
       checker-eat-begin
       capture
       checker-eat-end
   )
)

(move
   (name king-move)
   (arg direction)
   (action
       (loop
           (check direction)
           (check empty?)
           (move from here)
           end-move
       )
   )
)

(move
   (name king-eat)
   (arg direction)
   eat-pre-condidtion
   (action
       king-eat-begin
       capture
       king-eat-end
   )
)

(move
   (name north-checker-eat)
   (arg direction)
   eat-pre-condidtion
   (action
       checker-eat-begin
       (if (is-piece-type? King)
           (promote Man)
       else
           capture
       )
       checker-eat-end
   )
)

(move
   (name north-king-eat)
   (arg direction)
   eat-pre-condidtion
   (action
       king-eat-begin
       (if (is-piece-type? King)
           (promote Man)
       else
           capture
       )
       king-eat-end
   )
)

(move
   (name thai-eat)
   (arg direction)
   eat-pre-condidtion
   (action
       king-eat-begin
       capture
       checker-eat-end
   )
)

(move
   (name italian-eat)
   (arg direction)
   eat-pre-condidtion
   (action
       checker-eat-begin
       (check (is-piece-type? Man))
       capture
       checker-eat-end
   )
)

(move
   (name damone-eat)
   (arg direction)
   eat-pre-condidtion
   (action
       checker-eat-begin
       (check (not (is-piece-type? Damone)))
       capture
       checker-eat-end
   )
)

(move
   (name turk-checker-eat)
   (arg direction)
   eat-pre-condition
   (action
       checker-eat-begin
       capture-immediate
       checker-eat-end
   )
)

(move
   (name turk-king-eat)
   (arg direction)
   eat-pre-condidtion
   (action
       (check (not (= last-direction (opposite direction))))
       (set last-direction direction)
       king-eat-begin
       capture-immediate
       king-eat-end
   )
)

(move
   (name ken-move)
   (arg direction)
   (action
       (check direction)
       (check friend?)
       (check direction)
       (check empty?)
       (move from here)
       end-move
   )
)

(move
   (name fris-eat)
   (arg direction)
   eat-pre-condition
   (action
       (check direction)
       checker-eat-begin
       capture
       (check direction)
       checker-eat-end
   )
)

(move
   (name fris-move)
   (arg direction)
   (action
       (loop
           (check direction)
           (check direction)
           (check empty?)
           (move from here)
           end-move
       )
   )
)

(move
   (name fris-king-eat)
   (arg direction)
   eat-pre-condidtion
   (action
       king-eat-begin
       capture
       (loop
           (check direction)
           (check direction)
           (check empty?)
           (move from here)
           (end-move-part eat-mode)
       )
   )
)

(move
   (name linear-move)
   (arg direction)
   (action
       linear-begin
       end-move
   )
)

(move
   (name linear-eat)
   (arg direction)
   (action
       linear-begin
       (check direction)
       (check enemy?)
       (loop
            common-eat
            capture
            (break (is-piece-type? King))
            (break (not direction))
            (break (not enemy?))
            (break (is-piece-type? King))
       )
       end-move
   )
)

(move
   (name buska-eat)
   (arg direction)
   eat-pre-condidtion
   (action
       (check direction)
       (check empty?)
       (move from here)
       checker-eat-begin
       capture
       (end-move-part eat-mode)
   )
)


(move
   (name buska-king-eat)
   (arg direction)
   eat-pre-condidtion
   (action
       (loop
            (check direction)
            (check empty?)
            (move from here)
            (break enemy?)
       )
       common-eat
       capture
       (end-move-part eat-mode)
   )
)

(variant
   (name "International Draughts")

   (players White Black)

   (board
      (grid J 10_1)
      (common-directions Black)
      (zone (name promotion)
            (players White)
            (positions B10 D10 F10 H10 J10)
      )
      (zone (name promotion)
            (players Black)
            (positions A1 C1 E1 G1 I1)
      )
   )

   (pieces
      (pre (check friend?))
      common-conditions
      max-eat-conditions
      delayed-promotion-condition
      (piece
            (name Man)
            set-current-condition
            delayed-promotion-prepare
            (moves
                  (mode normal-mode)
                  priority-condition
                  (moves (checker-move nw) (checker-move ne))
            )
            (moves
                  (mode eat-mode)
                  (moves (checker-eat nw) (checker-eat ne) 
                         (checker-eat sw) (checker-eat se)
                  )
            )
      )
      (piece
            (name King)
            set-current-condition
            (moves
                  (mode normal-mode)
                  priority-condition
                  (moves (king-move nw) (king-move ne) 
                         (king-move sw) (king-move se)
                  )
            )
            (moves
                  (mode eat-mode)
                  (moves (king-eat nw) (king-eat ne) 
                         (king-eat sw) (king-eat se)
                  )
            )
      )
   )

   (setup
      (White
         (Man A1 C1 E1 G1 I1 B2 D2 F2 H2 J2 A3 C3 E3 G3 I3 B4 D4 F4 H4 J4)
      )
      (Black
         (Man B10 D10 F10 H10 J10 A9 C9 E9 G9 I9 B8 D8 F8 H8 J8 A7 C7 E7 G7 I7)
      )
   )

   stalemate-goal
)

(variant
   (name "Brazilian Draughts")

   (inherits "International Draughts")

   (board
      (grid H 8_1)
      (common-directions Black)
      (zone (name promotion)
            (players White)
            (positions B8 D8 F8 H8)
      )
      (zone (name promotion)
            (players Black)
            (positions A1 C1 E1 G1)
      )
   )

   (setup
      (White
         (Man A1 C1 E1 G1 B2 D2 F2 H2 A3 C3 E3 G3)
      )
      (Black
         (Man B8 D8 F8 H8 A7 C7 E7 G7 B6 D6 F6 H6)
      )
   )
)

(variant
   (name "Canadian Checkers")

   (inherits "International Draughts")

   (board
      (grid L 12_1)
      (common-directions Black)
      (zone (name promotion)
            (players White)
            (positions B12 D12 F12 H12 J12 L12)
      )
      (zone (name promotion)
            (players Black)
            (positions A1 C1 E1 G1 I1 K1)
      )
   )

   (setup
      (White
         (Man A1 C1 E1 G1 I1 K1 B2 D2 F2 H2 J2 L2 A3 C3 E3 G3 I3 K3 B4 D4 F4 H4 J4 L4 A5 C5 E5 G5 I5 K5)
      )
      (Black
         (Man B10 D10 F10 H10 J10 L10 A9 C9 E9 G9 I9 K9 B8 D8 F8 H8 J8 L8 A7 C7 E7 G7 I7 K7 B6 D6 F6 H6 J6 L6)
      )
   )
)

(variant
   (name "Frisian Draughts")

   (inherits "International Draughts")

   (board
      (grid J 10_1)
      (common-directions Black)
      turkish-directions
      (zone (name promotion)
            (players White)
            (positions B10 D10 F10 H10 J10)
      )
      (zone (name promotion)
            (players Black)
            (positions A1 C1 E1 G1 I1)
      )
   )

   (pieces
      (pre (check friend?))
      common-conditions
      (let captured-counter 0)
      (let max-captured 0)
      (let king-moving-counter 0)
      (let max-king-moving-counter 0)
      (post
            (check (>= captured-counter max-captured))
            (set max-captured captured-counter)
            (if (> captured-counter max-captured)
                  (set max-king-moving-counter 0)
            )
            (check (>= king-moving-counter max-king-moving-counter))
            (set max-king-moving-counter king-moving-counter)
      )
      (piece
            (name Man)
            set-current-condition
            immediate-promotion-condition
            (post 
                  (set king-moving-counter 0)
            )
            (moves
                  (mode normal-mode)
                  priority-condition
                  (moves (checker-move nw) (checker-move ne))
            )
            (moves
                  (mode eat-mode)               
                  (moves (checker-eat nw) (checker-eat ne) 
                         (checker-eat sw) (checker-eat se)
                         (fris-eat n) (fris-eat s) 
                         (fris-eat w) (fris-eat e)
                  )
            )
      )
      (piece
            (name King)
            (attribute move-counter 0)
            (attribute is-old-current? f)
            set-current-condition
            (post is-old-current? is-current?)
            (post 
                  (set king-moving-counter 1)
            )
            (moves
                  (mode normal-mode)
                  priority-condition
                  (pre
                         (if is-old-current?
                               (set move-counter (+ move-counter 1))
                               (check (< move-counter 3))
                         else
                               (set move-counter 0)
                         )
                  )
                  (moves (king-move nw) (king-move ne) 
                         (king-move sw) (king-move se)
                         (fris-move n) (fris-move s) 
                         (fris-move w) (fris-move e)
                  )
            )
            (moves
                  (mode eat-mode)
                  (pre
                         (set move-counter 0)
                  )
                  (moves (king-eat nw) (king-eat ne) 
                         (king-eat sw) (king-eat se)
                         (fris-king-eat n) (fris-king-eat s) 
                         (fris-king-eat w) (fris-king-eat e)
                  )
            )
      )
   )
)

(variant
   (name "Russian Checkers")

   (players White Black)

   (board
      (grid H 8_1)
      (common-directions Black)
      (zone (name promotion)
            (players White)
            (positions B8 D8 F8 H8)
      )
      (zone (name promotion)
            (players Black)
            (positions A1 C1 E1 G1)
      )
   )

   (pieces
      (pre (check friend?))
      common-conditions
      (piece
            (name Man)
            set-current-condition
            immediate-promotion-condition
            (moves
                  (mode normal-mode)
                  priority-condition
                  (moves (checker-move nw) (checker-move ne))
            )
            (moves
                  (mode eat-mode)
                  (moves (checker-eat nw) (checker-eat ne) 
                         (checker-eat sw) (checker-eat se)
                  )
            )
      )
      (piece
            (name King)
            set-current-condition
            (moves
                  (mode normal-mode)
                  priority-condition
                  (moves (king-move nw) (king-move ne) 
                         (king-move sw) (king-move se)
                  )
            )
            (moves
                  (mode eat-mode)
                  (moves (king-eat nw) (king-eat ne) 
                         (king-eat sw) (king-eat se)
                  )
            )
      )
   )

   (setup
      (White
         (Man A1 C1 E1 G1 B2 D2 F2 H2 A3 C3 E3 G3)
      )
      (Black
         (Man B8 D8 F8 H8 A7 C7 E7 G7 B6 D6 F6 H6)
      )
   )

   stalemate-goal
)

(variant
   (name "Diagonal Checkers")

   (inherits "Russian Checkers")

   (setup
      (White
         (Man C1 E1 G1 D2 F2 H2 E3 G3 F4 H4 G5 H6)
      )
      (Black
         (Man B8 D8 F8 A7 C7 E7 B6 D6 A5 C5 B4 A3)
      )
   )
)

(variant
   (name "80 Cells Checkers")

   (inherits "Russian Checkers")

   (board
      (grid J 8_1)
      (common-directions Black)
      (zone (name promotion)
            (players White)
            (positions B8 D8 F8 H8 J8)
      )
      (zone (name promotion)
            (players Black)
            (positions A1 C1 E1 G1 I1)
      )
   )

   (setup
      (White
         (Man A1 C1 E1 G1 I1 B2 D2 F2 H2 J2 A3 C3 E3 G3 I3)
      )
      (Black
         (Man B8 D8 F8 H8 J8 A7 C7 E7 G7 I7 B6 D6 F6 H6 J8)
      )
   )
)

(variant
   (name "Stavropol Checkers")

   (inherits "Russian Checkers")

   (pieces
      common-conditions
      (piece
            (name Man)
            set-current-condition
            immediate-promotion-condition
            (moves
                  (mode normal-mode)
                  (pre
                         (check (= 0 (count-moves (and friend? (= current-mode eat-mode)))))
                  )
                  (moves (checker-move nw) (checker-move ne))
            )
            (moves
                  (mode eat-mode)
                  (moves (checker-eat nw) (checker-eat ne) 
                         (checker-eat sw) (checker-eat se)
                  )
            )
      )
      (piece
            (name King)
            set-current-condition
            (moves
                  (mode normal-mode)
                  (pre
                         (check (= 0 (count-moves (and friend? (= current-mode eat-mode)))))
                  )
                  (moves (king-move nw) (king-move ne) 
                         (king-move sw) (king-move se)
                  )
            )
            (moves
                  (mode eat-mode)
                  (moves (king-eat nw) (king-eat ne) 
                         (king-eat sw) (king-eat se)
                  )
            )
      )
   )
)

(variant
   (name "North Checkers")

   (inherits "Russian Checkers")

   (pieces
      (pre (check friend?))
      common-conditions
      (piece
            (name Man)
            set-current-condition
            immediate-promotion-condition
            (moves
                  (mode normal-mode)
                  priority-condition
                  (moves (checker-move nw) (checker-move ne))
            )
            (moves
                  (mode eat-mode)
                  (moves (north-checker-eat nw) (north-checker-eat ne) 
                         (north-checker-eat sw) (north-checker-eat se)
                  )
            )
      )
      (piece
            (name King)
            set-current-condition
            (moves
                  (mode normal-mode)
                  priority-condition
                  (moves (king-move nw) (king-move ne) 
                         (king-move sw) (king-move se)
                  )
            )
            (moves
                  (mode eat-mode)
                  (moves (north-king-eat nw) (north-king-eat ne) 
                         (north-king-eat sw) (north-king-eat se)
                  )
            )
      )
   )
)

(variant
   (name "Thai Checkers")

   (inherits "Russian Checkers")

   (players Black White)

   (board
      (grid H 8_1)
      (common-directions White)
      (zone (name promotion)
            (players Black)
            (positions B8 D8 F8 H8)
      )
      (zone (name promotion)
            (players White)
            (positions A1 C1 E1 G1)
      )
   )

   (pieces
      (pre (check friend?))
      common-conditions
      (piece
            (name Man)
            set-current-condition
            immediate-promotion-condition
            (moves
                  (mode normal-mode)
                  priority-condition
                  (moves (checker-move nw) (checker-move ne))
            )
            (moves
                  (mode eat-mode)
                  (moves (checker-eat nw) (checker-eat ne))
            )
      )
      (piece
            (name King)
            set-current-condition
            (moves
                  (mode normal-mode)
                  priority-condition
                  (moves (king-move nw) (king-move ne) 
                         (king-move sw) (king-move se)
                  )
            )
            (moves
                  (mode eat-mode)
                  (moves (thai-eat nw) (thai-eat ne) 
                         (thai-eat sw) (thai-eat se)
                  )
            )
      )
   )

   (setup
      (Black
         (Man A1 C1 E1 G1 B2 D2 F2 H2)
      )
      (White
         (Man B8 D8 F8 H8 A7 C7 E7 G7)
      )
   )
)

(variant
   (name "English Draughts")

   (players Red White)

   (board
      (grid H 8_1)
      (common-directions White)
      (zone (name promotion)
            (players Red)
            (positions B8 D8 F8 H8)
      )
      (zone (name promotion)
            (players White)
            (positions A1 C1 E1 G1)
      )
   )

   (pieces
      (pre (check friend?))
      common-conditions
      (piece
            (name Man)
            set-current-condition
            break-promotion-condition
            (moves
                  (mode normal-mode)
                  priority-condition
                  (moves (checker-move nw) (checker-move ne))
            )
            (moves
                  (mode eat-mode)
                  (moves (checker-eat nw) (checker-eat ne))
            )
      )
      (piece
            (name King)
            set-current-condition
            (moves
                  (mode normal-mode)
                  priority-condition
                  (moves (checker-move nw) (checker-move ne) 
                         (checker-move sw) (checker-move se)
                  )
            )
            (moves
                  (mode eat-mode)
                  (moves (checker-eat nw) (checker-eat ne) 
                         (checker-eat sw) (checker-eat se)
                  )
            )
      )
   )

   (setup
      (Red
         (Man A1 C1 E1 G1 B2 D2 F2 H2 A3 C3 E3 G3)
      )
      (White
         (Man B8 D8 F8 H8 A7 C7 E7 G7 B6 D6 F6 H6)
      )
   )

   stalemate-goal
)

(variant
   (name "Italian Draughts")

   (players Black White)

   (board
      (grid H 8_1)
      (common-directions White)
      (zone (name promotion)
            (players Black)
            (positions B8 D8 F8 H8)
      )
      (zone (name promotion)
            (players White)
            (positions A1 C1 E1 G1)
      )
   )

   (pieces
      (pre (check friend?))
      common-conditions
      italian-eat-conditions
      (piece
            (name Man)
            set-current-condition
            immediate-promotion-condition
            (moves
                  (mode normal-mode)
                  priority-condition
                  (moves (checker-move nw) (checker-move ne))
            )
            (moves
                  (mode eat-mode)
                  (moves (italian-eat nw) (italian-eat ne))
            )
      )
      (piece
            (name King)
            set-current-condition
            (moves
                  (mode normal-mode)
                  priority-condition
                  (moves (checker-move nw) (checker-move ne) 
                         (checker-move sw) (checker-move se)
                  )
            )
            (moves
                  (mode eat-mode)
                  (moves (checker-eat nw) (checker-eat ne) 
                         (checker-eat sw) (checker-eat se)
                  )
            )
      )
   )

   (setup
      (Black
         (Man B1 D1 F1 H1 A2 C2 E2 G2 B3 D3 F3 H3)
      )
      (White
         (Man A8 C8 E8 G8 B7 D7 F7 H7 A6 C6 E6 G6)
      )
   )

   stalemate-goal
)

(variant
   (name "Italian Damone")

   (players Black White)

   (board
      (grid H 8_1)
      (common-directions White)
      (zone (name king-promotion)
            (players Black)
            (positions A6 C8)
      )
      (zone (name king-promotion)
            (players White)
            (positions F1 H3)
      )
      (zone (name damone-promotion)
            (players Black)
            (positions A8)
      )
      (zone (name damone-promotion)
            (players White)
            (positions H1)
      )
   )

   (pieces
      (pre (check friend?))
      common-conditions
      max-eat-conditions
      (piece
            (name Man)
            set-current-condition
            (post 
                  (if (in-zone? king-promotion)
                      (promote King)
                      (set is-promouted? t)
                  )
                  (if (in-zone? (and (not is-promouted?) damone-promotion))
                      (promote Damone)
                  )
            )
            (moves
                  (mode normal-mode)
                  priority-condition
                  (moves (checker-move nw) (checker-move ne) (checker-move sw))
            )
            (moves
                  (mode eat-mode)
                  (moves (italian-eat nw) (italian-eat ne) (italian-eat sw))
            )
      )
      (piece
            (name King)
            (attribute is-promouted? f)
            set-current-condition
            (post 
                  (if (in-zone? damone-promotion)
                      (promote Damone)
                  )
            )
            (moves
                  (mode normal-mode)
                  priority-condition
                  (moves (checker-move nw) (checker-move ne) 
                         (checker-move sw) (checker-move se)
                  )
            )
            (moves
                  (mode eat-mode)
                  (moves (damone-eat nw) (damone-eat ne) 
                         (damone-eat sw) (damone-eat se)
                  )
            )
      )
      (piece
            (name Damone)
            set-current-condition
            (moves
                  (mode normal-mode)
                  priority-condition
                  (moves (checker-move nw) (checker-move ne) 
                         (checker-move sw) (checker-move se)
                  )
            )
            (moves
                  (mode eat-mode)
                  (moves (checker-eat nw) (checker-eat ne) 
                         (checker-eat sw) (checker-eat se)
                  )
            )
      )
   )

   (setup
      (Black
         (Man D1 E2 F3 G4 H5)
         (King F1 H3)
         (Damone H1)
      )
      (White
         (Man A4 B5 C6 D7 E8)
         (King A6 C8)
         (Damone A8)
      )
   )

   (goals
      (loss stalemate?)
      (loss (is-killed? Damone))
   )
)

(variant
   (name "Portuguese draughts")

   (inherits "Italian Draughts")

   (pieces
      (pre (check friend?))
      (let king-moving-counter 0)
      (let max-king-moving-captured 0)
      common-conditions
      italian-eat-conditions
      (post
            (check (>= king-moving-counter max-king-moving-counter))
            (set max-king-moving-counter king-moving-counter)
      )
      delayed-promotion-condition
      (piece
            (name Man)
            set-current-condition
            (attribute is-promouted? f)
            (post
                  (set is-promouted? (in-zone? promotion))
            )
            (moves
                  (mode normal-mode)
                  priority-condition
                  (moves (checker-move nw) (checker-move ne))
            )
            (moves
                  (mode eat-mode)
                  (moves (checker-eat nw) (checker-eat ne))
            )
      )
      (piece
            (name King)
            set-current-condition
            (moves
                  (mode normal-mode)
                  priority-condition
                  (moves (king-move nw) (king-move ne) 
                         (king-move sw) (king-move se)
                  )
            )
            (moves
                  (mode eat-mode)
                  (let king-moving-counter 1)
                  (moves (king-eat nw) (king-eat ne) 
                         (king-eat sw) (king-eat se)
                  )
            )
      )
   )
)

(variant
   (name "Turkish Draughts")

   (players White Black)

   (board
      (grid H 8_1)
      (dir (name dummy))
      turkish-directions
      (zone (name promotion)
            (players White)
            (positions A8 B8 C8 D8 E8 F8 G8 H8)
      )
      (zone (name promotion)
            (players Black)
            (positions A1 B1 C1 D1 E1 F1 G1 H1)
      )
   )

   (pieces
      (pre (check friend?))
      (let last-direction dummy)
      common-conditions
      max-eat-conditions
      delayed-promotion-condition
      (piece
            (name Man)
            set-current-condition
            delayed-promotion-prepare
            (moves
                  (mode normal-mode)
                  priority-condition
                  (moves (checker-move n) (checker-move e) (checker-move w))
            )
            (moves
                  (mode eat-mode)
                  (moves (turk-checker-eat n) (turk-checker-eat e) (turk-checker-eat w))
            )
      )
      (piece
            (name King)
            set-current-condition
            (moves
                  (mode normal-mode)
                  priority-condition
                  (moves (king-move n) (king-move s) 
                         (king-move w) (king-move e)
                  )
            )
            (moves
                  (mode eat-mode)
                  (moves (turk-king-eat n) (turk-king-eat s) 
                         (turk-king-eat w) (turk-king-eat e)
                  )
            )
      )
   )

   (setup
      (White
         (Man A2 B2 C2 D2 E2 F2 G2 H2 A3 B3 C3 D3 E3 F3 G3 H3)
      )
      (Black
         (Man A7 B7 C7 D7 E7 F7 G7 H7 A6 B6 C6 D6 E6 F6 G6 H6)
      )
   )

   stalemate-goal
)

(variant
   (name "Armenian Draughts")

   (inherits "Turkish Draughts")

   (board
      (grid H 8_1)
      (common-directions Black)
      turkish-directions
      (zone (name promotion)
            (players White)
            (positions A8 B8 C8 D8 E8 F8 G8 H8)
      )
      (zone (name promotion)
            (players Black)
            (positions A1 B1 C1 D1 E1 F1 G1 H1)
      )
   )

   (pieces
      (pre (check friend?))
      common-conditions
      max-eat-conditions
      (piece
            (name Man)
            set-current-condition
            immediate-promotion-condition
            (moves
                  (mode normal-mode)
                  priority-condition
                  (moves (checker-move n) (checker-move e) (checker-move w)
                         (checker-move nw) (checker-move ne))
            )
            (moves
                  (mode eat-mode)
                  (moves (checker-eat n) (checker-eat e) (checker-eat w))
            )
      )
      (piece
            (name King)
            set-current-condition
            (moves
                  (mode normal-mode)
                  priority-condition
                  (moves (king-move n)  (king-move s)  (king-move w)  (king-move e)
                         (king-move nw) (king-move sw) (king-move ne) (king-move se)
                  )
            )
            (moves
                  (mode eat-mode)
                  (moves (king-eat n) (king-eat s) 
                         (king-eat w) (king-eat e)
                  )
            )
      )
   )
)

(variant
   (name "Osetian Checkers")

   (inherits "Turkish Draughts")

   (pieces
      (pre (check friend?))
      common-conditions
      (piece
            (name Man)
            set-current-condition
            immediate-promotion-condition
            (moves
                  (mode normal-mode)
                  (moves (checker-move n) (checker-move e) (checker-move w)
                         (ken-move n) (ken-move s) (ken-move e) (ken-move w)
                  )
            )
            (moves
                  (mode eat-mode)
                  (moves (checker-eat n) (checker-eat s) 
                         (checker-eat e) (checker-eat w)
                  )
            )
      )
      (piece
            (name King)
            set-current-condition
            (moves
                  (mode normal-mode)
                  (moves (king-move n) (king-move s) 
                         (king-move w) (king-move e)
                  )
            )
            (moves
                  (mode eat-mode)
                  (moves (king-eat n) (king-eat s) 
                         (king-eat w) (king-eat e)
                  )
            )
      )
   )
)

(variant
   (name "Bushka")

   (inherits "International Draughts")

   (pieces
      (pre (check friend?))
      common-conditions
      max-eat-conditions
      (piece
            (name Man)
            set-current-condition
            break-promotion-condition
            (moves
                  (mode normal-mode)
                  priority-condition
                  (pre
                       (check (= 0 (count-moves (= current-mode linear-mode))))
                  )
                  (moves (checker-move nw) (checker-move ne)
                         (linear-move nw) (linear-move ne)
                  )
            )
            (moves
                  (mode eat-mode)
                  (pre
                       (check (= 0 (count-moves (= current-mode linear-mode))))
                  )
                  (moves (buska-eat nw) (buska-eat ne)
                         (buska-eat sw) (buska-eat se)
                  )
            )
            (moves
                  (mode linear-mode)
                  (moves (linear-eat nw) (linear-eat ne)
                         (linear-eat sw) (linear-eat se)
                  )
            )
      )
      (piece
            (name King)
            set-current-condition
            (mode 
                  (name normal-mode)
                  priority-condition
                  (pre
                       (check (= 0 (count-moves (= current-mode linear-mode))))
                  )
                  (moves (king-move nw) (king-move ne) 
                         (king-move sw) (king-move se)
                  )
            )
            (mode 
                  (name eat-mode)
                  (pre
                       (check (= 0 (count-moves (= current-mode linear-mode))))
                  )
                  (moves (buska-king-eat nw) (buska-king-eat ne)
                         (buska-king-eat sw) (buska-king-eat se)
                  )
            )
      )
   )

   (setup
      (White
         (Man A1 C1 E1 G1 I1 B2 D2 F2 H2 J2 A3 C3 E3 G3 I3)
      )
      (Black
         (Man B10 D10 F10 H10 J10 A9 C9 E9 G9 I9 B8 D8 F8 H8 J8)
      )
   )
)
