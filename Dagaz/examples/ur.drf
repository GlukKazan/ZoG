(macro calc-dices
   (let here a)
   (loop
       (check (not empty?))
       (set step-count (+ step-count (get value)))
       (break (not next))
   )
   (if (= step-count 0)
       (set step-count 4)
   )
)

(macro move-tail
   (let here from)
   (if (and up (not empty?))
       (let current-set piece)
       (move here from)
       (loop
           (break (not up))
           (break empty?)
           (add-to-current-set piece)
       )
   )
)

(turn
   (name man-move)
   (arg direction)
   (action
       (loop
           (iterate step-count)
           (if (in-zone? promotion)
               (set is-promouted? true)
           )
           (check direction)
       )
       (move from here)
       (if (not empty?)
           (if (in-zone? safe)
               (if (in-zone? depo)
                   (check friend?)
               )
               (let current-position here)
               (let current-set piece)
               (check up)
               (move current-position here)
               (loop
                   (add-to-current-set piece)
                   (check up)
                   (break empty?)
               )
               (let current-set current-piece)
           else
               (check enemy?)
               (if (in-zone? protect)
                   (check (not (is-piece-type? Promouted)))
               )
               (if (or is-promouted? (= current-piece-type Promouted))
                   (check (is-piece-type? Promouted))
               else
                   (check (is-piece-type? Initial))
               )
               (let current-position here)
               (let current-set current-piece)
               (let current-player piece-owner)
               (let here A)
               (loop
                   (break empty?)
                   (check next)
               )
               (move current-position here)
           )
       )
       end-move
   )
)

(turn
   (name drop-dice)
   (action
       drop
       (set value curr-value)
       end-move
   )
)

(turn
   (name clear-all)
   (action
       (capture a)
       (capture b)
       (capture c)
       (if (enemy? L)
           (capture L)
       )
       end-move
   )
)

(turn
   (name pass-turn)
   (action
       end-move
   )
)

(variant
   (name "Ur")

   (players White Black)
   (turn-order 
      (White (modes drop-dices) (engine random))
      (White (modes drop-dices) (engine random))
      (White (modes drop-dices) (engine random))
      (White (modes normal-mode pass-mode))
      (White (modes clear-dices))
      (Black (modes drop-dices) (engine random))
      (Black (modes drop-dices) (engine random))
      (Black (modes drop-dices) (engine random))
      (Black (modes normal-mode pass-mode))
      (Black (modes clear-dices))
   )

   (board
      (grid H 3_1 0_3)
      (grid (zone start) (players White Black) G)
      (grid (zone finish) X_X)
      (grid (zone lock) L_L)
      (grid (zone dices) c)
      (dir (name up)   0  0  1)
      (dir (name next) 1)
      (dir (name init) (players White) (A D10) (B D10) (C D10) (D D10) (E D10) (F D10) (G D10))
      (dir (name init) (players Black) (A D30) (B D30) (C D30) (D D30) (E D30) (F D30) (G D30))
      (dir (name init) (players White) (D10 C10) (C10 B10) (B10 A10) (A10 A20))
      (dir (name init) (players Black) (D30 C30) (C30 B30) (B30 A30) (A30 A20))
      (dir (name init) (A20 B20) (B20 C20) (C20 D20) (D20 E20) (E20 F20) (F20 G20))
      (dir (name init) (players White) (G20 G10) (G10 H10) (H10 H20) (H20 H30) (H30 G30) (G30 G20))
      (dir (name init) (players Black) (G20 G30) (G30 H30) (H30 H20) (H20 H10) (H10 G10) (G10 G20))
      (dir (name prom) (players White) (H20 H30) (H30 G30) (G30 G20))
      (dir (name prom) (players Black) (H20 H10) (H10 G10) (G10 G20))
      (dir (name prom) (G20 F20) (F20 E20) (E20 D20) (D20 C20) (C20 B20) (B20 A20) (A20 X))
      (zone (name plane)
         (zone start)
         (positions A10 B10 C10 D10 E10 F10 G10 H10
                    A20 B20 C20 D20 E20 F20 G20 H20
                    A30 B30 C30 D30 E30 F30 G30 H30
         )
      )
      (zone (name promotion) (players White) (positions H10))
      (zone (name promotion) (players Black) (positions H30))
      (zone (name rosette)
          (positions A10 A30 D20 G10 G30)
      )
      (zone (name depo)
          (positions B10 B30 D10 D30 G20)
      )
      (zone (name safe)
          (zone depo)
          (positions C20 F20)
      )
      (zone (name protect)
          (positions A20)
      )
   )

   (pieces
      (piece
            (name Dice)
            (attribute value 0)
            (turns
                  (let curr-value 0_1)
                  (pre (in-zone? dices))
                  (pre empty?)
                  (mode drop-dices)
                  (turns drop-dice)
            )
      )
      (piece
            (name Man)
            (pre (not (enemy? L)))
            (pre (in-zone? plane))
            (let step-count 0)
            (pre calc-dices)
            (let is-promouted? false)
            (post
                  (if is-promouted?
                       (promote Promouted)
                  )
            )
            (post 
                  (if (in-zone? finish)
                       capture
                  )
            )
            (post
                  (if (in-zone? rosette)
                      (drop Initial L)
                  else
                      (capture L)
                  )
            )
            (post move-tail)
            (piece
                  (name Initial)
                  (turns
                       (mode normal-mode)
                       (man-move init)
                  )
            )
            (piece
                  (name Promouted)
                  (turns
                       (mode normal-mode)
                       (man-move prom)
                  )
            )
      )
      (turns
            (mode pass-mode)
            (pre
                (check (= 0 (count-moves (= current-mode normal-mode))))
            )
            (turns pass-turn)
      )
      (turns
            (mode clear-dices)
            (turns clear-all)
      )
   )

   (setup
      (White
         (Initial A B C D E F G)
      )
      (Black
         (Initial A B C D E F G)
      )
   )

   (goals
      (win (= 0 (count-pieces friend?)))
   )
)