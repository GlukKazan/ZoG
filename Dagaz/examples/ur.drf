; Ур
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; http://skyruk.livejournal.com/211326.html
; http://skyruk.livejournal.com/231444.html

(def get-dices
     (if (= 0 (sum -all-pices (get v)))
         4
     )
)

(def clear-dices
     (for P all-positions
          save-all
          P
          (check (in-zone? dices))
          capture
     )
)

(def drop-dice
     (check (in-zone? dices))
     (check empty?)
     (add Zero One)
     (end-move-part-strict (mode drop-dices))
)

(def move-piece
     (check (or (in-zone? reserve) (in-zone? board)))
     (check friend?)
     (let P (copy 1))                    ; Фигура сохраняется вместе с данными о её позиции
     (lock 1)
     (while _ (<= get-dices)
         next
     )
     (if (not empty?)
         (check (not (in-zone? safe)))
         (if (or (in-zone? depo) (in-zone? lock))
             (check (< size 4))
             (if (in-zone? depo)
                 (check (friend? (copy size 1)))
             )
         else
             (check (not friend?)))      ; Нельзя брать дружественную фигуру
             (check (eq? P (copy 1)))    ; Нельзя брать фигуру другого типа
             (capture-to reserve)        ; Фигуры перемещаются в свободное место резерва своего цвета
         )
     )
     (if (not (in-zone finish))
         (if (in-zone? promoution P)     ; Начальная позиция хода является полем превращения?
             (add Promouted)             ; Заменить перемещаемую фигуру превращенной фигурой
         else
             add
         )
     )
     (clear-dices)
     (if (in-zone? rosette)
         (end-move (label repeat))
     else
         end-move
     )
)

(variant
   (title "Ур")
   (players First Second)
   (turn-order 
        (label 
              (name repeat)
              (First (mode drop-dices) random) 
              First 
        )
        (label
              (name repeat)
              (Second (mode drop-dices) random) 
              Second
        )
   )

   (board
        (grid (name finish)
              (dims "0"))
        (grid (name dices)
              (dims "i/ii/iii"))
        (grid (name reserve)
              (players First Second)
              (dims "1/2/3/4/5/6/7"))
        (grid (name board)
              (dims "a/b/c/d/e/f/g/h"
                    "3/2/1")
        )
        ((dir First Initial)  (name next) (d1 c1) (c1 b1) (b1 a1) (a1 a2) (g2 g1) (g1 h1))
        ((dir Second Initial) (name next) (d3 c3) (c3 b3) (b3 a3) (a3 a2) (g2 g3) (g3 h3))
        ((dir (First Second) Initial) (name next) (a2 b2) (b2 c2) (c2 d2) (d2 e2) (e2 g2))
        ((dir First Promouted)  (name next) (h1 h2) (h2 h3) (h3 g3) (g3 g2))
        ((dir Second Promouted) (name next) (h3 h2) (h2 h1) (h1 g1) (g1 g2))
        ((dir (First Second) Promouted) (name next) (g2 e2) (e2 d2) (d2 c2) (c2 b2) (b2 a2) (a2 0))
        ((dir First)  (name next) (1 d1) (2 d1) (3 d1) (4 d1) (5 d1) (6 d1) (7 d1))
        ((dir Second) (name next) (1 d3) (2 d3) (3 d3) (4 d3) (5 d3) (6 d3) (7 d3))
        (zone (name dices)
              (positions i ii iii)
        )
        (zone (name reserve)
              (positions 1 2 3 4 5 6 7)
        )
        (zone (name promoution)
              (positions h1 h3)
        )
        (zone (name rosette)
              (positions a1 a3 d2 g1 g3)
        )
        (zone (name depo)
              (positions b1 b3 d1 d3 g2)
        )
        (zone (name lock)
              (positions c2 f2)
        )
        (zone (name safe)
              (positions a2)
        )
   )

   (setup
      (First
         (Initial 1 2 3 4 5 6 7)
      )
      (Second
         (Initial 1 2 3 4 5 6 7)
      )
   )

   (move-priorities (normal pass))
   (pieces
        (Zero
              (constant v 0)
        )
        (One
              (constant v 1)
        )
        Initial
        Promouted
   )
   (moves
        (move-type normal)
        move-piece
        (move-type pass)
        pass-turn
        (move-type drop-dices)
        drop-dice
   )

   (goals
       (win-condition (= (sum pices) 0))
   )
)