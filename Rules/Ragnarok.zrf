(define jotunn-step-body
  (if (on-board? $2)
      (verify (not-enemy? $2))
  )
  $1 (verify empty?)
  (if (on-board? $1)
      (verify (not-enemy? $1))
  )
)

(define walhall-jotunn-step (
  (jotunn-step-body)
  (if (in-zone? goal-zone)
      (add Jotunn)
   else  
      (add $3)
  )
))

(define jotunn-step (
  (jotunn-step-body)
  (add $3)
))

(define jotunn-push-body
  (set-flag is-captured? false)
  mark
  (while (and (on-board? $2) (enemy? $2))
      $2
      capture
      (set-flag is-captured? true)
  )
  back
  $1 (verify empty?)
  mark
  (while (and (on-board? $1) (enemy? $1))
      $1
      capture
      (set-flag is-captured? true)
  )
  back
  (verify (flag? is-captured?))
)

(define walhall-jotunn-push (
  (jotunn-push-body)
  (if (in-zone? goal-zone)
      (add-partial Jotunn capture-type)
   else  
      (add-partial $3 capture-type)
  )
))

(define jotunn-push (
  (jotunn-push-body)
  (add-partial $3 capture-type)
))

(define valkyrie-slide (
  (while (empty? $1)
      $1
      (check-fire)
      (add $2)
  )
))

(define valkyrie-jump (
  (while (empty? $1)
      $1
  )
  (verify (enemy? $1))
  (verify (not-piece? Mount $1))
  $1
  (verify (empty? $1))
  $1
  (while empty?
      mark
      (while empty? 
        (opposite $1)
      ) 
      capture
      back
      (check-fire)
      (add-partial $2 capture-type)
      $1
  )
))

(define check-fire-dir
  (if (on-board? $2)
      (if (piece? $1 $2)
          (set-flag is-fired? true)
      )
  )
)

(define check-fire
  (set-flag is-fired? false)
  (check-fire-dir SurtrA n) (check-fire-dir SurtrA nw)
  (check-fire-dir SurtrA s) (check-fire-dir SurtrA se)
  (check-fire-dir SurtrA w) (check-fire-dir SurtrA sw)
  (check-fire-dir SurtrA e) (check-fire-dir SurtrA ne)
  (check-fire-dir SurtrR n) (check-fire-dir SurtrR nw)
  (check-fire-dir SurtrR s) (check-fire-dir SurtrR se)
  (check-fire-dir SurtrR w) (check-fire-dir SurtrR sw)
  (check-fire-dir SurtrR e) (check-fire-dir SurtrR ne)
  (check-fire-dir EldthursarA n) (check-fire-dir EldthursarR nw)
  (check-fire-dir EldthursarA s) (check-fire-dir EldthursarR se)
  (check-fire-dir EldthursarA w) (check-fire-dir EldthursarR sw)
  (check-fire-dir EldthursarA e) (check-fire-dir EldthursarR ne)
  (check-fire-dir Eldthursar n) (check-fire-dir Eldthursar nw)
  (check-fire-dir Eldthursar s) (check-fire-dir Eldthursar se)
  (check-fire-dir Eldthursar w) (check-fire-dir Eldthursar sw)
  (check-fire-dir Eldthursar e) (check-fire-dir Eldthursar ne)
  (if (flag? is-fired?) capture)
)

(define init-flags
  (set-flag is-surtr? (or (piece? SurtrA) (piece? SurtrR) (piece? Eldthursar) (piece? EldthursarA) (piece? EldthursarR)))
  (set-flag is-eda? (or (piece? SurtrA) (piece? SurtrR) (piece? Eldthursar) (piece? EldthursarA)))
  (set-flag is-edr? (or (piece? SurtrA) (piece? SurtrR) (piece? Eldthursar) (piece? EldthursarR)))
)

(define common-step-body
  (init-flags)
  $1 (verify not-friend?)
  (verify (not-piece? Mount))
  (if (not-flag? is-surtr?)
      (check-fire)
  )
  (if (flag? is-eda?)
      (fire nw) (fire se)
      (fire sw) (fire ne)
  )
  (if (flag? is-edr?)
      (fire n) (fire s)
      (fire w) (fire e)
  )
  (add $2)
)

(define common-step (
  (common-step-body)
))

(define empty-step-body
  (init-flags)
  $1 (verify empty?)
  (if (not-flag? is-surtr?)
      (check-fire)
  )
  (if (flag? is-eda?)
      (fire nw) (fire se)
      (fire sw) (fire ne)
  )
  (if (flag? is-edr?)
      (fire n) (fire s)
      (fire w) (fire e)
  )
  (add $2)
)

(define empty-step (
  (empty-step-body)
))

(define common-strike (
  (create $2)
  $1 (verify enemy?)
  (verify (not-piece? Mount))
  capture add
))

(define fire
  (if (and (not-empty? $1)
           (not-piece? Mount $1)
           (not-piece? SurtrA $1) (not-piece? SurtrR $1) 
           (not-piece? Eldthursar $1) (not-piece? EldthursarA $1) (not-piece? EldthursarR $1))
      (capture $1)
  )
)

(define bifrost-surtr-step (
  (create Mount)
  $1 (verify not-friend?)
  (fire n) (fire nw)
  (fire s) (fire se)
  (fire w) (fire sw)
  (fire e) (fire ne)
  (add $2)
))

(define bifrost-common-step (
  (create Mount)
  (common-step-body)
))

(define bifrost-empty-step (
  (create Mount)
  (empty-step-body)
))

(define drop-piece (
  (verify empty?)
  add
))

(define bifrost-eda-order (
  (create Mount)
  $1 (verify friend?)
  (verify (piece? $2$3))
  (change-type $2$4)
  $5 (verify not-friend?)
  (fire n) (fire s)
  (fire w) (fire e)
  add
))

(define bifrost-edr-order (
  (create Mount)
  $1 (verify friend?)
  (verify (piece? $2$3))
  (change-type $2$4)
  $5 (verify not-friend?)
  (fire nw) (fire se)
  (fire sw) (fire ne)
  add
))

(define bifrost-order-eda
  (bifrost-eda-order nwnw Surtr R A nwnw) (bifrost-eda-order nwnw Surtr R A nene) (bifrost-eda-order nwnw Surtr R A swsw) 
  (bifrost-eda-order nene Surtr R A nwnw) (bifrost-eda-order nene Surtr R A nene) (bifrost-eda-order nene Surtr R A sese) 
  (bifrost-eda-order sese Surtr R A nene) (bifrost-eda-order sese Surtr R A swsw) (bifrost-eda-order sese Surtr R A sese) 
  (bifrost-eda-order swsw Surtr R A nwnw) (bifrost-eda-order swsw Surtr R A swsw) (bifrost-eda-order swsw Surtr R A sese) 
  (bifrost-eda-order nn Surtr A R nn) (bifrost-eda-order nn Surtr A R ee) (bifrost-eda-order nn Surtr A R ww)
  (bifrost-eda-order ee Surtr A R nn) (bifrost-eda-order ee Surtr A R ee) (bifrost-eda-order ee Surtr A R ss) 
  (bifrost-eda-order ss Surtr A R ee) (bifrost-eda-order ss Surtr A R ss) (bifrost-eda-order ss Surtr A R ww)
  (bifrost-eda-order ww Surtr A R nn) (bifrost-eda-order ww Surtr A R ss) (bifrost-eda-order ww Surtr A R ww)
)

(define bifrost-order-edr
  (bifrost-edr-order nwnw Surtr R A nwnw) (bifrost-edr-order nwnw Surtr R A nene) (bifrost-edr-order nwnw Surtr R A swsw) 
  (bifrost-edr-order nene Surtr R A nwnw) (bifrost-edr-order nene Surtr R A nene) (bifrost-edr-order nene Surtr R A sese) 
  (bifrost-edr-order sese Surtr R A nene) (bifrost-edr-order sese Surtr R A swsw) (bifrost-edr-order sese Surtr R A sese) 
  (bifrost-edr-order swsw Surtr R A nwnw) (bifrost-edr-order swsw Surtr R A swsw) (bifrost-edr-order swsw Surtr R A sese) 
  (bifrost-edr-order nn Surtr A R nn) (bifrost-edr-order nn Surtr A R ee) (bifrost-edr-order nn Surtr A R ww)
  (bifrost-edr-order ee Surtr A R nn) (bifrost-edr-order ee Surtr A R ee) (bifrost-edr-order ee Surtr A R ss) 
  (bifrost-edr-order ss Surtr A R ee) (bifrost-edr-order ss Surtr A R ss) (bifrost-edr-order ss Surtr A R ww)
  (bifrost-edr-order ww Surtr A R nn) (bifrost-edr-order ww Surtr A R ss) (bifrost-edr-order ww Surtr A R ww)
)

(define all-dirs
  (directions (n 0 -1) (s 0 1) (e 1 0) (w -1 0)
      (nw -1 -1) (sw -1 1) (ne 1 -1) (se 1 1)
      (nne 1 -2) (nnw -1 -2) (ssw -1 2) (sse 1 2)
      (nee 2 -1) (nww -2 -1) (sww -2 1) (see 2 1)
      (nn 0 -2) (ss 0 2) (ee 2 0) (ww -2 0)
      (nwnw -2 -2) (swsw -2 2) (nene 2 -2) (sese 2 2)
  )
)

(define bifrost-common
  (turn-order 
     (Dark normal-type)
     (Light normal-type)
  )

  (board
    (image "../images/Ragnarok/bifrost.bmp")
    (grid
      (start-rectangle 2 2 82 82)
      (dimensions
        ("a/b/c/d/e/f/g" (80 0)) ; files
        ("9/8/7/6/5/4/3/2/1" (0 80)) ; ranks
      )
      (all-dirs)
    )
    (zone (name goal-zone) (players Dark)
          (positions a1 b1 c1 d1 e1 f1 g1)
    )
  )

  (piece
     (name Mount)
     (help " ")
     (image Dark "../images/Ragnarok/hole.bmp")
  )
  (piece
     (name SurtrA)
     (help "Surtr")
     (image Dark "../images/Ragnarok/sra.bmp")
     (moves
        (move-type normal-type)
        (bifrost-surtr-step nne SurtrR) (bifrost-surtr-step see SurtrR)
        (bifrost-surtr-step ssw SurtrR) (bifrost-surtr-step nww SurtrR)
     )
  )
  (piece
     (name SurtrR)
     (help "Surtr")
     (image Dark "../images/Ragnarok/srr.bmp")
     (moves
        (move-type normal-type)
        (bifrost-surtr-step nnw SurtrA) (bifrost-surtr-step nee SurtrA)
        (bifrost-surtr-step sse SurtrA) (bifrost-surtr-step sww SurtrA)
     )
  )
  (piece
     (name EldthursarA)
     (help "Eldthursar")
     (image Dark "../images/Ragnarok/eda.bmp")
     (moves
        (move-type normal-type)
        (bifrost-common-step nw EldthursarR) (bifrost-common-step ne EldthursarR)
        (bifrost-common-step se EldthursarR) (bifrost-common-step sw EldthursarR)
        (bifrost-empty-step nwnw EldthursarR) (bifrost-empty-step nene EldthursarR)
        (bifrost-empty-step swsw EldthursarR) (bifrost-empty-step sese EldthursarR)
        (bifrost-empty-step nn EldthursarR) (bifrost-empty-step ss EldthursarR)
        (bifrost-order-eda)
     )
  )
  (piece
     (name EldthursarR)
     (help "Eldthursar")
     (image Dark "../images/Ragnarok/edr.bmp")
     (moves
        (move-type normal-type)
        (bifrost-common-step n EldthursarA) (bifrost-common-step e EldthursarA)
        (bifrost-common-step s EldthursarA) (bifrost-common-step w EldthursarA)
        (bifrost-empty-step nnw EldthursarA) (bifrost-empty-step nne EldthursarA)
        (bifrost-empty-step ssw EldthursarA) (bifrost-empty-step sse EldthursarA)
        (bifrost-empty-step ww EldthursarA) (bifrost-empty-step ee EldthursarA)
        (bifrost-order-edr)
     )
  )
  (loss-condition (Light Dark) (pieces-remaining 0) )
  (loss-condition (Light Dark) stalemated )
  (win-condition (Dark) (absolute-config SurtrA SurtrR (goal-zone) ) )
  (loss-condition (Dark) (and (pieces-remaining 0 SurtrA) (pieces-remaining 0 SurtrR)) )
)

(variant
  (title "Bifrost (easy)")
  (bifrost-common)
  (board-setup
     (Dark 
       (SurtrA d9)
       (EldthursarA a8 g8)
     )
     (Light
       (AlfrA b2 f2 d3)
     )
  )
)

(variant
  (title "Bifrost (normal)")
  (bifrost-common)
  (board-setup
     (Dark 
       (SurtrA d9)
       (EldthursarA a8 g8)
     )
     (Light
       (AlfrA b2 f2 d3 c1 e1)
     )
  )
)

(variant
  (title "Bifrost (hard)")
  (bifrost-common)
  (board-setup
     (Dark 
       (SurtrA b9)
       (EldthursarA f9)
     )
     (Light
       (AlfrA b2 f2 c1 e1)
     )
  )
)

(variant
  (title "-")
)

(define walhall-common
  (turn-order 
     (Light normal-type)
     (Dark normal-type)
  )

  (board
    (image "../images/Ragnarok/walhall.bmp")
    (grid
      (start-rectangle 2 2 82 82)
      (dimensions
        ("a/b/c/d/e/f/g/h" (80 0)) ; files
        ("8/7/6/5/4/3/2/1" (0 80)) ; ranks
      )
      (all-dirs)
    )
    (zone (name goal-zone) (players Dark)
          (positions a1 b1 c1 d1 e1 f1 g1 h1)
    )
  )

  (piece
     (name JotunnA)
     (help "Jotunn")
     (image Dark "../images/Ragnarok/jta.bmp")
     (moves
        (move-type normal-type)
        (walhall-jotunn-step nw se JotunnR) (walhall-jotunn-step sw ne JotunnR)
        (walhall-jotunn-step ne sw JotunnR) (walhall-jotunn-step se nw JotunnR)
        (walhall-jotunn-push nw se JotunnR) (walhall-jotunn-push sw ne JotunnR)
        (walhall-jotunn-push ne sw JotunnR) (walhall-jotunn-push se nw JotunnR)
        (move-type capture-type)
        (walhall-jotunn-push nw se JotunnR) (walhall-jotunn-push sw ne JotunnR)
        (walhall-jotunn-push ne sw JotunnR) (walhall-jotunn-push se nw JotunnR)
     )
  )
  (piece
     (name JotunnR)
     (help "Jotunn")
     (image Dark "../images/Ragnarok/jtr.bmp")
     (moves
        (move-type normal-type)
        (walhall-jotunn-step n s JotunnA) (walhall-jotunn-step s n JotunnA)
        (walhall-jotunn-step e w JotunnA) (walhall-jotunn-step w e JotunnA)
        (walhall-jotunn-push n s JotunnA) (walhall-jotunn-push s n JotunnA)
        (walhall-jotunn-push e w JotunnA) (walhall-jotunn-push w e JotunnA)
        (move-type capture-type)
        (walhall-jotunn-push n s JotunnA) (walhall-jotunn-push s n JotunnA)
        (walhall-jotunn-push e w JotunnA) (walhall-jotunn-push w e JotunnA)
     )
  )
  (piece
     (name Jotunn)
     (help "Jotunn")
     (image Dark "../images/Ragnarok/jt.bmp")
     (moves
        (move-type normal-type)
        (walhall-jotunn-step nw se Jotunn) (walhall-jotunn-step sw ne Jotunn)
        (walhall-jotunn-step ne sw Jotunn) (walhall-jotunn-step se nw Jotunn)
        (walhall-jotunn-push nw se Jotunn) (walhall-jotunn-push sw ne Jotunn)
        (walhall-jotunn-push ne sw Jotunn) (walhall-jotunn-push se nw Jotunn)
        (walhall-jotunn-step n  s  Jotunn) (walhall-jotunn-step s  n  Jotunn)
        (walhall-jotunn-step e  w  Jotunn) (walhall-jotunn-step w  e  Jotunn)
        (walhall-jotunn-push n  s  Jotunn) (walhall-jotunn-push s  n  Jotunn)
        (walhall-jotunn-push e  w  Jotunn) (walhall-jotunn-push w  e  Jotunn)
        (move-type capture-type)
        (walhall-jotunn-push nw se Jotunn) (walhall-jotunn-push sw ne Jotunn)
        (walhall-jotunn-push ne sw Jotunn) (walhall-jotunn-push se nw Jotunn)
        (walhall-jotunn-push n  s  Jotunn) (walhall-jotunn-push s  e  Jotunn)
        (walhall-jotunn-push e  w  Jotunn) (walhall-jotunn-push w  n  Jotunn)
     )
  )
  (win-condition (Dark) (pieces-remaining 4 Jotunn) )
  (loss-condition (Dark) (pieces-remaining 3) )
  (loss-condition (Light) (pieces-remaining 0) )
  (loss-condition (Light Dark) stalemated )
)

(variant
  (title "Walhall (easy)")
  (walhall-common)
  (board-setup
     (Dark 
       (JotunnA b8 c8 d8 e8 f8 g8)
     )
     (Light
       (ValkyrieA c1 d1 e1 f1)
     )
  )
)

(variant
  (title "Walhall (normal)")
  (walhall-common)
  (board-setup
     (Dark 
       (JotunnA b8 c8 d8 e8 f8 g8 b7 c7 d7 e7 f7 g7)
     )
     (Light
       (ValkyrieA c1 d1 e1 f1)
     )
  )
)

(variant
  (title "Walhall (hard)")
  (walhall-common)
  (board-setup
     (Dark 
       (JotunnA b8 c8 d8 e8 f8 g8 b7 c7 d7 e7 f7 g7 b6 c6 d6 e6 f6 g6)
     )
     (Light
       (ValkyrieA c1 d1 e1 f1)
     )
  )
)

(variant
  (title "-")
)

(game 
  (title "Vigrid")
  (default)

  (option "animate captures" false)
  (option "animate drops"    false)
  (option "pass turn"        false)
  (option "pass partial"     true)
  (option "highlight goals"  false)
  (option "prevent flipping" true)
  (option "recycle captures" false)
  (option "smart moves"      false)

  (move-sound    "Audio/Clack.wav")
  (release-sound "Audio/Clack.wav")
  (drop-sound    "Audio/Clack.wav")
  (capture-sound "")
  (change-sound  "")
  (click-sound   "")
  (draw-sound    "")

  (players Light Dark)
  (turn-order 
     (Light setup-type)
     (Dark setup-type)
     repeat
     (Light normal-type)
     (Dark normal-type)
  )

  (board
    (image "../images/Ragnarok/vigrid.bmp")
    (grid
      (start-rectangle 2 2 82 82)
      (dimensions
        ("a/b/c/d/e/f/g/h/i" (80 0)) ; files
        ("9/8/7/6/5/4/3/2/1" (0 80)) ; ranks
      )
      (all-dirs)
    )
  )

  (piece
     (name Mount)
     (help " ")
     (image Dark "../images/Ragnarok/mountain.bmp")
  )
  (piece
     (name OdinA)
     (help "Odin")
     (image Light "../images/Ragnarok/oda.bmp")
     (moves
        (move-type normal-type)
        (common-step n OdinR) (common-step nn OdinR) 
        (common-step s OdinR) (common-step ss OdinR) 
        (common-step w OdinR) (common-step ww OdinR)
        (common-step e OdinR) (common-step ee OdinR)
     )
     (drops
        (move-type setup-type)
        (drop-piece)
     )
  )
  (piece
     (name OdinR)
     (help "Odin")
     (image Light "../images/Ragnarok/odr.bmp")
     (moves
        (move-type normal-type)
        (common-step ne OdinA) (common-step nene OdinA)
        (common-step sw OdinA) (common-step swsw OdinA)
        (common-step se OdinA) (common-step sese OdinA)
     )
  )
  (piece
     (name TyrA)
     (help "Tyr")
     (image Light "../images/Ragnarok/tya.bmp")
     (moves
        (move-type normal-type)
        (common-step n TyrR) (common-step nnw TyrR)
        (common-step s TyrR) (common-step nww TyrR)
        (common-step w TyrR) (common-step sww TyrR)
        (empty-step nee TyrR) (empty-step see TyrR)
        (empty-step e TyrR) (empty-step nne TyrR)
     )
  )
  (piece
     (name TyrR)
     (help "Tyr")
     (image Light "../images/Ragnarok/tyr.bmp")
     (moves
        (move-type normal-type)
        (common-step nw TyrA) (empty-step ne TyrA)
        (common-step sw TyrA) (empty-step se TyrA)
        (common-step ww TyrA) (common-step nn TyrA)
        (empty-step ee TyrA) (common-step nwnw TyrA)
        (empty-step nene TyrA)
     )
  )
  (piece
     (name LokiA)
     (help "Loki")
     (image Dark "../images/Ragnarok/lka.bmp")
     (moves
        (move-type normal-type)
        (common-step n LokiR) (common-step nne LokiR) 
        (common-step e LokiR) (common-step see LokiR) 
        (common-step sw LokiR) (common-step ssw LokiR) 
        (common-step sww LokiR) 
     )
     (drops
        (move-type setup-type)
        (drop-piece)
     )
  )
  (piece
     (name LokiR)
     (help "Loki")
     (image Dark "../images/Ragnarok/lkr.bmp")
     (moves
        (move-type normal-type)
        (common-step s LokiA) (common-step sse LokiA) 
        (common-step e LokiA) (common-step nee LokiA) 
        (common-step nw LokiA) (common-step nnw LokiA) 
        (common-step nww LokiA) 
     )
  )
  (piece
     (name SurtrA)
     (help "Surtr")
     (image Dark "../images/Ragnarok/sra.bmp")
     (moves
        (move-type normal-type)
        (common-step nne SurtrR) (common-step see SurtrR)
        (common-step ssw SurtrR) (common-step nww SurtrR)
     )
  )
  (piece
     (name SurtrR)
     (help "Surtr")
     (image Dark "../images/Ragnarok/srr.bmp")
     (moves
        (move-type normal-type)
        (common-step nnw SurtrA) (common-step nee SurtrA)
        (common-step sse SurtrA) (common-step sww SurtrA)
     )
  )
  (piece
     (name EldthursarA)
     (help "Eldthursar")
     (image Dark "../images/Ragnarok/eda.bmp")
     (moves
        (move-type normal-type)
        (common-step nw EldthursarR) (common-step ne EldthursarR)
        (common-step se EldthursarR) (common-step sw EldthursarR)
        (empty-step nwnw EldthursarR) (empty-step nene EldthursarR)
        (empty-step swsw EldthursarR) (empty-step sese EldthursarR)
        (empty-step nn EldthursarR) (empty-step ss EldthursarR)
     )
  )
  (piece
     (name EldthursarR)
     (help "Eldthursar")
     (image Dark "../images/Ragnarok/edr.bmp")
     (moves
        (move-type normal-type)
        (common-step n EldthursarA) (common-step e EldthursarA)
        (common-step s EldthursarA) (common-step w EldthursarA)
        (empty-step nnw EldthursarA) (empty-step nne EldthursarA)
        (empty-step ssw EldthursarA) (empty-step sse EldthursarA)
        (empty-step ww EldthursarA) (empty-step ee EldthursarA)
     )
  )
  (piece
     (name Eldthursar)
     (help "Eldthursar")
     (image Dark "../images/Ragnarok/ed.bmp")
     (moves
        (move-type normal-type)
        (empty-step nwnw Eldthursar) (empty-step nene Eldthursar)
        (empty-step swsw Eldthursar) (empty-step sese Eldthursar)
        (empty-step nn Eldthursar) (empty-step ss Eldthursar)
        (empty-step nnw Eldthursar) (empty-step nne Eldthursar)
        (empty-step ssw Eldthursar) (empty-step sse Eldthursar)
        (empty-step ww Eldthursar) (empty-step ee Eldthursar)
     )
  )
  (piece
     (name AlfrA)
     (help "Alfr")
     (image Light "../images/Ragnarok/ala.bmp")
     (moves
        (move-type normal-type)
        (common-step n AlfrR) (common-step s AlfrR)
        (common-step w AlfrR) (common-step e AlfrR)
        (empty-step nnw AlfrR) (empty-step nne AlfrR)
        (empty-step ssw AlfrR) (empty-step sse AlfrR)
        (common-strike nn AlfrR) (common-strike ss AlfrR)
        (common-strike ww AlfrR) (common-strike ee AlfrR)
     )
  )
  (piece
     (name AlfrR)
     (help "Alfr")
     (image Light "../images/Ragnarok/alr.bmp")
     (moves
        (move-type normal-type)
        (common-step nw AlfrA) (common-step sw AlfrA)
        (common-step ne AlfrA) (common-step se AlfrA)
        (empty-step nww AlfrA) (empty-step nee AlfrA)
        (empty-step sww AlfrA) (empty-step see AlfrA)
        (common-strike nwnw AlfrA) (common-strike swsw AlfrA)
        (common-strike nene AlfrA) (common-strike sese AlfrA)
     )
  )
  (piece
     (name Alfr)
     (help "Alfr")
     (image Light "../images/Ragnarok/al.bmp")
     (moves
        (move-type normal-type)
        (common-step n Alfr) (common-step s Alfr)
        (common-step w Alfr) (common-step e Alfr)
        (common-step nw Alfr) (common-step sw Alfr)
        (common-step ne Alfr) (common-step se Alfr)
        (empty-step nnw Alfr) (empty-step nne Alfr)
        (empty-step ssw Alfr) (empty-step sse Alfr)
        (empty-step nww Alfr) (empty-step nee Alfr)
        (empty-step sww Alfr) (empty-step see Alfr)
        (common-strike nn Alfr) (common-strike ss Alfr)
        (common-strike ww Alfr) (common-strike ee Alfr)
        (common-strike nwnw Alfr) (common-strike swsw Alfr)
        (common-strike nene Alfr) (common-strike sese Alfr)
     )
  )
  (piece
     (name ValkyrieA)
     (help "Valkyrie")
     (image Light "../images/Ragnarok/vla.bmp")
     (moves
        (move-type normal-type)
        (valkyrie-slide nw ValkyrieR) (valkyrie-slide ne ValkyrieR)
        (valkyrie-slide sw ValkyrieR) (valkyrie-slide se ValkyrieR)
        (valkyrie-jump nw ValkyrieR) (valkyrie-jump ne ValkyrieR)
        (valkyrie-jump sw ValkyrieR) (valkyrie-jump se ValkyrieR)
        (move-type capture-type)
        (valkyrie-jump nw ValkyrieR) (valkyrie-jump ne ValkyrieR)
        (valkyrie-jump sw ValkyrieR) (valkyrie-jump se ValkyrieR)
     )
  )
  (piece
     (name ValkyrieR)
     (help "Valkyrie")
     (image Light "../images/Ragnarok/vlr.bmp")
     (moves
        (move-type normal-type)
        (valkyrie-slide n ValkyrieA) (valkyrie-slide e ValkyrieA)
        (valkyrie-slide s ValkyrieA) (valkyrie-slide w ValkyrieA)
        (valkyrie-jump n ValkyrieA) (valkyrie-jump e ValkyrieA)
        (valkyrie-jump s ValkyrieA) (valkyrie-jump w ValkyrieA)
        (move-type capture-type)
        (valkyrie-jump n ValkyrieA) (valkyrie-jump e ValkyrieA)
        (valkyrie-jump s ValkyrieA) (valkyrie-jump w ValkyrieA)
     )
  )
  (piece
     (name Valkyrie)
     (help "Valkyrie")
     (image Light "../images/Ragnarok/vl.bmp")
     (moves
        (move-type normal-type)
        (valkyrie-slide nw Valkyrie) (valkyrie-slide ne Valkyrie)
        (valkyrie-slide sw Valkyrie) (valkyrie-slide se Valkyrie)
        (valkyrie-slide n Valkyrie) (valkyrie-slide e Valkyrie)
        (valkyrie-slide s Valkyrie) (valkyrie-slide w Valkyrie)
        (valkyrie-jump nw Valkyrie) (valkyrie-jump ne Valkyrie)
        (valkyrie-jump sw Valkyrie) (valkyrie-jump se Valkyrie)
        (valkyrie-jump n Valkyrie) (valkyrie-jump e Valkyrie)
        (valkyrie-jump s Valkyrie) (valkyrie-jump w Valkyrie)
        (move-type capture-type)
        (valkyrie-jump nw Valkyrie) (valkyrie-jump ne Valkyrie)
        (valkyrie-jump sw Valkyrie) (valkyrie-jump se Valkyrie)
        (valkyrie-jump n Valkyrie) (valkyrie-jump e Valkyrie)
        (valkyrie-jump s Valkyrie) (valkyrie-jump w Valkyrie)
     )
  )
  (piece
     (name JotunnA)
     (help "Jotunn")
     (image Dark "../images/Ragnarok/jta.bmp")
     (moves
        (move-type normal-type)
        (jotunn-step nw se JotunnR) (jotunn-step sw ne JotunnR)
        (jotunn-step ne sw JotunnR) (jotunn-step se nw JotunnR)
        (jotunn-push nw se JotunnR) (jotunn-push sw ne JotunnR)
        (jotunn-push ne sw JotunnR) (jotunn-push se nw JotunnR)
        (move-type capture-type)
        (jotunn-push nw se JotunnR) (jotunn-push sw ne JotunnR)
        (jotunn-push ne sw JotunnR) (jotunn-push se nw JotunnR)
     )
  )
  (piece
     (name JotunnR)
     (help "Jotunn")
     (image Dark "../images/Ragnarok/jtr.bmp")
     (moves
        (move-type normal-type)
        (jotunn-step n s JotunnA) (jotunn-step s n JotunnA)
        (jotunn-step e w JotunnA) (jotunn-step w e JotunnA)
        (jotunn-push n s JotunnA) (jotunn-push s n JotunnA)
        (jotunn-push e w JotunnA) (jotunn-push w e JotunnA)
        (move-type capture-type)
        (jotunn-push n s JotunnA) (jotunn-push s n JotunnA)
        (jotunn-push e w JotunnA) (jotunn-push w e JotunnA)
     )
  )
  (piece
     (name Jotunn)
     (help "Jotunn")
     (image Dark "../images/Ragnarok/jt.bmp")
     (moves
        (move-type normal-type)
        (jotunn-step nw se Jotunn) (jotunn-step sw ne Jotunn)
        (jotunn-step ne sw Jotunn) (jotunn-step se nw Jotunn)
        (jotunn-push nw se Jotunn) (jotunn-push sw ne Jotunn)
        (jotunn-push ne sw Jotunn) (jotunn-push se nw Jotunn)
        (jotunn-step n  s  Jotunn) (jotunn-step s  n  Jotunn)
        (jotunn-step e  w  Jotunn) (jotunn-step w  e  Jotunn)
        (jotunn-push n  s  Jotunn) (jotunn-push s  n  Jotunn)
        (jotunn-push e  w  Jotunn) (jotunn-push w  e  Jotunn)
        (move-type capture-type)
        (jotunn-push nw se Jotunn) (jotunn-push sw ne Jotunn)
        (jotunn-push ne sw Jotunn) (jotunn-push se nw Jotunn)
        (jotunn-push n  s  Jotunn) (jotunn-push s  e  Jotunn)
        (jotunn-push e  w  Jotunn) (jotunn-push w  n  Jotunn)
     )
  )

  (board-setup
     (Light
       (OdinA off 1)
     )
     (Dark
       (LokiA off 1)
     )
  )

  (loss-condition (Light Dark) stalemated )
)
