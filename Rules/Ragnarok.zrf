(define jotunn-step-body
  (if (on-board? $2)
      (verify (not-enemy? $2))
  )
  $1 (verify empty?)
  (if (on-board? $1)
      (verify (not-enemy? $1))
  )
)

(define walhall-jotunn-step (
  (jotunn-step-body)
  (if (in-zone? goal-zone)
      (add Jotunn)
   else  
      (add $3)
  )
))

(define jotunn-step (
  (jotunn-step-body)
  (add $3)
))

(define jotunn-push-body
  (set-flag is-captured? false)
  mark
  (while (and (on-board? $2) (enemy? $2))
      $2
      capture
      (set-flag is-captured? true)
  )
  back
  $1 (verify empty?)
  mark
  (while (and (on-board? $1) (enemy? $1))
      $1
      capture
      (set-flag is-captured? true)
  )
  back
  (verify (flag? is-captured?))
)

(define walhall-jotunn-push (
  (jotunn-push-body)
  (if (in-zone? goal-zone)
      (add-partial Jotunn capture-type)
   else  
      (add-partial $3 capture-type)
  )
))

(define jotunn-push (
  (jotunn-push-body)
  (add-partial $3 capture-type)
))

(define common-slide-body
  (while (empty? $1)
      $1
      (check-fire)
      (add $2)
  ) 
  $1 (verify enemy?)
  (check-fire)
)

(define common-slide (
  (common-slide-body)
  (add $2)
))

(define beast-slide (
  (common-slide-body)
  (capture-enemy $1)
  (capture-enemy $3)
  (capture-enemy $4)
  (add $2)
))

(define valkyrie-slide (
  (while (empty? $1)
      $1
      (check-fire)
      (add $2)
  )
))

(define valkyrie-jump (
  (while (empty? $1)
      $1
  )
  (verify (enemy? $1))
  (verify (not-piece? Mount $1))
  $1
  (verify (empty? $1))
  $1
  (while empty?
      mark
      (while empty? 
        (opposite $1)
      ) 
      capture
      back
      (check-fire)
      (add-partial $2 capture-type)
      $1
  )
))

(define capture-enemy
  (if (and (on-board? $1) (enemy? $1))
      (capture $1)
  )
)

(define check-fire-dir
  (if (on-board? $2)
      (if (piece? $1 $2)
          (set-flag is-fired? true)
      )
  )
)

(define check-fire
  (set-flag is-fired? false)
  (check-fire-dir SurtrA n) (check-fire-dir SurtrA nw)
  (check-fire-dir SurtrA s) (check-fire-dir SurtrA se)
  (check-fire-dir SurtrA w) (check-fire-dir SurtrA sw)
  (check-fire-dir SurtrA e) (check-fire-dir SurtrA ne)
  (check-fire-dir SurtrR n) (check-fire-dir SurtrR nw)
  (check-fire-dir SurtrR s) (check-fire-dir SurtrR se)
  (check-fire-dir SurtrR w) (check-fire-dir SurtrR sw)
  (check-fire-dir SurtrR e) (check-fire-dir SurtrR ne)
  (check-fire-dir EldthursarA n) (check-fire-dir EldthursarR nw)
  (check-fire-dir EldthursarA s) (check-fire-dir EldthursarR se)
  (check-fire-dir EldthursarA w) (check-fire-dir EldthursarR sw)
  (check-fire-dir EldthursarA e) (check-fire-dir EldthursarR ne)
  (check-fire-dir Eldthursar n) (check-fire-dir Eldthursar nw)
  (check-fire-dir Eldthursar s) (check-fire-dir Eldthursar se)
  (check-fire-dir Eldthursar w) (check-fire-dir Eldthursar sw)
  (check-fire-dir Eldthursar e) (check-fire-dir Eldthursar ne)
  (if (flag? is-fired?) capture)
)

(define init-flags
  (set-flag is-surtr? (or (piece? SurtrA) (piece? SurtrR) (piece? Eldthursar) (piece? EldthursarA) (piece? EldthursarR)))
  (set-flag is-eda? (or (piece? SurtrA) (piece? SurtrR) (piece? Eldthursar) (piece? EldthursarA)))
  (set-flag is-edr? (or (piece? SurtrA) (piece? SurtrR) (piece? Eldthursar) (piece? EldthursarR)))
)

(define common-step-body
  (init-flags) $1 
  (verify (or not-friend? 
              (piece? SleipnirA) (piece? SleipnirR)
          )
  )
  (verify (not-piece? Mount))
  (if (not-flag? is-surtr?)
      (check-fire)
  )
  (if (flag? is-eda?)
      (fire nw) (fire se)
      (fire sw) (fire ne)
  )
  (if (flag? is-edr?)
      (fire n) (fire s)
      (fire w) (fire e)
  )
)

(define common-step (
  (common-step-body)
  (add $2)
))

(define zwerg-step (
  (common-step-body)
  (if (and (on-board? $1) (enemy? $1))
      (capture $1)
  )
  (add $2)
))

(define sleipnir-split (
  (create $2)
  (common-step-body)
  (add $3)
))

(define sleipnir-join (
  (verify (and (not-piece? SleipnirOA $1) (not-piece? SleipnirOR $1) (not-piece? SleipnirLA $1) (not-piece? SleipnirLR $1)))
  (common-step-body)
  (if (or (piece? SleipnirA) (piece? SleipnirR))
      (add $3)
   else
      (add $2)
  )
))

(define sleipnir-swap (
  (verify (or (piece? SleipnirOA $1) (piece? SleipnirOR $1) (piece? SleipnirLA $1) (piece? SleipnirLR $1)))
  (if (piece? SleipnirOA $1)
      (create Light OdinA)
  )
  (if (piece? SleipnirOR $1)
      (create Light OdinR)
  )
  (if (piece? SleipnirLA $1)
      (create Dark LokiA)
  )
  (if (piece? SleipnirLR $1)
      (create Dark LokiR)
  )
  (common-step-body)
  (add $2)
))

(define empty-step-body
  (init-flags)
  $1 (verify empty?)
  (if (not-flag? is-surtr?)
      (check-fire)
  )
  (if (flag? is-eda?)
      (fire nw) (fire se)
      (fire sw) (fire ne)
  )
  (if (flag? is-edr?)
      (fire n) (fire s)
      (fire w) (fire e)
  )
  (add $2)
)

(define empty-step (
  (empty-step-body)
))

(define common-strike (
  (create $2)
  $1 (verify enemy?)
  (verify (not-piece? Mount))
  (set-flag is-special? false)
  (if (piece? SleipnirOA)
      (create Light OdinA)
      (set-flag is-special? true)
  )
  (if (piece? SleipnirOR)
      (create Light OdinR)
      (set-flag is-special? true)
  )
  (if (piece? SleipnirLA)
      (create Dark LokiA)
      (set-flag is-special? true)
  )
  (if (piece? SleipnirLR)
      (create Dark LokiR)
      (set-flag is-special? true)
  )
  (if (not-flag? is-special?)
      capture 
  )
  add
))

(define thor-strike (
  (create $2)
  $1 (verify enemy?)
  (verify (not-piece? Mount))
  (capture-enemy n) (capture-enemy nw)
  (capture-enemy s) (capture-enemy sw)
  (capture-enemy e) (capture-enemy se)
  (capture-enemy w) (capture-enemy ne)
  capture add
))

(define fire
  (if (and (not-empty? $1)
           (not-piece? Mount $1)
           (not-piece? SurtrA $1) (not-piece? SurtrR $1) 
           (not-piece? Eldthursar $1) (not-piece? EldthursarA $1) (not-piece? EldthursarR $1))
      (capture $1)
  )
)

(define bifrost-surtr-step (
  (create Mount)
  $1 (verify not-friend?)
  (fire n) (fire nw)
  (fire s) (fire se)
  (fire w) (fire sw)
  (fire e) (fire ne)
  (add $2)
))

(define bifrost-common-step (
  (create Mount)
  (common-step-body)
  (add $2)
))

(define bifrost-empty-step (
  (create Mount)
  (empty-step-body)
))

(define drop-piece (
  (verify (in-zone? home-zone))
  (verify empty?)
  add
))

(define common-order-body
  $1 (verify friend?)
  (verify (piece? $2$3))
  (change-type $2$4)
  $5 
)

(define loki-order (
  mark
  (common-order-body)
  (if not-empty?
      cascade back
  )
  add
))

(define common-order (
  (common-order-body)
  (verify empty?)
  add
))

(define order-loki
  (loki-order sww $1 A R nww) (loki-order sww $1 A R nnw) (loki-order sww $1 A R sse)
  (loki-order nnw $1 A R nww) (loki-order nnw $1 A R nnw) (loki-order nnw $1 A R nee)
  (loki-order see $1 A R nee) (loki-order see $1 A R nnw) (loki-order see $1 A R sse)
  (loki-order sse $1 A R nww) (loki-order sse $1 A R nee) (loki-order sse $1 A R sse)
  (loki-order nww $1 R A nne) (loki-order nww $1 R A sse) (loki-order nww $1 R A see)
  (loki-order ssw $1 R A see) (loki-order ssw $1 R A ssw) (loki-order ssw $1 R A sww)
  (loki-order nne $1 R A sww) (loki-order nne $1 R A see) (loki-order nne $1 R A nne)
  (loki-order nee $1 R A ssw) (loki-order nee $1 R A nne) (loki-order nee $1 R A see)
)

(define order-hel
  (common-order e Hel A R e) (common-order w Hel A R w)
  (common-order n Hel R A n) (common-order s Hel R A s)
)

(define order-odin
  (common-order ee $1 $2 $3 swsw) (common-order ee $1 $2 $3 ss) (common-order ee $1 $2 $3 sese) (common-order ee $1 $2 $3 ee) (common-order ee $1 $2 $3 nene) (common-order ee $1 $2 $3 nn)
  (common-order nene $1 $2 $3 ww) (common-order nene $1 $2 $3 ss) (common-order nene $1 $2 $3 sese) (common-order nene $1 $2 $3 ee) (common-order nene $1 $2 $3 nene) (common-order nene $1 $2 $3 nn)
  (common-order nn $1 $2 $3 ww) (common-order nn $1 $2 $3 swsw) (common-order nn $1 $2 $3 sese) (common-order nn $1 $2 $3 ee) (common-order nn $1 $2 $3 nene) (common-order nn $1 $2 $3 nn)
  (common-order nwnw $1 $2 $3 ww) (common-order nwnw $1 $2 $3 swsw) (common-order nwnw $1 $2 $3 ss) (common-order nwnw $1 $2 $3 ee) (common-order nwnw $1 $2 $3 nene) (common-order nwnw $1 $2 $3 nn)
  (common-order ww $1 $2 $3 ww) (common-order ww $1 $2 $3 swsw) (common-order ww $1 $2 $3 ss) (common-order ww $1 $2 $3 sese) (common-order ww $1 $2 $3 nene) (common-order ww $1 $2 $3 nn)
  (common-order swsw $1 $2 $3 ww) (common-order swsw $1 $2 $3 swsw) (common-order swsw $1 $2 $3 ss) (common-order swsw $1 $2 $3 sese) (common-order swsw $1 $2 $3 ee) (common-order swsw $1 $2 $3 nn)
  (common-order ss $1 $2 $3 ww) (common-order ss $1 $2 $3 swsw) (common-order ss $1 $2 $3 ss) (common-order ss $1 $2 $3 sese) (common-order ss $1 $2 $3 ee) (common-order ss $1 $2 $3 nene)
)

(define order-tyr
  (common-order see Tyr $1 $2 sww) (common-order see Tyr $1 $2 see) (common-order see Tyr $1 $2 nee) (common-order see Tyr $1 $2 n)
  (common-order nee Tyr $1 $2 nww) (common-order nee Tyr $1 $2 see) (common-order nee Tyr $1 $2 nee) (common-order nee Tyr $1 $2 n)
  (common-order nww Tyr $1 $2 nww) (common-order nww Tyr $1 $2 sww) (common-order nww Tyr $1 $2 nee) (common-order nww Tyr $1 $2 n)
  (common-order sww Tyr $1 $2 nww) (common-order sww Tyr $1 $2 sww) (common-order sww Tyr $1 $2 see) (common-order sww Tyr $1 $2 n)
  (common-order s Tyr $1 $2 nww) (common-order s Tyr $1 $2 sww) (common-order s Tyr $1 $2 nee) (common-order s Tyr $1 $2 nee)
)

(define bifrost-eda-order (
  (create Mount)
  (common-order-body)
  (verify empty?)
  (fire n) (fire s)
  (fire w) (fire e)
  add
))

(define eda-order (
  (common-order-body)
  (verify empty?)
  (fire n) (fire s)
  (fire w) (fire e)
  add
))

(define bifrost-edr-order (
  (create Mount)
  (common-order-body)
  (verify empty?)
  (fire nw) (fire se)
  (fire sw) (fire ne)
  add
))

(define edr-order (
  (common-order-body)
  (verify empty?)
  (fire nw) (fire se)
  (fire sw) (fire ne)
  add
))

(define bifrost-surtr-order (
  (create Mount)
  (common-order-body)
  (verify empty?)
  (fire n) (fire s)
  (fire w) (fire e)
  (fire nw) (fire se)
  (fire sw) (fire ne)
  add
))

(define surtr-order (
  (common-order-body)
  (verify empty?)
  (fire n) (fire s)
  (fire w) (fire e)
  (fire nw) (fire se)
  (fire sw) (fire ne)
  add
))

(define bifrost-order-eda
  (bifrost-eda-order nwnw Surtr R A nwnw) (bifrost-eda-order nwnw Surtr R A nene) (bifrost-eda-order nwnw Surtr R A swsw) 
  (bifrost-eda-order nene Surtr R A nwnw) (bifrost-eda-order nene Surtr R A nene) (bifrost-eda-order nene Surtr R A sese) 
  (bifrost-eda-order sese Surtr R A nene) (bifrost-eda-order sese Surtr R A swsw) (bifrost-eda-order sese Surtr R A sese) 
  (bifrost-eda-order swsw Surtr R A nwnw) (bifrost-eda-order swsw Surtr R A swsw) (bifrost-eda-order swsw Surtr R A sese) 
  (bifrost-eda-order nn Surtr A R nn) (bifrost-eda-order nn Surtr A R ee) (bifrost-eda-order nn Surtr A R ww)
  (bifrost-eda-order ee Surtr A R nn) (bifrost-eda-order ee Surtr A R ee) (bifrost-eda-order ee Surtr A R ss) 
  (bifrost-eda-order ss Surtr A R ee) (bifrost-eda-order ss Surtr A R ss) (bifrost-eda-order ss Surtr A R ww)
  (bifrost-eda-order ww Surtr A R nn) (bifrost-eda-order ww Surtr A R ss) (bifrost-eda-order ww Surtr A R ww)
)

(define order-eda
  (eda-order nwnw Surtr R A nwnw) (eda-order nwnw Surtr R A nene) (eda-order nwnw Surtr R A swsw) 
  (eda-order nene Surtr R A nwnw) (eda-order nene Surtr R A nene) (eda-order nene Surtr R A sese) 
  (eda-order sese Surtr R A nene) (eda-order sese Surtr R A swsw) (eda-order sese Surtr R A sese) 
  (eda-order swsw Surtr R A nwnw) (eda-order swsw Surtr R A swsw) (eda-order swsw Surtr R A sese) 
  (eda-order nn Surtr A R nn) (eda-order nn Surtr A R ee) (eda-order nn Surtr A R ww)
  (eda-order ee Surtr A R nn) (eda-order ee Surtr A R ee) (eda-order ee Surtr A R ss) 
  (eda-order ss Surtr A R ee) (eda-order ss Surtr A R ss) (eda-order ss Surtr A R ww)
  (eda-order ww Surtr A R nn) (eda-order ww Surtr A R ss) (eda-order ww Surtr A R ww)
)

(define bifrost-order-edr
  (bifrost-edr-order nwnw Surtr R A nwnw) (bifrost-edr-order nwnw Surtr R A nene) (bifrost-edr-order nwnw Surtr R A swsw) 
  (bifrost-edr-order nene Surtr R A nwnw) (bifrost-edr-order nene Surtr R A nene) (bifrost-edr-order nene Surtr R A sese) 
  (bifrost-edr-order sese Surtr R A nene) (bifrost-edr-order sese Surtr R A swsw) (bifrost-edr-order sese Surtr R A sese) 
  (bifrost-edr-order swsw Surtr R A nwnw) (bifrost-edr-order swsw Surtr R A swsw) (bifrost-edr-order swsw Surtr R A sese) 
  (bifrost-edr-order nn Surtr A R nn) (bifrost-edr-order nn Surtr A R ee) (bifrost-edr-order nn Surtr A R ww)
  (bifrost-edr-order ee Surtr A R nn) (bifrost-edr-order ee Surtr A R ee) (bifrost-edr-order ee Surtr A R ss) 
  (bifrost-edr-order ss Surtr A R ee) (bifrost-edr-order ss Surtr A R ss) (bifrost-edr-order ss Surtr A R ww)
  (bifrost-edr-order ww Surtr A R nn) (bifrost-edr-order ww Surtr A R ss) (bifrost-edr-order ww Surtr A R ww)
)

(define order-edr
  (edr-order nwnw Surtr R A nwnw) (edr-order nwnw Surtr R A nene) (edr-order nwnw Surtr R A swsw) 
  (edr-order nene Surtr R A nwnw) (edr-order nene Surtr R A nene) (edr-order nene Surtr R A sese) 
  (edr-order sese Surtr R A nene) (edr-order sese Surtr R A swsw) (edr-order sese Surtr R A sese) 
  (edr-order swsw Surtr R A nwnw) (edr-order swsw Surtr R A swsw) (edr-order swsw Surtr R A sese) 
  (edr-order nn Surtr A R nn) (edr-order nn Surtr A R ee) (edr-order nn Surtr A R ww)
  (edr-order ee Surtr A R nn) (edr-order ee Surtr A R ee) (edr-order ee Surtr A R ss) 
  (edr-order ss Surtr A R ee) (edr-order ss Surtr A R ss) (edr-order ss Surtr A R ww)
  (edr-order ww Surtr A R nn) (edr-order ww Surtr A R ss) (edr-order ww Surtr A R ww)
)

(define bifrost-order-surtr
  (bifrost-surtr-order nwnw Surtr R A nwnw) (bifrost-surtr-order nwnw Surtr R A nene) (bifrost-surtr-order nwnw Surtr R A swsw) 
  (bifrost-surtr-order nene Surtr R A nwnw) (bifrost-surtr-order nene Surtr R A nene) (bifrost-surtr-order nene Surtr R A sese) 
  (bifrost-surtr-order sese Surtr R A nene) (bifrost-surtr-order sese Surtr R A swsw) (bifrost-surtr-order sese Surtr R A sese) 
  (bifrost-surtr-order swsw Surtr R A nwnw) (bifrost-surtr-order swsw Surtr R A swsw) (bifrost-surtr-order swsw Surtr R A sese) 
  (bifrost-surtr-order nn Surtr A R nn) (bifrost-surtr-order nn Surtr A R ee) (bifrost-surtr-order nn Surtr A R ww)
  (bifrost-surtr-order ee Surtr A R nn) (bifrost-surtr-order ee Surtr A R ee) (bifrost-surtr-order ee Surtr A R ss) 
  (bifrost-surtr-order ss Surtr A R ee) (bifrost-surtr-order ss Surtr A R ss) (bifrost-surtr-order ss Surtr A R ww)
  (bifrost-surtr-order ww Surtr A R nn) (bifrost-surtr-order ww Surtr A R ss) (bifrost-surtr-order ww Surtr A R ww)
)

(define order-surtr
  (surtr-order nwnw Surtr R A nwnw) (surtr-order nwnw Surtr R A nene) (surtr-order nwnw Surtr R A swsw) 
  (surtr-order nene Surtr R A nwnw) (surtr-order nene Surtr R A nene) (surtr-order nene Surtr R A sese) 
  (surtr-order sese Surtr R A nene) (surtr-order sese Surtr R A swsw) (surtr-order sese Surtr R A sese) 
  (surtr-order swsw Surtr R A nwnw) (surtr-order swsw Surtr R A swsw) (surtr-order swsw Surtr R A sese) 
  (surtr-order nn Surtr A R nn) (surtr-order nn Surtr A R ee) (surtr-order nn Surtr A R ww)
  (surtr-order ee Surtr A R nn) (surtr-order ee Surtr A R ee) (surtr-order ee Surtr A R ss) 
  (surtr-order ss Surtr A R ee) (surtr-order ss Surtr A R ss) (surtr-order ss Surtr A R ww)
  (surtr-order ww Surtr A R nn) (surtr-order ww Surtr A R ss) (surtr-order ww Surtr A R ww)
)

(define all-dirs
  (directions (n 0 -1) (s 0 1) (e 1 0) (w -1 0)
      (nw -1 -1) (sw -1 1) (ne 1 -1) (se 1 1)
      (nne 1 -2) (nnw -1 -2) (ssw -1 2) (sse 1 2)
      (nee 2 -1) (nww -2 -1) (sww -2 1) (see 2 1)
      (nn 0 -2) (ss 0 2) (ee 2 0) (ww -2 0)
      (nwnw -2 -2) (swsw -2 2) (nene 2 -2) (sese 2 2)
  )
)

(define bifrost-common
  (turn-order 
     (Dark normal-type)
     (Light normal-type)
  )

  (board
    (image "../images/Ragnarok/bifrost.bmp")
    (grid
      (start-rectangle 2 2 82 82)
      (dimensions
        ("a/b/c/d/e/f/g" (80 0)) ; files
        ("9/8/7/6/5/4/3/2/1" (0 80)) ; ranks
      )
      (all-dirs)
    )
    (zone (name goal-zone) (players Dark)
          (positions a1 b1 c1 d1 e1 f1 g1)
    )
    (zone (name home-zone) (players Light Dark)
          (positions a1)
    )
  )

  (piece
     (name Mount)
     (help " ")
     (image Dark "../images/Ragnarok/hole.bmp")
  )
  (piece
     (name SurtrA)
     (help "Surtr")
     (image Dark "../images/Ragnarok/sra.bmp")
     (moves
        (move-type normal-type)
        (bifrost-surtr-step nne SurtrR) (bifrost-surtr-step see SurtrR)
        (bifrost-surtr-step ssw SurtrR) (bifrost-surtr-step nww SurtrR)
     )
  )
  (piece
     (name SurtrR)
     (help "Surtr")
     (image Dark "../images/Ragnarok/srr.bmp")
     (moves
        (move-type normal-type)
        (bifrost-surtr-step nnw SurtrA) (bifrost-surtr-step nee SurtrA)
        (bifrost-surtr-step sse SurtrA) (bifrost-surtr-step sww SurtrA)
     )
  )
  (piece
     (name EldthursarA)
     (help "Eldthursar")
     (image Dark "../images/Ragnarok/eda.bmp")
     (moves
        (move-type normal-type)
        (bifrost-common-step nw EldthursarR) (bifrost-common-step ne EldthursarR)
        (bifrost-common-step se EldthursarR) (bifrost-common-step sw EldthursarR)
        (bifrost-empty-step nwnw EldthursarR) (bifrost-empty-step nene EldthursarR)
        (bifrost-empty-step swsw EldthursarR) (bifrost-empty-step sese EldthursarR)
        (bifrost-empty-step nn EldthursarR) (bifrost-empty-step ss EldthursarR)
        (bifrost-order-eda)
     )
  )
  (piece
     (name EldthursarR)
     (help "Eldthursar")
     (image Dark "../images/Ragnarok/edr.bmp")
     (moves
        (move-type normal-type)
        (bifrost-common-step n EldthursarA) (bifrost-common-step e EldthursarA)
        (bifrost-common-step s EldthursarA) (bifrost-common-step w EldthursarA)
        (bifrost-empty-step nnw EldthursarA) (bifrost-empty-step nne EldthursarA)
        (bifrost-empty-step ssw EldthursarA) (bifrost-empty-step sse EldthursarA)
        (bifrost-empty-step ww EldthursarA) (bifrost-empty-step ee EldthursarA)
        (bifrost-order-edr)
     )
  )
  (piece
     (name Eldthursar)
     (help "Eldthursar")
     (image Dark "../images/Ragnarok/ed.bmp")
     (moves
        (move-type normal-type)
        (bifrost-empty-step nwnw Eldthursar) (bifrost-empty-step nene Eldthursar)
        (bifrost-empty-step swsw Eldthursar) (bifrost-empty-step sese Eldthursar)
        (bifrost-empty-step nn Eldthursar) (bifrost-empty-step ss Eldthursar)
        (bifrost-empty-step nnw Eldthursar) (bifrost-empty-step nne Eldthursar)
        (bifrost-empty-step ssw Eldthursar) (bifrost-empty-step sse Eldthursar)
        (bifrost-empty-step ww Eldthursar) (bifrost-empty-step ee Eldthursar)
        (bifrost-order-surtr)
     )
  )
  (loss-condition (Light Dark) (pieces-remaining 0) )
  (loss-condition (Light Dark) stalemated )
  (win-condition (Dark) (absolute-config SurtrA SurtrR (goal-zone) ) )
  (loss-condition (Dark) (and (pieces-remaining 0 SurtrA) (pieces-remaining 0 SurtrR)) )
)

(variant
  (title "Bifrost (easy)")
  (bifrost-common)
  (board-setup
     (Dark 
       (SurtrA d9)
       (EldthursarA a8 g8)
     )
     (Light
       (AlfrA b2 f2 d3)
     )
  )
)

(variant
  (title "Bifrost (normal)")
  (bifrost-common)
  (board-setup
     (Dark 
       (SurtrA d9)
       (EldthursarA a8 g8)
     )
     (Light
       (AlfrA b2 f2 d3 c1 e1)
     )
  )
)

(variant
  (title "Bifrost (hard)")
  (bifrost-common)
  (board-setup
     (Dark 
       (SurtrA b9)
       (EldthursarA f9)
     )
     (Light
       (AlfrA b2 f2 c1 e1)
     )
  )
)

(variant
  (title "-")
)

(define walhall-common
  (turn-order 
     (Light normal-type)
     (Dark normal-type)
  )

  (board
    (image "../images/Ragnarok/walhall.bmp")
    (grid
      (start-rectangle 2 2 82 82)
      (dimensions
        ("a/b/c/d/e/f/g/h" (80 0)) ; files
        ("8/7/6/5/4/3/2/1" (0 80)) ; ranks
      )
      (all-dirs)
    )
    (zone (name goal-zone) (players Dark)
          (positions a1 b1 c1 d1 e1 f1 g1 h1)
    )
    (zone (name home-zone) (players Light Dark)
          (positions a1)
    )
  )

  (piece
     (name JotunnA)
     (help "Jotunn")
     (image Dark "../images/Ragnarok/jta.bmp")
     (moves
        (move-type normal-type)
        (walhall-jotunn-step nw se JotunnR) (walhall-jotunn-step sw ne JotunnR)
        (walhall-jotunn-step ne sw JotunnR) (walhall-jotunn-step se nw JotunnR)
        (walhall-jotunn-push nw se JotunnR) (walhall-jotunn-push sw ne JotunnR)
        (walhall-jotunn-push ne sw JotunnR) (walhall-jotunn-push se nw JotunnR)
        (move-type capture-type)
        (walhall-jotunn-push nw se JotunnR) (walhall-jotunn-push sw ne JotunnR)
        (walhall-jotunn-push ne sw JotunnR) (walhall-jotunn-push se nw JotunnR)
     )
  )
  (piece
     (name JotunnR)
     (help "Jotunn")
     (image Dark "../images/Ragnarok/jtr.bmp")
     (moves
        (move-type normal-type)
        (walhall-jotunn-step n s JotunnA) (walhall-jotunn-step s n JotunnA)
        (walhall-jotunn-step e w JotunnA) (walhall-jotunn-step w e JotunnA)
        (walhall-jotunn-push n s JotunnA) (walhall-jotunn-push s n JotunnA)
        (walhall-jotunn-push e w JotunnA) (walhall-jotunn-push w e JotunnA)
        (move-type capture-type)
        (walhall-jotunn-push n s JotunnA) (walhall-jotunn-push s n JotunnA)
        (walhall-jotunn-push e w JotunnA) (walhall-jotunn-push w e JotunnA)
     )
  )
  (piece
     (name Jotunn)
     (help "Jotunn")
     (image Dark "../images/Ragnarok/jt.bmp")
     (moves
        (move-type normal-type)
        (walhall-jotunn-step nw se Jotunn) (walhall-jotunn-step sw ne Jotunn)
        (walhall-jotunn-step ne sw Jotunn) (walhall-jotunn-step se nw Jotunn)
        (walhall-jotunn-push nw se Jotunn) (walhall-jotunn-push sw ne Jotunn)
        (walhall-jotunn-push ne sw Jotunn) (walhall-jotunn-push se nw Jotunn)
        (walhall-jotunn-step n  s  Jotunn) (walhall-jotunn-step s  n  Jotunn)
        (walhall-jotunn-step e  w  Jotunn) (walhall-jotunn-step w  e  Jotunn)
        (walhall-jotunn-push n  s  Jotunn) (walhall-jotunn-push s  n  Jotunn)
        (walhall-jotunn-push e  w  Jotunn) (walhall-jotunn-push w  e  Jotunn)
        (move-type capture-type)
        (walhall-jotunn-push nw se Jotunn) (walhall-jotunn-push sw ne Jotunn)
        (walhall-jotunn-push ne sw Jotunn) (walhall-jotunn-push se nw Jotunn)
        (walhall-jotunn-push n  s  Jotunn) (walhall-jotunn-push s  e  Jotunn)
        (walhall-jotunn-push e  w  Jotunn) (walhall-jotunn-push w  n  Jotunn)
     )
  )
  (win-condition (Dark) (pieces-remaining 4 Jotunn) )
  (loss-condition (Dark) (pieces-remaining 3) )
  (loss-condition (Light) (pieces-remaining 0) )
  (loss-condition (Light Dark) stalemated )
)

(variant
  (title "Walhall (easy)")
  (walhall-common)
  (board-setup
     (Dark 
       (JotunnA b8 c8 d8 e8 f8 g8)
     )
     (Light
       (ValkyrieA c1 d1 e1 f1)
     )
  )
)

(variant
  (title "Walhall (normal)")
  (walhall-common)
  (board-setup
     (Dark 
       (JotunnA b8 c8 d8 e8 f8 g8 b7 c7 d7 e7 f7 g7)
     )
     (Light
       (ValkyrieA c1 d1 e1 f1)
     )
  )
)

(variant
  (title "Walhall (hard)")
  (walhall-common)
  (board-setup
     (Dark 
       (JotunnA b8 c8 d8 e8 f8 g8 b7 c7 d7 e7 f7 g7 b6 c6 d6 e6 f6 g6)
     )
     (Light
       (ValkyrieA c1 d1 e1 f1)
     )
  )
)

(variant
  (title "-")
)

(game 
  (title "Vigrid")
  (default)

  (option "animate captures" false)
  (option "animate drops"    false)
  (option "pass turn"        false)
  (option "pass partial"     true)
  (option "highlight goals"  false)
  (option "prevent flipping" true)
  (option "recycle captures" false)
  (option "smart moves"      false)

  (move-sound    "Audio/Clack.wav")
  (release-sound "Audio/Clack.wav")
  (drop-sound    "Audio/Clack.wav")
  (capture-sound "")
  (change-sound  "")
  (click-sound   "")
  (draw-sound    "")

  (players Light Dark)
  (turn-order 
     (Light setup-type)
     (Dark setup-type)
     repeat
     (Light normal-type)
     (Dark normal-type)
  )

  (board
    (image "../images/Ragnarok/vigrid.bmp")
    (grid
      (start-rectangle 2 2 82 82)
      (dimensions
        ("a/b/c/d/e/f/g/h/i" (80 0)) ; files
        ("9/8/7/6/5/4/3/2/1" (0 80)) ; ranks
      )
      (all-dirs)
    )
    (zone (name home-zone) (players Light)
          (positions 
              a1 b1 c1 d1 e1 f1 g1 h1 i1
              a2 b2 c2 d2 e2 f2 g2 h2 i2
              a3 b3 c3 d3 e3 f3 g3 h3 i3
          )
    )
    (zone (name home-zone) (players Dark)
          (positions 
              a9 b9 c9 d9 e9 f9 g9 h9 i9
              a8 b8 c8 d8 e8 f8 g8 h8 i8
              a7 b7 c7 d7 e7 f7 g7 h7 i7
          )
    )
  )

  (piece
     (name Mount)
     (help " ")
     (image Dark "../images/Ragnarok/mountain.bmp")
  )
  (piece
     (name OdinA)
     (help "Odin")
     (image Light "../images/Ragnarok/oda.bmp")
     (moves
        (move-type normal-type)
        (sleipnir-join n OdinR SleipnirOR) (sleipnir-join nn OdinR SleipnirOR) 
        (sleipnir-join s OdinR SleipnirOR) (sleipnir-join ss OdinR SleipnirOR) 
        (sleipnir-join w OdinR SleipnirOR) (sleipnir-join ww OdinR SleipnirOR)
        (sleipnir-join e OdinR SleipnirOR) (sleipnir-join ee OdinR SleipnirOR)
        (sleipnir-swap n SleipnirOR) (sleipnir-swap nn SleipnirOR) 
        (sleipnir-swap s SleipnirOR) (sleipnir-swap ss SleipnirOR) 
        (sleipnir-swap w SleipnirOR) (sleipnir-swap ww SleipnirOR)
        (sleipnir-swap e SleipnirOR) (sleipnir-swap ee SleipnirOR)
     )
     (drops
        (move-type setup-type)
        (drop-piece)
     )
  )
  (piece
     (name OdinR)
     (help "Odin")
     (image Light "../images/Ragnarok/odr.bmp")
     (moves
        (move-type normal-type)
        (sleipnir-join ne OdinA SleipnirOR) (sleipnir-join nene OdinA SleipnirOR)
        (sleipnir-join sw OdinA SleipnirOR) (sleipnir-join swsw OdinA SleipnirOR)
        (sleipnir-join se OdinA SleipnirOR) (sleipnir-join sese OdinA SleipnirOR)
        (sleipnir-swap ne SleipnirOR) (sleipnir-swap nene SleipnirOR)
        (sleipnir-swap sw SleipnirOR) (sleipnir-swap swsw SleipnirOR)
        (sleipnir-swap se SleipnirOR) (sleipnir-swap sese SleipnirOR)
     )
  )
  (piece
     (name SleipnirOA)
     (help "Odin")
     (image Light "../images/Ragnarok/osa.bmp")
     (moves
        (move-type normal-type)
        (common-slide sw SleipnirOR) (common-slide se SleipnirOR)
        (common-slide ne SleipnirOR)
        (common-strike n SleipnirOR) (common-strike s SleipnirOR)
        (common-strike w SleipnirOR) (common-strike e SleipnirOR)
        (sleipnir-split ss SleipnirR OdinA) (sleipnir-split ww SleipnirR OdinA) 
        (sleipnir-split ee SleipnirR OdinA) (sleipnir-split nn SleipnirR OdinA) 
     )
  )
  (piece
     (name SleipnirOR)
     (help "Odin")
     (image Light "../images/Ragnarok/osr.bmp")
     (moves
        (move-type normal-type)
        (common-slide n SleipnirOA) (common-slide s SleipnirOA)
        (common-slide w SleipnirOA) (common-slide e SleipnirOA)
        (common-strike sw SleipnirOA) (common-strike se SleipnirOA)
        (common-strike ne SleipnirOA)
        (sleipnir-split swsw SleipnirR OdinA) (sleipnir-split sese SleipnirR OdinA) 
        (sleipnir-split nene SleipnirR OdinA)
     )
  )
  (piece
     (name ThorA)
     (help "Thor")
     (image Light "../images/Ragnarok/tha.bmp")
     (moves
        (move-type normal-type)
        (common-slide n ThorR) (common-slide s ThorR)
        (common-step nw ThorR) (common-step sw ThorR)
        (common-step ne ThorR) (common-step se ThorR)
        (thor-strike ww ThorR) (thor-strike ee ThorR)
        (thor-strike nwnw ThorR) (thor-strike nene ThorR)
        (thor-strike swsw ThorR) (thor-strike sese ThorR)
        (order-odin Odin A R) (order-odin Odin R A)
        (order-odin SleipnirO A R) (order-odin SleipnirO R A)
     )
  )
  (piece
     (name ThorR)
     (help "Thor")
     (image Light "../images/Ragnarok/thr.bmp")
     (moves
        (move-type normal-type)
        (common-slide w ThorA) (common-slide e ThorA)
        (common-step nw ThorA) (common-step sw ThorA)
        (common-step ne ThorA) (common-step se ThorA)
        (thor-strike nn ThorA) (thor-strike ss ThorA)
        (thor-strike nwnw ThorA) (thor-strike nene ThorA)
        (thor-strike swsw ThorA) (thor-strike sese ThorA)
        (order-odin Odin A R) (order-odin Odin R A)
        (order-odin SleipnirO A R) (order-odin SleipnirO R A)
     )
  )
  (piece
     (name TyrA)
     (help "Tyr")
     (image Light "../images/Ragnarok/tya.bmp")
     (moves
        (move-type normal-type)
        (common-step n TyrR) (common-step nnw TyrR)
        (common-step s TyrR) (common-step nww TyrR)
        (common-step w TyrR) (common-step sww TyrR)
        (empty-step nee TyrR) (empty-step see TyrR)
        (empty-step e TyrR) (empty-step nne TyrR)
        (order-odin Odin A R) (order-odin Odin R A)
        (order-odin SleipnirO A R) (order-odin SleipnirO R A)
     )
  )
  (piece
     (name TyrR)
     (help "Tyr")
     (image Light "../images/Ragnarok/tyr.bmp")
     (moves
        (move-type normal-type)
        (common-step nw TyrA) (empty-step ne TyrA)
        (common-step sw TyrA) (empty-step se TyrA)
        (common-step ww TyrA) (common-step nn TyrA)
        (empty-step ee TyrA) (common-step nwnw TyrA)
        (empty-step nene TyrA)
        (order-odin Odin A R) (order-odin Odin R A)
        (order-odin SleipnirO A R) (order-odin SleipnirO R A)
     )
  )
  (piece
     (name LokiA)
     (help "Loki")
     (image Dark "../images/Ragnarok/lka.bmp")
     (moves
        (move-type normal-type)
        (sleipnir-join n LokiR SleipnirLR) (sleipnir-join nne LokiR SleipnirLR) 
        (sleipnir-join e LokiR SleipnirLR) (sleipnir-join see LokiR SleipnirLR) 
        (sleipnir-join sw LokiR SleipnirLR) (sleipnir-join ssw LokiR SleipnirLR) 
        (sleipnir-join sww LokiR SleipnirLR) 
        (sleipnir-swap n SleipnirLR) (sleipnir-swap nne SleipnirLR) 
        (sleipnir-swap e SleipnirLR) (sleipnir-swap see SleipnirLR) 
        (sleipnir-swap sw SleipnirLR) (sleipnir-swap ssw SleipnirLR) 
        (sleipnir-swap sww SleipnirLR) 
     )
     (drops
        (move-type setup-type)
        (drop-piece)
     )
  )
  (piece
     (name LokiR)
     (help "Loki")
     (image Dark "../images/Ragnarok/lkr.bmp")
     (moves
        (move-type normal-type)
        (sleipnir-join s LokiA SleipnirLA) (sleipnir-join sse LokiA SleipnirLA) 
        (sleipnir-join e LokiA SleipnirLA) (sleipnir-join nee LokiA SleipnirLA) 
        (sleipnir-join nw LokiA SleipnirLA) (sleipnir-join nnw LokiA SleipnirLA) 
        (sleipnir-join nww LokiA SleipnirLA) 
        (sleipnir-swap s SleipnirLA) (sleipnir-swap sse SleipnirLA) 
        (sleipnir-swap e SleipnirLA) (sleipnir-swap nee SleipnirLA) 
        (sleipnir-swap nw SleipnirLA) (sleipnir-swap nnw SleipnirLA) 
        (sleipnir-swap nww SleipnirLA) 
     )
  )
  (piece
     (name HelA)
     (help "Hel")
     (image Dark "../images/Ragnarok/hla.bmp")
  )
  (piece
     (name HelR)
     (help "Hel")
     (image Dark "../images/Ragnarok/hlr.bmp")
  )
  (piece
     (name SleipnirLA)
     (help "Loki")
     (image Dark "../images/Ragnarok/sla.bmp")
     (moves
        (move-type normal-type)
        (common-slide sw SleipnirLR) (common-slide se SleipnirLR)
        (common-slide nw SleipnirLR) (common-slide ne SleipnirLR)
        (common-strike n SleipnirLR) (common-strike s SleipnirLR)
        (common-strike w SleipnirLR) (common-strike e SleipnirLR)
        (sleipnir-split ssw SleipnirR LokiA) (sleipnir-split sww SleipnirR LokiA) 
        (sleipnir-split see SleipnirR LokiA) (sleipnir-split nne SleipnirR LokiA) 
     )
  )
  (piece
     (name SleipnirLR)
     (help "Loki")
     (image Dark "../images/Ragnarok/slr.bmp")
     (moves
        (move-type normal-type)
        (common-slide s SleipnirLR) (common-slide e SleipnirLR)
        (common-slide n SleipnirLR) (common-slide w SleipnirLR)
        (common-strike nw SleipnirLR) (common-strike ne SleipnirLR)
        (common-strike sw SleipnirLR) (common-strike se SleipnirLR)
        (sleipnir-split sse SleipnirR LokiR) (sleipnir-split nee SleipnirR LokiR) 
        (sleipnir-split nnw SleipnirR LokiR) (sleipnir-split nww SleipnirR LokiR) 
     )
  )
  (piece
     (name SleipnirA)
     (help "Sleipnir")
     (image Dark "../images/Ragnarok/spa.bmp"
            Light "../images/Ragnarok/swa.bmp")
     (moves
        (move-type normal-type)
        (common-slide sw SleipnirR) (common-slide se SleipnirR)
        (common-slide nw SleipnirR) (common-slide ne SleipnirR)
        (order-odin Odin A R) (order-odin Odin R A)
        (order-loki Loki)
     )
  )
  (piece
     (name SleipnirR)
     (help "Sleipnir")
     (image Dark "../images/Ragnarok/spr.bmp"
            Light "../images/Ragnarok/swr.bmp")
     (moves
        (move-type normal-type)
        (common-slide n SleipnirA) (common-slide w SleipnirA)
        (common-slide s SleipnirA) (common-slide e SleipnirA)
        (order-odin Odin A R) (order-odin Odin R A)
        (order-loki Loki)
     )
  )
  (piece
     (name JormungandrA)
     (help "Jormungandr")
     (image Dark "../images/Ragnarok/jma.bmp")
     (moves
        (move-type normal-type)
        (beast-slide n JormungandrR nw ne) (beast-slide s JormungandrR sw se) 
        (order-loki Loki) (order-loki SleipnirL)
     )
  )
  (piece
     (name JormungandrR)
     (help "Jormungandr")
     (image Dark "../images/Ragnarok/jmr.bmp")
     (moves
        (move-type normal-type)
        (beast-slide e JormungandrA ne se) (beast-slide w JormungandrA nw sw) 
        (order-loki Loki) (order-loki SleipnirL)
     )
  )
  (piece
     (name FenrirA)
     (help "Fenrir")
     (image Dark "../images/Ragnarok/fna.bmp")
     (moves
        (move-type normal-type)
        (beast-slide se FenrirR s e) (common-slide nw FenrirR) 
        (order-loki Loki) (order-loki SleipnirL)
     )
  )
  (piece
     (name FenrirR)
     (help "Fenrir")
     (image Dark "../images/Ragnarok/fnr.bmp")
     (moves
        (move-type normal-type)
        (beast-slide sw FenrirA s w) (common-slide ne FenrirA) 
        (order-loki Loki) (order-loki SleipnirL)
     )
  )
  (piece
     (name SurtrA)
     (help "Surtr")
     (image Dark "../images/Ragnarok/sra.bmp")
     (moves
        (move-type normal-type)
        (common-step nne SurtrR) (common-step see SurtrR)
        (common-step ssw SurtrR) (common-step nww SurtrR)
        (order-loki Loki) (order-loki SleipnirL)
     )
  )
  (piece
     (name SurtrR)
     (help "Surtr")
     (image Dark "../images/Ragnarok/srr.bmp")
     (moves
        (move-type normal-type)
        (common-step nnw SurtrA) (common-step nee SurtrA)
        (common-step sse SurtrA) (common-step sww SurtrA)
        (order-loki Loki) (order-loki SleipnirL)
     )
  )
  (piece
     (name EldthursarA)
     (help "Eldthursar")
     (image Dark "../images/Ragnarok/eda.bmp")
     (moves
        (move-type normal-type)
        (common-step nw EldthursarR) (common-step ne EldthursarR)
        (common-step se EldthursarR) (common-step sw EldthursarR)
        (empty-step nwnw EldthursarR) (empty-step nene EldthursarR)
        (empty-step swsw EldthursarR) (empty-step sese EldthursarR)
        (empty-step nn EldthursarR) (empty-step ss EldthursarR)
        (order-eda) (order-loki Loki) (order-loki SleipnirL)
     )
  )
  (piece
     (name EldthursarR)
     (help "Eldthursar")
     (image Dark "../images/Ragnarok/edr.bmp")
     (moves
        (move-type normal-type)
        (common-step n EldthursarA) (common-step e EldthursarA)
        (common-step s EldthursarA) (common-step w EldthursarA)
        (empty-step nnw EldthursarA) (empty-step nne EldthursarA)
        (empty-step ssw EldthursarA) (empty-step sse EldthursarA)
        (empty-step ww EldthursarA) (empty-step ee EldthursarA)
        (order-edr) (order-loki Loki) (order-loki SleipnirL)
     )
  )
  (piece
     (name Eldthursar)
     (help "Eldthursar")
     (image Dark "../images/Ragnarok/ed.bmp")
     (moves
        (move-type normal-type)
        (empty-step nwnw Eldthursar) (empty-step nene Eldthursar)
        (empty-step swsw Eldthursar) (empty-step sese Eldthursar)
        (empty-step nn Eldthursar) (empty-step ss Eldthursar)
        (empty-step nnw Eldthursar) (empty-step nne Eldthursar)
        (empty-step ssw Eldthursar) (empty-step sse Eldthursar)
        (empty-step ww Eldthursar) (empty-step ee Eldthursar)
        (order-surtr) (order-loki Loki) (order-loki SleipnirL)
     )
  )
  (piece
     (name AlfrA)
     (help "Alfr")
     (image Light "../images/Ragnarok/ala.bmp")
     (moves
        (move-type normal-type)
        (common-step n AlfrR) (common-step s AlfrR)
        (common-step w AlfrR) (common-step e AlfrR)
        (empty-step nnw AlfrR) (empty-step nne AlfrR)
        (empty-step ssw AlfrR) (empty-step sse AlfrR)
        (common-strike nn AlfrR) (common-strike ss AlfrR)
        (common-strike ww AlfrR) (common-strike ee AlfrR)
        (order-odin Odin A R) (order-odin Odin R A)
        (order-odin SleipnirO A R) (order-odin SleipnirO R A)
        (order-tyr A R) (order-tyr R A)
     )
  )
  (piece
     (name AlfrR)
     (help "Alfr")
     (image Light "../images/Ragnarok/alr.bmp")
     (moves
        (move-type normal-type)
        (common-step nw AlfrA) (common-step sw AlfrA)
        (common-step ne AlfrA) (common-step se AlfrA)
        (empty-step nww AlfrA) (empty-step nee AlfrA)
        (empty-step sww AlfrA) (empty-step see AlfrA)
        (common-strike nwnw AlfrA) (common-strike swsw AlfrA)
        (common-strike nene AlfrA) (common-strike sese AlfrA)
        (order-odin Odin A R) (order-odin Odin R A)
        (order-odin SleipnirO A R) (order-odin SleipnirO R A)
        (order-tyr A R) (order-tyr R A)
     )
  )
  (piece
     (name Alfr)
     (help "Alfr")
     (image Light "../images/Ragnarok/al.bmp")
     (moves
        (move-type normal-type)
        (common-step n Alfr) (common-step s Alfr)
        (common-step w Alfr) (common-step e Alfr)
        (common-step nw Alfr) (common-step sw Alfr)
        (common-step ne Alfr) (common-step se Alfr)
        (empty-step nnw Alfr) (empty-step nne Alfr)
        (empty-step ssw Alfr) (empty-step sse Alfr)
        (empty-step nww Alfr) (empty-step nee Alfr)
        (empty-step sww Alfr) (empty-step see Alfr)
        (common-strike nn Alfr) (common-strike ss Alfr)
        (common-strike ww Alfr) (common-strike ee Alfr)
        (common-strike nwnw Alfr) (common-strike swsw Alfr)
        (common-strike nene Alfr) (common-strike sese Alfr)
        (order-odin Odin A R) (order-odin Odin R A)
        (order-odin SleipnirO A R) (order-odin SleipnirO R A)
        (order-tyr A R) (order-tyr R A)
     )
  )
  (piece
     (name ValkyrieA)
     (help "Valkyrie")
     (image Light "../images/Ragnarok/vla.bmp")
     (moves
        (move-type normal-type)
        (valkyrie-slide nw ValkyrieR) (valkyrie-slide ne ValkyrieR)
        (valkyrie-slide sw ValkyrieR) (valkyrie-slide se ValkyrieR)
        (valkyrie-jump nw ValkyrieR) (valkyrie-jump ne ValkyrieR)
        (valkyrie-jump sw ValkyrieR) (valkyrie-jump se ValkyrieR)
        (order-odin Odin A R) (order-odin Odin R A)
        (order-odin SleipnirO A R) (order-odin SleipnirO R A)
        (order-tyr A R) (order-tyr R A)
        (move-type capture-type)
        (valkyrie-jump nw ValkyrieR) (valkyrie-jump ne ValkyrieR)
        (valkyrie-jump sw ValkyrieR) (valkyrie-jump se ValkyrieR)
     )
  )
  (piece
     (name ValkyrieR)
     (help "Valkyrie")
     (image Light "../images/Ragnarok/vlr.bmp")
     (moves
        (move-type normal-type)
        (valkyrie-slide n ValkyrieA) (valkyrie-slide e ValkyrieA)
        (valkyrie-slide s ValkyrieA) (valkyrie-slide w ValkyrieA)
        (valkyrie-jump n ValkyrieA) (valkyrie-jump e ValkyrieA)
        (valkyrie-jump s ValkyrieA) (valkyrie-jump w ValkyrieA)
        (order-odin Odin A R) (order-odin Odin R A)
        (order-odin SleipnirO A R) (order-odin SleipnirO R A)
        (order-tyr A R) (order-tyr R A)
        (move-type capture-type)
        (valkyrie-jump n ValkyrieA) (valkyrie-jump e ValkyrieA)
        (valkyrie-jump s ValkyrieA) (valkyrie-jump w ValkyrieA)
     )
  )
  (piece
     (name Valkyrie)
     (help "Valkyrie")
     (image Light "../images/Ragnarok/vl.bmp")
     (moves
        (move-type normal-type)
        (valkyrie-slide nw Valkyrie) (valkyrie-slide ne Valkyrie)
        (valkyrie-slide sw Valkyrie) (valkyrie-slide se Valkyrie)
        (valkyrie-slide n Valkyrie) (valkyrie-slide e Valkyrie)
        (valkyrie-slide s Valkyrie) (valkyrie-slide w Valkyrie)
        (valkyrie-jump nw Valkyrie) (valkyrie-jump ne Valkyrie)
        (valkyrie-jump sw Valkyrie) (valkyrie-jump se Valkyrie)
        (valkyrie-jump n Valkyrie) (valkyrie-jump e Valkyrie)
        (valkyrie-jump s Valkyrie) (valkyrie-jump w Valkyrie)
        (order-odin Odin A R) (order-odin Odin R A)
        (order-odin SleipnirO A R) (order-odin SleipnirO R A)
        (order-tyr A R) (order-tyr R A)
        (move-type capture-type)
        (valkyrie-jump nw Valkyrie) (valkyrie-jump ne Valkyrie)
        (valkyrie-jump sw Valkyrie) (valkyrie-jump se Valkyrie)
        (valkyrie-jump n Valkyrie) (valkyrie-jump e Valkyrie)
        (valkyrie-jump s Valkyrie) (valkyrie-jump w Valkyrie)
     )
  )
  (piece
     (name ZwergA)
     (help "Zwerg")
     (image Dark "../images/Ragnarok/zwa.bmp")
     (moves
        (move-type normal-type)
        (common-step n ZwergR) (common-step e ZwergR)
        (common-step w ZwergR) (zwerg-step s ZwergR)
        (common-strike swsw ZwergR) (common-strike sese ZwergR)
        (order-loki Loki) (order-loki SleipnirL) (order-hel)
     )
  )
  (piece
     (name ZwergR)
     (help "Zwerg")
     (image Dark "../images/Ragnarok/zwr.bmp")
     (moves
        (move-type normal-type)
        (common-step nw ZwergA) (common-step ne ZwergA)
        (zwerg-step sw ZwergA) (zwerg-step se ZwergA)
        (common-strike ss ZwergA)
        (order-loki Loki) (order-loki SleipnirL) (order-hel)
     )
  )
  (piece
     (name Zwerg)
     (help "Zwerg")
     (image Dark "../images/Ragnarok/zw.bmp")
     (moves
        (move-type normal-type)
        (common-step nw Zwerg) (common-step ne Zwerg)
        (zwerg-step sw Zwerg) (zwerg-step se Zwerg)
        (common-step n Zwerg) (common-step e Zwerg)
        (common-step w Zwerg) (zwerg-step s Zwerg)
        (order-loki Loki) (order-loki SleipnirL) (order-hel)
     )
  )
  (piece
     (name JotunnA)
     (help "Jotunn")
     (image Dark "../images/Ragnarok/jta.bmp")
     (moves
        (move-type normal-type)
        (jotunn-step nw se JotunnR) (jotunn-step sw ne JotunnR)
        (jotunn-step ne sw JotunnR) (jotunn-step se nw JotunnR)
        (jotunn-push nw se JotunnR) (jotunn-push sw ne JotunnR)
        (jotunn-push ne sw JotunnR) (jotunn-push se nw JotunnR)
        (order-loki Loki) (order-loki SleipnirL) (order-hel)
        (move-type capture-type)
        (jotunn-push nw se JotunnR) (jotunn-push sw ne JotunnR)
        (jotunn-push ne sw JotunnR) (jotunn-push se nw JotunnR)
     )
  )
  (piece
     (name JotunnR)
     (help "Jotunn")
     (image Dark "../images/Ragnarok/jtr.bmp")
     (moves
        (move-type normal-type)
        (jotunn-step n s JotunnA) (jotunn-step s n JotunnA)
        (jotunn-step e w JotunnA) (jotunn-step w e JotunnA)
        (jotunn-push n s JotunnA) (jotunn-push s n JotunnA)
        (jotunn-push e w JotunnA) (jotunn-push w e JotunnA)
        (order-loki Loki) (order-loki SleipnirL) (order-hel)
        (move-type capture-type)
        (jotunn-push n s JotunnA) (jotunn-push s n JotunnA)
        (jotunn-push e w JotunnA) (jotunn-push w e JotunnA)
     )
  )
  (piece
     (name Jotunn)
     (help "Jotunn")
     (image Dark "../images/Ragnarok/jt.bmp")
     (moves
        (move-type normal-type)
        (jotunn-step nw se Jotunn) (jotunn-step sw ne Jotunn)
        (jotunn-step ne sw Jotunn) (jotunn-step se nw Jotunn)
        (jotunn-push nw se Jotunn) (jotunn-push sw ne Jotunn)
        (jotunn-push ne sw Jotunn) (jotunn-push se nw Jotunn)
        (jotunn-step n  s  Jotunn) (jotunn-step s  n  Jotunn)
        (jotunn-step e  w  Jotunn) (jotunn-step w  e  Jotunn)
        (jotunn-push n  s  Jotunn) (jotunn-push s  n  Jotunn)
        (jotunn-push e  w  Jotunn) (jotunn-push w  e  Jotunn)
        (order-loki Loki) (order-loki SleipnirL) (order-hel)
        (move-type capture-type)
        (jotunn-push nw se Jotunn) (jotunn-push sw ne Jotunn)
        (jotunn-push ne sw Jotunn) (jotunn-push se nw Jotunn)
        (jotunn-push n  s  Jotunn) (jotunn-push s  e  Jotunn)
        (jotunn-push e  w  Jotunn) (jotunn-push w  n  Jotunn)
     )
  )

  (board-setup
     (Light
       (OdinA off 1)
     )
     (Dark
       (LokiA off 1)
     )
  )

  (loss-condition (Light Dark) stalemated )
)
