(define init
  (set-flag $1-01 (or (piece? P01) (piece? P03) (piece? P05) (piece? P07) (piece? P09) (piece? P11) (piece? P13) (piece? P15) (piece? P17)))
  (set-flag $1-02 (or (piece? P02) (piece? P03) (piece? P06) (piece? P07) (piece? P10) (piece? P11) (piece? P14) (piece? P15) (piece? P18)))
  (set-flag $1-04 (or (piece? P04) (piece? P05) (piece? P06) (piece? P07) (piece? P12) (piece? P13) (piece? P14) (piece? P15)))
  (set-flag $1-08 (or (piece? P08) (piece? P09) (piece? P10) (piece? P11) (piece? P12) (piece? P13) (piece? P14) (piece? P15)))
  (set-flag $1-10 (or (piece? P16) (piece? P17) (piece? P18)))
)

(define init-1
  (set-flag $1-01 true)
  (set-flag $1-02 false)
  (set-flag $1-04 false)
  (set-flag $1-08 false)
  (set-flag $1-10 false)
)

(define crt
  (if (in-zone? home)
      (create $1)
   else
      (if (in-zone? ami a1)
          (create North $1)
       else
          (create South $1)
      )
  )
)

(define seta
  (if (flag? $1-10)
      (if (flag? $1-02)
          (add P18)
       else
          (if (flag? $1-01)
              (add P17)
           else
              (add P16)
          )
      )
   else
      (if (flag? $1-08)
          (if (flag? $1-04)
              (if (flag? $1-02)
                  (if (flag? $1-01)
                      (add P15)
                   else
                      (add P14)
                  )
               else
                  (if (flag? $1-01)
                      (add P13)
                   else
                      (add P12)
                  )
              )
           else
              (if (flag? $1-02)
                  (if (flag? $1-01)
                      (add P11)
                   else
                      (add P10)
                  )
               else
                  (if (flag? $1-01)
                      (add P09)
                   else
                      (add P08)
                  )
              )
          )
       else
          (if (flag? $1-04)
              (if (flag? $1-02)
                  (if (flag? $1-01)
                      (add P07)
                   else
                      (add P06)
                  )
               else
                  (if (flag? $1-01)
                      (add P05)
                   else
                      (add P04)
                  )
              )
           else
              (if (flag? $1-02)
                  (if (flag? $1-01)
                      (add P03)
                   else
                      (add P02)
                  )
               else
                  (add P01)
              )
          )
      )
  )
)

(define setc
  (if (flag? $1-10)
      (if (flag? $1-02)
          (crt P18)
       else
          (if (flag? $1-01)
              (crt P17)
           else
              (crt P16)
          )
      )
   else
      (if (flag? $1-08)
          (if (flag? $1-04)
              (if (flag? $1-02)
                  (if (flag? $1-01)
                      (crt P15)
                   else
                      (crt P14)
                  )
               else
                  (if (flag? $1-01)
                      (crt P13)
                   else
                      (crt P12)
                  )
              )
           else
              (if (flag? $1-02)
                  (if (flag? $1-01)
                      (crt P11)
                   else
                      (crt P10)
                  )
               else
                  (if (flag? $1-01)
                      (crt P09)
                   else
                      (crt P08)
                  )
              )
          )
       else
          (if (flag? $1-04)
              (if (flag? $1-02)
                  (if (flag? $1-01)
                      (crt P07)
                   else
                      (crt P06)
                  )
               else
                  (if (flag? $1-01)
                      (crt P05)
                   else
                      (crt P04)
                  )
              )
           else
              (if (flag? $1-02)
                  (if (flag? $1-01)
                      (crt P03)
                   else
                      (crt P02)
                  )
               else
                  (crt P01)
              )
          )
      )
  )
)

(define inc
   (if (flag? $1-01)
       (set-flag $1-01 false)
       (if (flag? $1-02)
           (set-flag $1-02 false)
           (if (flag? $1-04)
               (set-flag $1-04 false)
               (if (flag? $1-08)
                   (set-flag $1-08 false)
                   (if (flag? $1-10)
                       (set-flag $1-10 false)
                    else
                       (set-flag $1-10 true)
                   )
                else
                   (set-flag $1-08 true)
               )
            else
               (set-flag $1-04 true)
           )
        else
           (set-flag $1-02 true)
       )
    else
       (set-flag $1-01 true)
   )
)

(define dec
   (if (not-flag? $1-01)
       (set-flag $1-01 true)
       (if (not-flag? $1-02)
           (set-flag $1-02 true)
           (if (not-flag? $1-04)
               (set-flag $1-04 true)
               (if (not-flag? $1-08)
                   (set-flag $1-08 true)
                   (if (not-flag? $1-08)
                       (set-flag $1-10 true)
                    else
                       (set-flag $1-10 false)
                   )
                else
                   (set-flag $1-08 false)
               )
            else
               (set-flag $1-04 false)
           )
        else
           (set-flag $1-02 false)
       )
    else
       (set-flag $1-01 false)
   )
)

(define valid?
   (or (not-flag? $1-01)
       (not-flag? $1-02)
       (flag? $1-04)
       (flag? $1-08)
       (not-flag? $1-10)
   )
)

(define even?
  (not-flag? $1-01)
)

(define not-zero?
   (or (flag? $1-01)
       (flag? $1-02)
       (flag? $1-04)
       (flag? $1-08)
       (flag? $1-10)
   )
)

(define not-one?
   (or (not-flag? $1-01)
       (flag? $1-02)
       (flag? $1-04)
       (flag? $1-08)
       (flag? $1-10)
   )
)

(define friend-reserve
  a1 sr
  (while not-empty? sr)
  (while (not-zero? $1)
     (create S) sr
     (dec $1)
  )
)

(define enemy-reserve
  a1 nr
  (while not-empty? nr)
  (while (not-zero? $1)
     (if (in-zone? ami a1)
         (create North S) 
      else
         (create South S) 
     )
     nr (dec $1)
  )
)

(define step (
  nx (if (piece? T)
     (init-1 t) mark
     (if enemy?
         flip
         (enemy-reserve t)
      else
         (friend-reserve t)
     )
     back (add T)
   else
     (init t) (inc t) 
     (verify (valid? t))
     (if (not-in-zone? home) 
         (if (even? t)
             mark (friend-reserve t) back
             capture add
          else
             flip
             (seta t)
         )
      else
         (seta t)
     )
  )
))

(define sow (
   (init s) (dec s) (create P01)
   nx (init t) (inc t) (dec s) 
   (verify (valid? t))
   (if (not-zero? s)
       mark
       (while (not-one? s)
           nx (init x) (inc x)
           (verify (valid? x))
           (setc x) (dec s)
       )
       nx (init x) (inc x)
       (verify (valid? x))
       (if (and (not-in-zone? home) (even? x))
           capture
           (friend-reserve x)
        else
           (setc x)
       )
       back 
       (if (not-in-zone? home) flip)
       (seta t)
    else
       (if (not-in-zone? home) 
           (if (even? t)
               mark (friend-reserve t) back
               capture add
            else
               flip
               (seta t)
           )
        else
           (seta t)
       )
   )
))

(define p
  (piece
     (name P$1)
     (image South "../images/ToguzKumalak/p$1.bmp"
            North "../images/ToguzKumalak/p$1.bmp")
     (moves (sow))
  )
)

(game
  (title "Toguz Kumalak")

  (move-sound "Audio\Pickup.wav")
  (release-sound "Audio\Pickup.wav")
  (capture-sound "")
  (drop-sound "")

  (option "animate captures"  false)
  (option "smart moves"       true)

  (players South North)
  (turn-order South North)

  (board
     (image "../images/ToguzKumalak/board.bmp")
     (grid
         (start-rectangle 4 9 74 279)
         (dimensions
           ("a/b/c/d/e/f/g/h/i" (71 0)) ; files
           ("2/1" (0 534)) ; ranks
         )
     )
     (grid
         (start-rectangle 8 273 38 333)
         (dimensions
           ("a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u" (30 0)) ; files
           ("10/9/8/7" (0 30)) ; ranks
         )
         (directions (nr 1 0))
     )
     (grid
         (start-rectangle 8 401 38 461)
         (dimensions
           ("a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u" (30 0)) ; files
           ("6/5/4/3" (0 30)) ; ranks
         )
         (directions (sr 1 0))
     )
     (links sm (a2 i1) (i1 a2) (b2 h1) (h1 b2) (c2 g1) (g1 c2) (d2 f1) (f1 d2) (e2 e1) (e1 e2) (f2 d1) (d1 f2) (g2 c1) (c1 g2) (h2 b1) (b1 h2) (i2 a1) (a1 i2))
     (links sr (a1 a3) (u3 a4) (u4 a5) (u5 a6))
     (links nr (a1 a7) (u7 a8) (u8 a9) (u9 a10))
     (links nx 
         (a1 b1) (b1 c1) (c1 d1) (d1 e1) (e1 f1) (f1 g1) (g1 h1) (h1 i1) (i1 i2)
         (i2 h2) (h2 g2) (g2 f2) (f2 e2) (e2 d2) (d2 c2) (c2 b2) (b2 a2) (a2 a1)
     )
     (symmetry North (sr nr) (nr sr) (nx nx) (sm sm))
     (zone (name home) (players North)
           (positions a2 b2 c2 d2 e2 f2 g2 h2 i2)
     )
     (zone (name home) (players South)
           (positions a1 b1 c1 d1 e1 f1 g1 h1 i1)
     )
     (zone (name ami) (players South)
           (positions a1)
     )
     (zone (name ami) (players North)
           (positions a2)
     )
  )

  (piece
     (name P01)
     (image South "../images/ToguzKumalak/p01.bmp"
            North "../images/ToguzKumalak/p01.bmp")
     (moves (step))
  )
  (p 02) (p 03) (p 04) (p 05) (p 06) (p 07) (p 08) (p 09) (p 10) 
  (p 11) (p 12) (p 13) (p 14) (p 15) (p 16) (p 17) (p 18)
  (piece
     (name S)
     (image South "../images/ToguzKumalak/seed.bmp"
            North "../images/ToguzKumalak/seed.bmp")
  )
  (piece
     (name T)
     (image South "../images/ToguzKumalak/tuzdyk.bmp"
            North "../images/ToguzKumalak/tuzdyk.bmp")
  )

  (board-setup
    (South (P09 a1 b1 c1 d1 e1 f1 g1 h1 i1))
    (North (P09 a2 b2 c2 d2 e2 f2 g2 h2 i2))
  )

  (loss-condition  (South North) (total-piece-count 82 S))
  (loss-condition  (South North) (total-piece-count 83 S))
  (loss-condition  (South North) (total-piece-count 84 S))
  (count-condition (South North) stalemated)
)
