(define init-rank
   (set-flag rank-1 (piece? Marshal))
   (set-flag rank-2 (piece? General))
   (set-flag rank-3 (piece? LieutenantGeneral))
   (set-flag rank-4 (piece? BrigadierGeneral))
   (set-flag rank-5 (piece? Colonel))
   (set-flag rank-6 (piece? Combat))
   (set-flag rank-7 (piece? Captain))
   (set-flag rank-8 (piece? Lieutenant))
   (set-flag rank-9 (piece? Engineer))
   (set-flag is-killed? false)
   (set-flag is-equal? false)
)

(define create-piece
   (if (piece? $1)
       (if (in-zone? ami a1)
           (create North $1)
        else
           (create South $1)
       )
   )
)

(define friend-flag
   ths
   (if (piece? Flag)
       (create OpenedFlag)
   )
)

(define enemy-flag
   thn
   (if (piece? Flag)
       (if (in-zone? ami a1)
           (create North OpenedFlag)
        else
           (create South OpenedFlag)
       )
   )
)

(define pre-check
   (if (in-zone? safe)
       (verify empty?)
   )
   (verify not-friend?)
)

(define common-check
   (pre-check)
   (if (piece? Lieutenant)
       (set-flag is-killed? (flag? rank-9))
       (set-flag is-equal? (flag? rank-8))
   )
   (if (piece? Captain)
       (set-flag is-killed? (or (flag? rank-8) (flag? rank-9)))
       (set-flag is-equal? (flag? rank-7))
   )
   (if (piece? Combat)
       (set-flag is-killed? (or (flag? rank-7) (flag? rank-8) (flag? rank-9)))
       (set-flag is-equal? (flag? rank-6))
   )
   (if (piece? Colonel)
       (set-flag is-killed? (or (flag? rank-6) (flag? rank-7) (flag? rank-8) (flag? rank-9)))
       (set-flag is-equal? (flag? rank-5))
   )
   (if (piece? BrigadierGeneral)
       (set-flag is-killed? (or (flag? rank-5) (flag? rank-6) (flag? rank-7) (flag? rank-8) (flag? rank-9)))
       (set-flag is-equal? (flag? rank-4))
   )
   (if (piece? LieutenantGeneral)
       (set-flag is-killed? (or (flag? rank-4) (flag? rank-5) (flag? rank-6) (flag? rank-7) (flag? rank-8) (flag? rank-9)))
       (set-flag is-equal? (flag? rank-3))
   )
   (if (piece? General)
       (set-flag is-killed? (or (flag? rank-3) (flag? rank-4) (flag? rank-5) (flag? rank-6) (flag? rank-7) (flag? rank-8) (flag? rank-9)))
       (set-flag is-equal? (flag? rank-2))
   )
   (if (piece? Marshal)
       (set-flag is-killed? (or (flag? rank-2) (flag? rank-3) (flag? rank-4) (flag? rank-5) (flag? rank-6) (flag? rank-7) (flag? rank-8) (flag? rank-9)))
       (set-flag is-equal? (flag? rank-1))
       (if (flag? rank-1)
           mark a1
           (enemy-flag)
           (enemy-flag)
           back
       )
   )
   (if (or (piece? Marshal) (piece? Mines))
       (if (flag? rank-1)
           mark a1
           (friend-flag)
           (friend-flag)
           back
       )
   )
   (if (piece? Mines)
       (if (in-zone? variants b1)
           (create-piece Mines)
        else
            capture
       )
    else
       (if (flag? is-killed?)
           (create-piece Marshal)
           (create-piece General)
           (create-piece LieutenantGeneral)
           (create-piece BrigadierGeneral)
           (create-piece Colonel)
           (create-piece Combat)
           (create-piece Captain)
           (create-piece Lieutenant)
        else
           (if (flag? is-equal?)
               capture
            else
               (if (and not-empty? (in-zone? hqe) (not-piece? Flag) (not-piece? OpenedFlag))
                   (set-attribute not-locked? false)
               )
           )
       )
   )
)

(define engineer-check
   (pre-check)
   (if (piece? Engineer)
       capture
    else
       (if (and (not-piece? Mines) (not-piece? Grenade))
           (create-piece Marshal)
           (create-piece General)
           (create-piece LieutenantGeneral)
           (create-piece BrigadierGeneral)
           (create-piece Colonel)
           (create-piece Combat)
           (create-piece Captain)
           (create-piece Lieutenant)
        else
           (if (and not-empty? (in-zone? hqe) (not-piece? Flag) (not-piece? OpenedFlag))
               (set-attribute not-locked? false)
           )
       )
   )
)

(define grenade-check
   (pre-check)
   (if (piece? Marshal)
       mark a1
       (enemy-flag)
       (enemy-flag)
       back
   )
   capture
)

(define common-step (
   (verify not-locked?)
   (init-rank) 
   $1 (common-check)
   add
))

(define common-slide (
   (init-rank) 
   $1 (while empty? add $1)
   (common-check)
   add
))

(define engineer-step (
   (verify not-locked?)
   $1 (engineer-check)
   add
))

(define engineer-slide (
   $1 (while empty? $1)
   (engineer-check)
   add
))

(define engineer-move (
   $1 
  (while empty? 
     (if (in-zone? cross)
         (add-partial $2-type) 
      else
         add
     )
     $1
  )
))

(define grenade-step (
   $1 (grenade-check)
   add
))

(define grenade-slide (
   $1 (while empty? add $1)
   (grenade-check)
   add
))

(define drop-other (
   (verify (in-zone? home))
   (verify empty?)
   (if (in-zone? hqf)
       (verify (not-empty? ths))
   )
   add
))

(define drop-flag (
   (verify (in-zone? hqf))
   (verify empty?)
   mark a1 tss capture back
   add
))

(define drop-grenade (
   (verify (in-zone? front))
   (verify empty?)
   add
))

(define drop-mines (
   (verify (in-zone? rear))
   (verify empty?)
   (if (in-zone? hqf)
       (verify (not-empty? ths))
   )
   add
))

(define drop-start (
   (verify empty?)
   capture
   add
))

(define def-board
   (board
      (image "../images/Luzhanqi/board.bmp")
      (positions
             (sp  -90   7   1  50)
             (np  -90  50   1  93)

             (a13   0   7  91  50)
             (a12   0  50  91  93)
             (a11   0  93  91 136)
             (a10   0 136  91 179)
             (a9    0 179  91 222)
             (a8    0 222  91 265)
             (b13  86   7 177  50)
             (b12  86  50 177  93)
             (b11  86  93 177 136)
             (b10  86 136 177 179)
             (b9   86 179 177 222)
             (b8   86 222 177 265)
             (c13 182   7 273  50)
             (c12 182  50 273  93)
             (c11 182  93 273 136)
             (c10 182 136 273 179)
             (c9  182 179 273 222)
             (c8  182 222 273 265)
             (d13 277   7 368  50)
             (d12 277  50 368  93)
             (d11 277  93 368 136)
             (d10 277 136 368 179)
             (d9  277 179 368 222)
             (d8  277 222 368 265)
             (e13 362   7 453  50)
             (e12 362  50 453  93)
             (e11 362  93 453 136)
             (e10 362 136 453 179)
             (e9  362 179 453 222)
             (e8  362 222 453 265)

             (a7   0 284  91 327)
             (c7 182 284 273 327)
             (e7 362 284 453 327)

             (a6   0 347  91 390)
             (a5   0 390  91 433)
             (a4   0 433  91 476)
             (a3   0 476  91 519)
             (a2   0 519  91 562)
             (a1   0 561  91 604)
             (b6  86 347 177 390)
             (b5  86 390 177 433)
             (b4  86 433 177 476)
             (b3  86 476 177 519)
             (b2  86 519 177 562)
             (b1  86 561 177 604)
             (c6 182 347 273 390)
             (c5 182 390 273 433)
             (c4 182 433 273 476)
             (c3 182 476 273 519)
             (c2 182 519 273 562)
             (c1 182 561 273 604)
             (d6 276 347 367 390)
             (d5 276 390 367 433)
             (d4 276 433 367 476)
             (d3 276 476 367 519)
             (d2 276 519 367 562)
             (d1 276 561 367 604)
             (e6 362 347 453 390)
             (e5 362 390 453 433)
             (e4 362 433 453 476)
             (e3 362 476 453 519)
             (e2 362 519 453 562)
             (e1 362 561 453 604)
      )     
      (links N
         (a2  a3) (a3   a4) (a4   a5) (a5  a6) (a6   a7) (a7   a8) (a8 a9)
         (a9 a10) (a10 a11) (a11 a12) (e2  e3) (e3   e4) (e4   e5) (e5 e6) 
         (e6  e7) (e7   e8) (e8   e9) (e9 e10) (e10 e11) (e11 e12) (c6 c7)
         (c7  c8)
      )
      (links S
         (a3  a2) (a4   a3) (a5   a4) (a6  a5) (a7   a6) (a8   a7) (a9 a8)
         (a10 a9) (a11 a10) (a12 a11) (e3  e2) (e4   e3) (e5   e4) (e6 e5) 
         (e7  e6) (e8   e7) (e9   e8) (e10 e9) (e11 e10) (e12 e11) (c7 c6)
         (c8  c7)
      )
      (links E
         (a2  b2)  (b2   c2) (c2   d2) (d2  e2) (a6   b6) (b6   c6) 
         (c6  d6)  (d6   e6) (a8   b8) (b8  c8) (c8   d8) (d8   e8)
         (a12 b12) (b12 c12) (c12 d12) (d12 e12)
      )
      (links W
         (b2   a2) (c2   b2) (d2   c2) (e2   d2) (b6  a6) (c6  b6) 
         (d6   c6) (e6   d6) (b8   a8) (c8   b8) (d8  c8) (e8  d8)
         (b12 a12) (c12 b12) (d12 c12) (e12 d12)
      )
      (links n
         (a1   a2) (a12 a13) (b1   b2) (b2   b3) (b3   b4) (b4   b5) (b5   b6)
         (c1   c2) (c2   c3) (c3   c4) (c4   c5) (c5   c6) (d1   d2) (d2   d3) 
         (d3   d4) (d4   d5) (d5   d6) (e1   e2) (e12 e13) (b8   b9) (b9  b10) 
         (b10 b11) (b11 b12) (b12 b13) (c8   c9) (c9  c10) (c10 c11) (c11 c12) 
         (c12 c13) (d8   d9) (d9  d10) (d10 d11) (d11 d12) (d12 d13)
      )
      (links s
         (a2   a1) (a13 a12) (b2   b1) (b3   b2) (b4   b3) (b5   b4) (b6   b5)
         (c2   c1) (c3   c2) (c4   c3) (c5   c4) (c6   c5) (d2   d1) (d3   d2) 
         (d4   d3) (d5   d4) (d6   d5) (e2   e1) (e13 e12) (b9   b8) (b10  b9) 
         (b11 b10) (b12 b11) (b13 b12) (c9   c8) (c10  c9) (c11 c10) (c12 c11) 
         (c13 c12) (d9   d8) (d10  d9) (d11 d10) (d12 d11) (d13 d12)
      )
      (links e
         (a1   b1) (b1   c1) (c1   d1) (d1   e1) (a3   b3) (b3   c3) 
         (c3   d3) (d3   e3) (a4   b4) (b4   c4) (c4   d4) (d4   e4)
         (a5   b5) (b5   c5) (c5   d5) (d5   e5) (a9   b9) (b9   c9) 
         (c9   d9) (d9   e9) (a10 b10) (b10 c10) (c10 d10) (d10 e10)
         (a11 b11) (b11 c11) (c11 d11) (d11 e11) (a13 b13) (b13 c13) 
         (c13 d13) (d13 e13)
      )
      (links w
         (b1   a1) (c1   b1) (d1   c1) (e1   d1) (b3   a3) (c3   b3) 
         (d3   c3) (e3   d3) (b4   a4) (c4   b4) (d4   c4) (e4   d4)
         (b5   a5) (c5   b5) (d5   c5) (e5   d5) (b9   a9) (c9   b9) 
         (d9   c9) (e9   d9) (b10 a10) (c10 b10) (d10 c10) (e10 d10)
         (b11 a11) (c11 b11) (d11 c11) (e11 d11) (b13 a13) (c13 b13) 
         (d13 c13) (e13 d13)
      )
      (links nw
         (b3   a4) (b5   a6) (b9  a10) (b11 a12) (c4   b5) (c10 b11)
         (d3   c4) (d5   c6) (d9  c10) (d11 c12) (c2   b3) (c8   b9)
         (e2   d3) (e4   d5) (e8   d9) (e10 d11)
      )
      (links se
         (a4   b3) (a6   b5) (a10  b9) (a12 b11) (b5   c4) (b11 c10)
         (c4   d3) (c6   d5) (c10  d9) (c12 d11) (b3   c2) (b9   c8)
         (d3   e2) (d5   e4) (d9   e8) (d11 e10)
      )
      (links ne
         (a2   b3) (a4   b5) (a8   b9) (a10 b11) (b3   c4) (b5   c6)
         (b9  c10) (b11 c12) (c2   d3) (c4   d5) (c8   d9) (c10 d11)
         (d3   e4) (d5   e6) (d9  e10) (d11 e12)
      )
      (links sw
         (b3   a2) (b5   a4) (b9   a8) (b11 a10) (c4   b3) (c6   b5)
         (c10  b9) (c12 b11) (d3   c2) (d5   c4) (d9   c8) (d11 c10)
         (e4   d3) (e6   d5) (e10  d9) (e12 d11)
      )
      (links ths (a1 b1) (b1 d1) (d1 b1))
      (links thn (a1 b13) (b13 d13) (d13 b13))
      (links tss (a1 sp))
      (links tsn (a1 np))
      (symmetry North (ths thn) (thn ths) (tss tsn) (tsn tss))
      (zone
         (name safe)
         (players South North)
         (positions b3 b5 b9 b11 c4 c10 d3 d5 d9 d11)
      )
      (zone
         (name cross)
         (players South North)
         (positions a2 a6 a8 a12 c6 c8 e2 e6 e8 e12)
      )
      (zone
         (name hqf)
         (players South)
         (positions b1 d1)
      )
      (zone
         (name hqf)
         (players North)
         (positions b13 d13)
      )
      (zone
         (name hqe)
         (players South)
         (positions b13 d13)
      )
      (zone
         (name hqe)
         (players North)
         (positions b1 d1)
      )
      (zone
         (name home)
         (players South)
         (positions a1 a2 a3 a4 a5 a6 b1 b2 b4 b6
                    c1 c2 c3 c5 c6 d1 d2 d4 d6 e1 
                    e2 e3 e4 e5 e6)
      )
      (zone
         (name home)
         (players North)
         (positions a8 a9  a10 a11 a12 a13 b8 b10 b12 b13
                    c8 c9  c11 c12 c13 d8 d10 d12 d13 e8 
                    e9 e10 e11 e12 e13)
      )
      (zone
         (name front)
         (players South)
         (positions a2 b2 c2 d2 e2 a3 c3 e3 a4 b4 d4 e4
                    a5 c5 e5 a6 b6 c6 d6 e6)
      )
      (zone
         (name front)
         (players North)
         (positions a12 b12 c12 d12 e12 a11 c11 e11 a10 b10 d10 e10
                    a9  c9  e9  a8 b8 c8 d8 e8)
      )
      (zone
         (name rear)
         (players South)
         (positions a1 b1 c1 d1 e1 a2 b2 c2 d2 e2)
      )
      (zone
         (name rear)
         (players North)
         (positions a13 b13 c13 d13 e13 a12 b12 c12 d12 e12)
      )
      (zone
         (name ami)
         (players South)
         (positions a1)
      )
      (zone
         (name ami)
         (players North)
         (positions b1)
      )
      (zone
         (name variants)
         (players South North)
         (positions $1)
      )
  )
)

(define def-pieces-1
  (piece
      (name Marshal)
      (image South "../images/Luzhanqi/p1bb.bmp"
             North "../images/Luzhanqi/pbh.bmp" "../images/Luzhanqi/p1br.bmp")
      (help " ")
      (attribute not-locked? true)
      (drops
         (move-type droptype)
         (drop-other)
      )
      (moves
         (move-type normaltype)
         (common-step  n) (common-step  s) (common-step  w) (common-step  e)
         (common-step nw) (common-step sw) (common-step ne) (common-step se)
         (common-slide N) (common-slide S) (common-slide W) (common-slide E)
      )
  )
  (piece
      (name General)
      (image South "../images/Luzhanqi/p2bb.bmp"
             North "../images/Luzhanqi/pbh.bmp" "../images/Luzhanqi/p2br.bmp")
      (help " ")
      (attribute not-locked? true)
      (drops
         (move-type droptype)
         (drop-other)
      )
      (moves
         (move-type normaltype)
         (common-step  n) (common-step  s) (common-step  w) (common-step  e)
         (common-step nw) (common-step sw) (common-step ne) (common-step se)
         (common-slide N) (common-slide S) (common-slide W) (common-slide E)
      )
  )
  (piece
      (name LieutenantGeneral)
      (image South "../images/Luzhanqi/p3bb.bmp"
             North "../images/Luzhanqi/pbh.bmp" "../images/Luzhanqi/p3br.bmp")
      (help " ")
      (attribute not-locked? true)
      (drops
         (move-type droptype)
         (drop-other)
      )
      (moves
         (move-type normaltype)
         (common-step  n) (common-step  s) (common-step  w) (common-step  e)
         (common-step nw) (common-step sw) (common-step ne) (common-step se)
         (common-slide N) (common-slide S) (common-slide W) (common-slide E)
      )
  )
  (piece
      (name BrigadierGeneral)
      (image South "../images/Luzhanqi/p4bb.bmp"
             North "../images/Luzhanqi/pbh.bmp" "../images/Luzhanqi/p4br.bmp")
      (help " ")
      (attribute not-locked? true)
      (drops
         (move-type droptype)
         (drop-other)
      )
      (moves
         (move-type normaltype)
         (common-step  n) (common-step  s) (common-step  w) (common-step  e)
         (common-step nw) (common-step sw) (common-step ne) (common-step se)
         (common-slide N) (common-slide S) (common-slide W) (common-slide E)
      )
  )
  (piece
      (name Colonel)
      (image South "../images/Luzhanqi/p5bb.bmp"
             North "../images/Luzhanqi/pbh.bmp" "../images/Luzhanqi/p5br.bmp")
      (help " ")
      (attribute not-locked? true)
      (drops
         (move-type droptype)
         (drop-other)
      )
      (moves
         (move-type normaltype)
         (common-step  n) (common-step  s) (common-step  w) (common-step  e)
         (common-step nw) (common-step sw) (common-step ne) (common-step se)
         (common-slide N) (common-slide S) (common-slide W) (common-slide E)
      )
  )
  (piece
      (name Combat)
      (image South "../images/Luzhanqi/p6bb.bmp"
             North "../images/Luzhanqi/pbh.bmp" "../images/Luzhanqi/p6br.bmp")
      (help " ")
      (attribute not-locked? true)
      (drops
         (move-type droptype)
         (drop-other)
      )
      (moves
         (move-type normaltype)
         (common-step  n) (common-step  s) (common-step  w) (common-step  e)
         (common-step nw) (common-step sw) (common-step ne) (common-step se)
         (common-slide N) (common-slide S) (common-slide W) (common-slide E)
      )
  )
)

(define def-pieces-2
  (piece
      (name Captain)
      (image South "../images/Luzhanqi/p7bb.bmp"
             North "../images/Luzhanqi/pbh.bmp" "../images/Luzhanqi/p7br.bmp")
      (help " ")
      (attribute not-locked? true)
      (drops
         (move-type droptype)
         (drop-other)
      )
      (moves
         (move-type normaltype)
         (common-step  n) (common-step  s) (common-step  w) (common-step  e)
         (common-step nw) (common-step sw) (common-step ne) (common-step se)
         (common-slide N) (common-slide S) (common-slide W) (common-slide E)
      )
  )
  (piece
      (name Lieutenant)
      (image South "../images/Luzhanqi/p8bb.bmp"
             North "../images/Luzhanqi/pbh.bmp" "../images/Luzhanqi/p8br.bmp")
      (help " ")
      (attribute not-locked? true)
      (drops
         (move-type droptype)
         (drop-other)
      )
      (moves
         (move-type normaltype)
         (common-step  n) (common-step  s) (common-step  w) (common-step  e)
         (common-step nw) (common-step sw) (common-step ne) (common-step se)
         (common-slide N) (common-slide S) (common-slide W) (common-slide E)
      )
  )
  (piece
      (name Engineer)
      (image South "../images/Luzhanqi/p9bb.bmp"
             North "../images/Luzhanqi/pbh.bmp" "../images/Luzhanqi/p9br.bmp")
      (help " ")
      (drops
         (move-type droptype)
         (drop-other)
      )
      (attribute not-locked? true)
      (moves
         (move-type normaltype)
         (engineer-step   n) (engineer-step   s) (engineer-step   w) (engineer-step   e)
         (engineer-step  nw) (engineer-step  sw) (engineer-step  ne) (engineer-step  se)
         (engineer-slide  N) (engineer-slide  S) (engineer-slide  W) (engineer-slide  E)
         (engineer-move N 1) (engineer-move S 1) (engineer-move W 1) (engineer-move E 1)
         (move-type 1-type)
         (engineer-slide  N) (engineer-slide  S) (engineer-slide  W) (engineer-slide  E)
         (engineer-move N 2) (engineer-move S 2) (engineer-move W 2) (engineer-move E 2)
         (move-type 2-type)
         (engineer-slide  N) (engineer-slide  S) (engineer-slide  W) (engineer-slide  E)
         (engineer-move N 3) (engineer-move S 3) (engineer-move W 3) (engineer-move E 3)
         (move-type 3-type)
         (engineer-slide  N) (engineer-slide  S) (engineer-slide  W) (engineer-slide  E)
      )
  )
  (piece
      (name Grenade)
      (image South "../images/Luzhanqi/pgbb.bmp"
             North "../images/Luzhanqi/pbh.bmp" "../images/Luzhanqi/pgbr.bmp")
      (help " ")
      (drops
         (move-type bombtype)
         (drop-grenade)
      )
      (moves
         (move-type normaltype)
         (grenade-step  n) (grenade-step  s) (grenade-step  w) (grenade-step  e)
         (grenade-step nw) (grenade-step sw) (grenade-step ne) (grenade-step se)
         (grenade-slide N) (grenade-slide S) (grenade-slide W) (grenade-slide E)
      )
  )
  (piece
      (name Mines)
      (image South "../images/Luzhanqi/pmbb.bmp"
             North "../images/Luzhanqi/pbh.bmp" "../images/Luzhanqi/pmbr.bmp")
      (help " ")
      (drops
         (move-type bombtype)
         (drop-mines)
      )
  )
  (piece
      (name Flag)
      (image South "../images/Luzhanqi/pfbb.bmp"
             North "../images/Luzhanqi/pbh.bmp" "../images/Luzhanqi/pfbr.bmp")
      (help " ")
      (drops
         (move-type bombtype)
         (drop-flag)
      )
  )
  (piece
      (name OpenedFlag)
      (image South "../images/Luzhanqi/pfbb.bmp"
             North "../images/Luzhanqi/pfbr.bmp")
      (help " ")
      (drops
         (move-type bombtype)
         (drop-flag)
      )
  )
  (piece
      (name Start)
      (image South "../images/Luzhanqi/pbh.bmp"
             North "../images/Luzhanqi/pbh.bmp")
      (drops
         (move-type starttype)
         (drop-start)
      )
  )
)

(define def-setup
  (board-setup
      (North
         (Marshal off 1)
         (General off 1)
         (LieutenantGeneral off 2)
         (BrigadierGeneral off 2)
         (Colonel off 2)
         (Combat off 2)
         (Captain off 3)
         (Lieutenant off 3)
         (Engineer off 3)
         (Grenade off 2)
         (Mines off 3)
         (Flag off 1)
         (Start np)
      )
      (South
         (Marshal off 1)
         (General off 1)
         (LieutenantGeneral off 2)
         (BrigadierGeneral off 2)
         (Colonel off 2)
         (Combat off 2)
         (Captain off 3)
         (Lieutenant off 3)
         (Engineer off 3)
         (Grenade off 2)
         (Mines off 3)
         (Flag off 1)
         (Start sp off 1)
      )
  )
)

(define def-common
  (move-sound "Audio/Pickup.wav")
  (release-sound "Audio/Pickup.wav")
  (drop-sound "Audio/Pickup.wav")
  (capture-sound "")

  (option "animate captures" false)
  (option "animate drops"    false)
  (option "pass partial"     true)
  (option "show moves list"  false)

  (players South North)
  (turn-order 
      (South starttype)
      North North North North North
      North North North North North
      North North North North North
      North North North North North
      North North North North North
      South South South South South 
      South South South South South 
      South South South South South 
      South South South South South 
      South South South South South 
      repeat South North)

  (move-priorities bombtype droptype normaltype)
)

(game
  (title "Luzhanqi")
  (def-common)
  (def-board a1)
  (def-pieces-1)
  (def-pieces-2)
  (def-setup)
  (loss-condition (North South) (and (pieces-remaining 0 Flag) (pieces-remaining 0 OpenedFlag) (pieces-remaining 0 Start)))
)

(variant
  (title "Luzhanqi RM (Reusable Mines)")
  (def-board b1)
)
