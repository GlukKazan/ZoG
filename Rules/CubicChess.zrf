(define init
  (set-flag $1-01 (or (piece? Bishop) (piece? Knight)))
  (set-flag $1-02 (piece? Rook))
  (set-flag $1-04 false)
  (set-flag $1-08 false)
)

(define not-0?
  (or (flag? $1-08)
      (flag? $1-04)
      (flag? $1-02)
      (flag? $1-01)
  )
)

(define inc
   (if (flag? $1-01)
       (set-flag $1-01 false)
       (if (flag? $1-02)
           (set-flag $1-02 false)
           (if (flag? $1-04)
               (set-flag $1-04 false)
               (if (flag? $1-08)
                   (set-flag $1-08 false)
                else
                   (set-flag $1-08 true)
               )
            else
               (set-flag $1-04 true)
           )
        else
           (set-flag $1-02 true)
       )
    else
       (set-flag $1-01 true)
   )
)

(define dec
   (if (not-flag? $1-01)
       (set-flag $1-01 true)
       (if (not-flag? $1-02)
           (set-flag $1-02 true)
           (if (not-flag? $1-04)
               (set-flag $1-04 true)
               (if (not-flag? $1-08)
                   (set-flag $1-08 true)
                else
                   (set-flag $1-08 false)
               )
            else
               (set-flag $1-04 false)
           )
        else
           (set-flag $1-02 false)
       )
    else
       (set-flag $1-01 false)
   )
)

(define sum
   (while (not-0? $2)
       (inc $1)
       (dec $2)
   )
)

(define sub
   (while (not-0? $2)
       (dec $1)
       (dec $2)
   )
)

(define push (
  $1 (verify friend?)
  (verify (piece? Bomb))
  cascade $1 (verify empty?)
  add
))

(define spush (
  $1 (while empty? add $1)
  (verify friend?)
  (verify (piece? Bomb))
  cascade $1 (verify empty?)
  add
))

(define cap
  (if (not-empty? $1)
      (capture $1)
  )
)

(define bomb-cap
  capture
  (cap n) (cap s) (cap nw) (cap ne)
  (cap w) (cap e) (cap sw) (cap se)
)

(define boom (
  (bomb-cap) add
))

(define common-promote
  (init b)
  mark a1 (init a)
  (while (on-board? next)
      next
      (if friend?
          (init c) (sum a c)
      )
  )
  (if (flag? a-02)
      (sub a b)
  )
  back
)

(define promote-0 (
  (add $1)
))

(define promote-1 (
  (common-promote)
  (verify (not-flag? a-08))
  (add $1)
))

(define promote-2 (
  (common-promote)
  (inc a)
  (verify (not-flag? a-08))
  (add $1)
))

(define common-check
  (verify not-friend?)
  (verify (not-piece? Wall))
  (if (piece? Bomb)
      (bomb-cap)
  )
)

(define step (
  $1 (common-check)
  add
))

(define leap (
  $1 $2 (common-check)
  add
))

(define slide (
  $1 (while empty? add $1) 
  (common-check)
  add
))

(game
   (title "Cubic Chess")
   (description "Object: Checkmate the opponent's King by attacking it so it cannot escape.\\
                 Kings excepted, all pieces have values:\\
                 Pawn   - 0 \
                 Knight - 1 \
                 Bishop - 1 \
                 Rook   - 2 \\
                 The total value of a player's pieces must not exceed eight.")
   (history "The first version of Cubic Chess (then known as Gemini) was published in\
             the Czechoslovakian magazine KVIZ in 1977. This game has recieved publicity\
             in the media and a patent has been taken out for it. A prototype set is \
             available from the inventor: Dr V.Pribylinec.")

   (option "animate captures"   false)
   (option "pass turn"          false)

   (move-sound    "Audio/Pickup.wav")
   (release-sound "Audio/Pickup.wav")
   (change-sound  "Audio/Pickup.wav")
   (capture-sound "Audio/Pickup.wav")
   (drop-sound    "")
   (click-sound   "")
   (draw-sound    "")

   (players White Black)
   (turn-order White Black)

   (board
      (image "../images/CubicChess/b1.bmp" "../images/CubicChess/b2.bmp")
      (grid
        (start-rectangle 2 2 70 70)
        (dimensions
          ("a/b/c/d/e/f/g" (68 0)) ; files
          ("7/6/5/4/3/2/1" (0 68)) ; ranks
        )
        (directions (n 0 -1) (s 0 1) (e 1 0) (w -1 0)
                    (ne 1 -1) (nw -1 -1) (se 1 1) (sw -1 1)
                    (next 0 -1)
        ) 
      )
      (links next (a7 b1) (b7 c1) (c7 d1) (d7 e1) (e7 f1) (f7 g1))
      (symmetry Black (n s) (s n) (nw sw) (sw nw) (ne se) (se ne))
   )

   (piece
      (name King)
      (help "King: steps 1 square in any direction to a safe square")
      (description "A King can move to any adjacent square, but never to a \
	      square where it can be captured.")
      (image White "../images/CubicChess/WK.bmp" "../images/CubicChess/WK2.bmp"
             Black "../images/CubicChess/BK.bmp" "../images/CubicChess/BK2.bmp")
      (moves
        (move-type normal-type)
        (step n) (step s) (step nw) (step sw)
        (step e) (step w) (step ne) (step se)      
        (push n) (push s) (push nw) (push sw)
        (push e) (push w) (push ne) (push se)      
      )
   )
   (piece
      (name Pawn)
      (help "Pawn: moves forward or diagonally")
      (description "A Pawn can move to one square forward or diagonally. \
                    It can promote to Knight, Bishop or Rook.")
      (image White "../images/CubicChess/WP.bmp" "../images/CubicChess/WP2.bmp"
             Black "../images/CubicChess/BP.bmp" "../images/CubicChess/BP2.bmp")
      (moves
        (step n) (step nw) (step ne)
        (push n) (push nw) (push ne)
        (promote-1 Bishop) (promote-1 Knight) (promote-2 Rook)
      )
   )
   (piece
      (name Bishop)
      (help "Bishop: slides diagonally any number of squares")
      (description "A Bishop moves any number of squares on a diagonal. \
                    It may not leap over other pieces. A Bishop can promote \
                    to Pawn, Knight or Rook.")
      (image White "../images/CubicChess/WB.bmp" "../images/CubicChess/WB2.bmp"
             Black "../images/CubicChess/BB.bmp" "../images/CubicChess/BB2.bmp")
      (moves
        (slide nw) (slide ne) (slide sw) (slide se)
        (spush nw) (spush ne) (spush sw) (spush se)
        (promote-0 Pawn) (promote-1 Knight) (promote-2 Rook)
      )
   )
   (piece
      (name Knight)
      (help "Knight: moves like an `L`, 2 squares one way and one the other")
      (description "A Knight moves like an `L`, two squares vertically plus one \
          horizontally, or two squares horizontally plus one vertically.  \
          It hops over any pieces on the way. A Knight can promote to \
          Pawn, Bishop or Rook.")
      (image White "../images/CubicChess/WN.bmp" "../images/CubicChess/WN2.bmp"
             Black "../images/CubicChess/BN.bmp" "../images/CubicChess/BN2.bmp")
      (moves
        (leap n nw) (leap n ne) (leap s sw) (leap s se)
        (leap w nw) (leap w sw) (leap e ne) (leap e se)
        (promote-1 Bishop) (promote-0 Pawn) (promote-2 Rook)
      )
   )
   (piece
      (name Rook)
      (help "Rook: slides any number of squares along the row or column.")
      (description "A Rook moves any number of squares orthogonally \
                    on a rank or a file.  It may not leap over other pieces.\
                    A Rook can promote to Pawn, Knight or Bishop.")
      (image White "../images/CubicChess/WR.bmp" "../images/CubicChess/WR2.bmp"
             Black "../images/CubicChess/BR.bmp" "../images/CubicChess/BR2.bmp")
      (moves
        (slide n) (slide s) (slide w) (slide e)
        (spush n) (spush s) (spush w) (spush e)
        (promote-1 Bishop) (promote-1 Knight) (promote-0 Pawn)
      )
   )
   (piece
      (name Wall)
      (description " ")
      (image White "../images/CubicChess/WW.bmp" "../images/CubicChess/WW2.bmp"
             Black "../images/CubicChess/BW.bmp" "../images/CubicChess/BW2.bmp")
   )
   (piece
      (name Bomb)
      (description "Bomb")
      (image White "../images/CubicChess/WM.bmp" "../images/CubicChess/WM2.bmp"
             Black "../images/CubicChess/BM.bmp" "../images/CubicChess/BM2.bmp")
      (moves
        (boom)
      )
   )

   (board-setup
      (White  
        (King d1)
        (Pawn b1 f1 a2 b2 c2 d2 e2 f2 g2)
      )
      (Black  
        (King d7)
        (Pawn b7 f7 a6 b6 c6 d6 e6 f6 g6)
      )
   )

   (loss-condition (White Black) (checkmated King) )
   (loss-condition (White Black) (pieces-remaining 0 King) )
)

(variant
   (title "-")
)

(variant
   (title "Cubic Chess (Advanced)")
   (piece
      (name Pawn)
      (description "Pawn")
      (image White "../images/CubicChess/WP.bmp" "../images/CubicChess/WP2.bmp"
             Black "../images/CubicChess/BP.bmp" "../images/CubicChess/BP2.bmp")
      (moves
        (step n) (step nw) (step ne)
        (push n) (push nw) (push ne)
        (promote-1 Bishop) (promote-1 Knight) (promote-2 Rook) (promote-0 Wall) (promote-0 Bomb)
      )
   )
   (piece
      (name Bishop)
      (description "Bishop")
      (image White "../images/CubicChess/WB.bmp" "../images/CubicChess/WB2.bmp"
             Black "../images/CubicChess/BB.bmp" "../images/CubicChess/BB2.bmp")
      (moves
        (slide nw) (slide ne) (slide sw) (slide se)
        (spush nw) (spush ne) (spush sw) (spush se)
        (promote-0 Pawn) (promote-1 Knight) (promote-2 Rook) (promote-0 Wall) (promote-0 Bomb)
      )
   )
   (piece
      (name Knight)
      (description "Knight")
      (image White "../images/CubicChess/WN.bmp" "../images/CubicChess/WN2.bmp"
             Black "../images/CubicChess/BN.bmp" "../images/CubicChess/BN2.bmp")
      (moves
        (leap n nw) (leap n ne) (leap s sw) (leap s se)
        (leap w nw) (leap w sw) (leap e ne) (leap e se)
        (promote-1 Bishop) (promote-0 Pawn) (promote-2 Rook) (promote-0 Wall) (promote-0 Bomb)
      )
   )
   (piece
      (name Rook)
      (description "Rook")
      (image White "../images/CubicChess/WR.bmp" "../images/CubicChess/WR2.bmp"
             Black "../images/CubicChess/BR.bmp" "../images/CubicChess/BR2.bmp")
      (moves
        (slide n) (slide s) (slide w) (slide e)
        (spush n) (spush s) (spush w) (spush e)
        (promote-1 Bishop) (promote-1 Knight) (promote-0 Pawn) (promote-0 Wall) (promote-0 Bomb)
      )
   )
)
