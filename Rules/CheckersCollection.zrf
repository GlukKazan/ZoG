(version "2.0")

(define checker-shift (
  $1
  (verify empty?)
  (if (in-zone? promotion)
      (add King)
   else
      add
  )
))

(define damone-shift (
  $1
  (verify empty?)
  add
))

(define checker-jump (
  $1
  (verify enemy?)
  capture
  $1
  (verify empty?)
  (if (in-zone? promotion)
      (add King)
   else
      (add-partial jumptype)
  )
))

(define damone-jump (
  $1
  (verify enemy?)
  capture
  $1
  (verify empty?)
  (add-partial jumptype)
))

(define dama-checker-jump (
  $1
  (verify enemy?)
  capture
  $1
  (verify empty?)
  (if (in-zone? promotion)
      (if (or (and (enemy? e) (empty? ee))
              (and (enemy? w) (empty? ww)))
          (add-partial jumptype)
       else
          (add King)
      )
   else
      (add-partial jumptype)
  )
))

(define king-shift (
  (while (empty? $1)
      $1
      add
  )
))

(define king-jump (
  (while (empty? $1)
      $1
  )
  (verify (enemy? $1))
  $1
  (verify (empty? $1))
  $1
  (while empty?
      mark
      (while empty? 
        (opposite $1)
      ) 
      capture
      back
      (add-partial continuetype)
      $1
  )
))

(define dama-king-continue (
  (while (empty? $1)
      $1
      (verify not-last-from?)
  )
  (verify (enemy? $1))
  $1
  (verify (empty? $1))
  $1
  (while empty?
      mark
      (while empty? 
        (opposite $1)
      ) 
      capture
      back
      (add-partial continuetype)
      $1
  )
))

(game
  (title "Turkish Dama")
  (description "")
  (history  "Traditional game.")

  (move-sound "Audio/Pickup.wav")
  (release-sound "Audio/Pickup.wav")
  (capture-sound "")

  (option "maximal captures" true)
  (option "prevent flipping" 2)
; (option "animate captures" false)

  (players    First Second)
  (turn-order First Second)
  (move-priorities jumptype normaltype)

  (board
    (image "../images/wiedem/chess8x8.bmp")
    (grid
      (start-rectangle 5 5 54 54)
      (dimensions
        ("a/b/c/d/e/f/g/h" (49 0)) ; files
        ("8/7/6/5/4/3/2/1" (0 49)) ; ranks
      )
      (directions (n 0 -1) (s 0 1) (e 1 0) (w -1 0)
                  (ne 1 -1) (nw -1 -1) (se 1 1) (sw -1 1)
                  (ee 2 0) (ww -2 0)
                  (next 0 -1)
      ) 
    )
    (dummy a0)
    (links next (a0 a1) (a8 b1) (b8 c1) (c8 d1) (d8 e1) (e8 f1) (f8 g1) (g8 h1))
    (symmetry Second (n s) (s n) (nw sw) (sw nw) (ne se) (se ne))
    (zone (name promotion) (players First)
          (positions a8 b8 c8 d8 e8 f8 g8 h8)
    )
    (zone (name promotion) (players Second)
          (positions a1 b1 c1 d1 e1 f1 g1 h1)
    )
  )

  (piece
     (name Checker)
     (image First "../images/wiedem/CheckerWhite.bmp"
            Second "../images/wiedem/CheckerBlack.bmp")
     (attribute captured? false)
     (moves
        (move-type jumptype)
           (dama-checker-jump n)
           (dama-checker-jump e)
           (dama-checker-jump w)

        (move-type normaltype)
           (checker-shift n)
           (checker-shift e)
           (checker-shift w)
     )
  )

  (piece
     (name King)
     (image First "../images/wiedem/CheckerKingWhite.bmp"
            Second "../images/wiedem/CheckerKingBlack.bmp")
     (attribute captured? false)
     (moves
        (move-type jumptype)
           (king-jump n)
           (king-jump e)
           (king-jump w)
           (king-jump s)

        (move-type continuetype)
           (dama-king-continue n)
           (dama-king-continue e)
           (dama-king-continue w)
           (dama-king-continue s)

        (move-type normaltype)
           (king-shift n)
           (king-shift e)
           (king-shift w)
           (king-shift s)
     )
  )

  (board-setup
    (First (Checker a2 b2 c2 d2 e2 f2 g2 h2  a3 b3 c3 d3 e3 f3 g3 h3) )
    (Second (Checker a7 b7 c7 d7 e7 f7 g7 h7  a6 b6 c6 d6 e6 f6 g6 h6) )
  )

  (loss-condition (First Second) (pieces-remaining 0) )
  (loss-condition (First Second) stalemated )
)

(define short-king-jump (
  (while (empty? $1)
      $1
  )
  (verify (enemy? $1))
  $1
  (verify (empty? $1))
  capture
  $1
  (add-partial continuetype)
))

(define short-king-continue (
  (while (empty? $1)
      $1
      (verify not-last-from?)
  )
  (verify (enemy? $1))
  $1
  (verify (empty? $1))
  capture
  $1
  (add-partial continuetype)
))

(define greek-king-jump (
  (while (empty? $1)
      $1
  )
  (verify (enemy? $1))
  $1
  (verify (empty? $1))
  capture
  $1
  (add-partial continuetype)
  $1
  (while empty?
      (set-flag more-captures false)
      (king-captured-find $1)
      (king-captured-find $2)
      (king-captured-find $3)
      mark
      (opposite $1)
      (while empty?
         (opposite $1)
      )
      (if enemy?
          capture
      )
      back
      (if (flag? more-captures)
          (add-partial jumptype)
      )
      $1
  )
))

(define greek-king-continue (
  (while (empty? $1)
      $1
      (verify not-last-from?)
  )
  (verify (enemy? $1))
  $1
  (verify (empty? $1))
  capture
  $1
  (add-partial continuetype)
  $1
  (while empty?
      (set-flag more-captures false)
      (king-captured-find $1)
      (king-captured-find $2)
      (king-captured-find $3)
      mark
      (opposite $1)
      (while empty?
         (opposite $1)
      )
      (if enemy?
          capture
      )
      back
      (if (flag? more-captures)
          (add-partial jumptype)
      )
      $1
  )
))

(variant
  (title "Greek Checkers")
  (description "")
  (history  "Traditional game.")

  (option "maximal captures" false)

  (piece
     (name King)
     (image First "../images/wiedem/CheckerKingWhite.bmp"
            Second "../images/wiedem/CheckerKingBlack.bmp")
     (attribute captured? false)
     (moves
        (move-type jumptype)
           (greek-king-jump n e w)
           (greek-king-jump e n s)
           (greek-king-jump w n s)
           (greek-king-jump s e w)

        (move-type continuetype)
           (greek-king-continue n e w)
           (greek-king-continue e n s)
           (greek-king-continue w n s)
           (greek-king-continue s e w)

        (move-type normaltype)
           (king-shift n)
           (king-shift e)
           (king-shift w)
           (king-shift s)
     )
  )
)

(variant
  (title "Greek Checkers (variant)")
  (description "")
  (history  "Variant of the traditional game.")

  (option "maximal captures" false)

  (piece
     (name King)
     (image First "../images/wiedem/CheckerKingWhite.bmp"
            Second "../images/wiedem/CheckerKingBlack.bmp")
     (moves
        (move-type jumptype)
           (short-king-jump n)
           (short-king-jump e)
           (short-king-jump w)
           (short-king-jump s)

        (move-type continuetype)
           (short-king-continue n)
           (short-king-continue e)
           (short-king-continue w)
           (short-king-continue s)

        (move-type normaltype)
           (king-shift n)
           (king-shift e)
           (king-shift w)
           (king-shift s)
     )
  )
)

(define ken-capture (
  $1
  (verify enemy?)
  capture
  $1
  (verify empty?)
  (if (in-zone? promotion)
      (add King)
   else
      (add-partial continuetype)
  )
))

(define ken-jump (
  $1
  (verify friend?)
  $1
  (verify empty?)
  (if (in-zone? promotion)
      (add King)
   else
      (add-partial continuetype)
  )
))

(define ken-jump (
  $1
  (verify friend?)
  (verify (piece? Checker))
  $1
  (verify empty?)
  (if (in-zone? promotion)
      (add King)
   else
      add
  )
))

(variant
  (title "Ossetian Kena")
  (description "")
  (history  "Traditional game.")

  (piece
     (name Checker)
     (image First "../images/wiedem/CheckerWhite.bmp"
            Second "../images/wiedem/CheckerBlack.bmp")
     (moves
        (move-type jumptype)
           (checker-jump n)
           (checker-jump e)
           (checker-jump w)
           (checker-jump s)

        (move-type normaltype)
           (checker-shift n)
           (checker-shift e)
           (checker-shift w)
           (ken-jump n)
           (ken-jump e)
           (ken-jump w)
           (ken-jump s)
     )
  )
)

(define ken-jump-variant (
  $1
  (verify friend?)
  (verify (piece? Checker))
  $1
  (verify empty?)
  (if (in-zone? promotion)
      (add King)
   else
      (add-partial continuetype)
  )
))

(variant
  (title "Ossetian Kena (variant)")
  (description "")
  (history  "Variant of the traditional game.")

; (option "pass partial" true)

  (piece
     (name Checker)
     (image First "../images/wiedem/CheckerWhite.bmp"
            Second "../images/wiedem/CheckerBlack.bmp")
     (moves
        (move-type jumptype)
           (checker-jump n)
           (checker-jump e)
           (checker-jump w)
           (checker-jump s)

        (move-type continuetype)
           (checker-jump n)
           (checker-jump e)
           (checker-jump w)
           (checker-jump s)
;          (ken-jump-variant n)
;          (ken-jump-variant e)
;          (ken-jump-variant w)
;          (ken-jump-variant s)

        (move-type normaltype)
           (checker-shift n)
           (checker-shift e)
           (checker-shift w)
           (ken-jump-variant n)
           (ken-jump-variant e)
           (ken-jump-variant w)
           (ken-jump-variant s)
     )
  )
)

(define harzdame-king-jump (
  (verify (not captured?))    
  (while (or (empty? $1) captured?)
      $1
      (verify not-last-from?)
  )
  (verify (enemy? $1))
  $1
  (verify (not captured?))    
  (verify (empty? $1))
  $1
  (while empty?
      (set-flag more-captures false)
      (king-captured-find $1)
      (king-captured-find $2)
      (king-captured-find $3)
      mark
      (while empty? 
          (opposite $1)
      ) 
      (if (flag? more-captures)
          (markit)
      )
      back
      (if (flag? more-captures)
          (add-partial jumptype)
       else
          mark
          (opposite $1)
          (while empty?
             (opposite $1)
          )
          (if enemy?
              capture
          )
          back
          (capture-all)
          add
      )
      $1
  )
))

(variant
  (title "Harzdame")
  (description "")
  (history  "Invented by Benedikt Rosenau in 2009.")

  (option "maximal captures" false) ; bugfix (true)

  (board
    (image "../images/wiedem/chess8x8.bmp")
    (grid
      (start-rectangle 5 5 54 54)
      (dimensions
        ("a/b/c/d/e/f/g/h" (49 0)) ; files
        ("8/7/6/5/4/3/2/1" (0 49)) ; ranks
      )
      (directions (n 0 -1) (s 0 1) (e 1 0) (w -1 0)
                  (next 0 -1)
      ) 
    )
    (dummy a0)
    (links next (a0 a1) (a8 b1) (b8 c1) (c8 d1) (d8 e1) (e8 f1) (f8 g1) (g8 h1))
    (symmetry Second (n s) (s n) (e w) (w e))
    (zone (name promotion) (players First)
          (positions c8 d8 e8 f8 g8 h8 h7 h6 h5 h4 h3)
    )
    (zone (name promotion) (players Second)
          (positions a6 a5 a4 a3 a2 a1 b1 c1 d1 e1 f1)
    )
  )

  (piece
     (name Checker)
     (image First "../images/wiedem/CheckerWhite.bmp"
            Second "../images/wiedem/CheckerBlack.bmp")
     (attribute captured? false)
     (moves
        (move-type jumptype)
           (international-checker-jump n e w)
           (international-checker-jump e n s)
           (international-checker-jump w n s)
           (international-checker-jump s e w)

        (move-type normaltype)
           (checker-shift n)
           (checker-shift e)
     )
  )

  (piece
     (name King)
     (image First "../images/wiedem/CheckerKingWhite.bmp"
            Second "../images/wiedem/CheckerKingBlack.bmp")
     (attribute captured? false)
     (moves
        (move-type jumptype)
           (harzdame-king-jump n e w)
           (harzdame-king-jump e n s)
           (harzdame-king-jump w n s)
           (harzdame-king-jump s e w)

        (move-type normaltype)
           (king-shift n)
           (king-shift w)
           (king-shift e)
           (king-shift s)
     )
  )

  (board-setup
    (First (Checker a1 b1 c1 d1 e1 f1  a2 b2 c2 d2 e2  a3 b3 c3 d3  a4 b4 c4  a5 b5  a6) )
    (Second (Checker c8 d8 e8 f8 g8 h8  d7 e7 f7 g7 h7  e6 f6 g6 h6  f5 g5 h5  g4 h4  h3) )
  )
)

(define capture-all
   mark  
   a0 
   (while (on-board? next) 
      next
      (if captured? capture)
   )
   back  
)

(define checker-captured-find
   mark
   (if (on-board? $1)  
      $1    
      (if (and enemy? (empty? $1) (not captured?)) 
          (set-flag more-captures true)
      )
   )
   back
)

(define markit 
  (set-attribute captured? true)
)

(define long-checker-jump (
  (verify (not captured?))    
  $1
  (verify enemy?)
  (verify (not captured?))
  $1
  (verify empty?)
  (set-flag more-captures false)
  (if (in-zone? promotion)
      (king-captured-find $1)
      (king-captured-find $2)
      (king-captured-find $3)
   else
      (checker-captured-find $1)
      (checker-captured-find $2)
      (checker-captured-find $3)
  )
  (if (flag? more-captures)
      (opposite $1)
      (markit)
      $1
  )
  (if (not (flag? more-captures))
      (opposite $1) 
      (if enemy?
          capture
      )
      $1
      (capture-all)
  )
  (if (in-zone? promotion)
      (if (flag? more-captures)
          (add-partial King jumptype)
       else
          (add King)
      )
   else
      (if (flag? more-captures)
          (add-partial jumptype)
       else
          add
      )
  )
))

(define king-captured-find
   mark
   (while (and (on-board? $1) (empty? $1))
      $1
   )
   (if (on-board? $1)  
      $1    
      (if (and enemy? (empty? $1) (not captured?)) 
          (set-flag more-captures true)
      )
   )
   back
)

(define long-king-jump (
  (verify (not captured?))    
  (while (or (empty? $1) captured?)
      $1
  )
  (verify (enemy? $1))
  $1
  (verify (not captured?))    
  (verify (empty? $1))
  $1
  (while empty?
      (set-flag more-captures false)
      (king-captured-find $1)
      (king-captured-find $2)
      (king-captured-find $3)
      mark
      (while empty? 
          (opposite $1)
      ) 
      (if (flag? more-captures)
          (markit)
      )
      back
      (if (flag? more-captures)
          (add-partial jumptype)
       else
          mark
          (opposite $1)
          (while empty?
             (opposite $1)
          )
          (if enemy?
              capture
          )
          back
          (capture-all)
          add
      )
      $1
  )
))

(define long-jump (
  $1
  (verify enemy?)
  capture
  $1
  (verify empty?)
  (if (in-zone? promotion)
      (add-partial King jumptype)
   else
      (add-partial jumptype)
  )
))

(define senegal-checker-shift (
  $1
  (verify empty?)
  (if (in-zone? promotion)
      capture
  )
  add
))

(define senegal-checker-jump (
  $1
  (verify enemy?)
  capture
  $1
  (verify empty?)
  (if (in-zone? promotion)
      (if (or (and (enemy? e) (empty? ee))
              (and (enemy? w) (empty? ww)))
          (add-partial jumptype)
       else
          capture
          add
      )
   else
      (add-partial jumptype)
  )
))

(variant
  (title "Senegalese Checkers")
  (description "")
  (history  "Traditional game.")

  (option "maximal captures" false)

  (board
    (image "../images/wiedem/chess6x5.bmp")
    (grid
      (start-rectangle 5 5 54 54)
      (dimensions
        ("a/b/c/d/e/f" (49 0)) ; files
        ("5/4/3/2/1" (0 49)) ; ranks
      )
      (directions (n 0 -1) (s  0 1) (e 1 0) (w -1 0)
                  (ee 2 0) (ww -2 0)
      ) 
    )
    (symmetry Second (n s) (s n))
    (zone (name promotion) (players First)
          (positions a5 b5 c5 d5 e5 f5)
    )
    (zone (name promotion) (players Second)
          (positions a1 b1 c1 d1 e1 f1)
    )
  )

  (piece
     (name Checker)
     (image First "../images/wiedem/CheckerWhite.bmp"
            Second "../images/wiedem/CheckerBlack.bmp")
     (moves
        (move-type jumptype)
           (senegal-checker-jump n)
           (senegal-checker-jump e)
           (senegal-checker-jump w)

        (move-type normaltype)
           (senegal-checker-shift n)
           (senegal-checker-shift e)
           (senegal-checker-shift w)
     )
  )

  (board-setup
    (First (Checker a1 b1 c1 d1 e1 f1  a2 b2 c2 d2 e2 f2  e3 f3) )
    (Second (Checker a5 b5 c5 d5 e5 f5  a4 b4 c4 d4 e4 f4  a3 b3) )
  )
)

(variant
  (title "Khakass Tobit")
  (description "")
  (history  "Traditional game.")

  (option "maximal captures" false)

  (board
    (image "../images/wiedem/tobit.bmp")
    (grid
      (start-rectangle 5 5 54 54)
      (dimensions
        ("a/b/c/d/e/f/g" (49 0)) ; files
        ("6/5/4/3/2/1" (0 49)) ; ranks
      )
      (directions (n 0 -1) (s  0 1) (e 1 0) (w -1 0)
      ) 
    )
    (kill-positions a1 a6 g1 g6)
    (unlink (a2 a3) (a3 a4) (a4 a5) (g2 g3) (g3 g4) (g4 g5)
            (b1 c1) (c1 d1) (d1 e1) (e1 f1)
            (b6 c6) (c6 d6) (d6 e6) (e6 f6)
    )
    (symmetry Second (n s) (s n))
    (zone (name promotion) (players First)
          (positions b6 c6 d6 e6 f6)
    )
    (zone (name promotion) (players Second)
          (positions b1 c1 d1 e1 f1)
    )
  )

  (piece
     (name Checker)
     (image First "../images/wiedem/CheckerWhite.bmp"
            Second "../images/wiedem/CheckerBlack.bmp")
     (moves
        (move-type jumptype)
           (checker-jump n)
           (checker-jump e)
           (checker-jump w)
           (checker-jump s)

        (move-type normaltype)
           (checker-shift n)
           (checker-shift e)
           (checker-shift w)
     )
  )

  (piece
     (name King)
     (image First "../images/wiedem/CheckerKingWhite.bmp"
            Second "../images/wiedem/CheckerKingBlack.bmp")
     (moves
        (move-type jumptype)
           (damone-jump n)
           (damone-jump e)
           (damone-jump w)
           (damone-jump s)

        (move-type normaltype)
           (damone-shift n)
           (damone-shift e)
           (damone-shift w)
           (damone-shift s)
     )
  )

  (board-setup
    (First (Checker b1 c1 d1 e1 f1  a2 b2 c2 d2 e2 f2 g2) )
    (Second (Checker b6 c6 d6 e6 f6  a5 b5 c5 d5 e5 f5 g5) )
  )
)

(variant
  (title "-")
)

(variant
  (title "Armenian Tama")
  (description "")
  (history  "Traditional game.")

  (option "maximal captures" false) ; bugfix (true)

  (piece
     (name Checker)
     (image First "../images/wiedem/CheckerWhite.bmp"
            Second "../images/wiedem/CheckerBlack.bmp")
     (attribute captured? false)
     (moves
        (move-type jumptype)
           (long-checker-jump n w e)
           (long-checker-jump e n n)
           (long-checker-jump w n n)

        (move-type normaltype)
           (checker-shift n)
           (checker-shift e)
           (checker-shift w)
           (checker-shift ne)
           (checker-shift nw)
     )
  )

  (piece
     (name King)
     (image First "../images/wiedem/CheckerKingWhite.bmp"
            Second "../images/wiedem/CheckerKingBlack.bmp")
     (attribute captured? false)
     (moves
        (move-type jumptype)
           (long-king-jump n w e)
           (long-king-jump e n s)
           (long-king-jump w n s)
           (long-king-jump s w e)

        (move-type normaltype)
           (king-shift n)
           (king-shift e)
           (king-shift w)
           (king-shift s)
           (king-shift ne)
           (king-shift nw)
           (king-shift se)
           (king-shift sw)
     )
  )
)

(variant
  (title "Armenian Tama (variant)")
  (description "")
  (history  "Variant of the traditional game.")

  (piece
     (name Checker)
     (image First "../images/wiedem/CheckerWhite.bmp"
            Second "../images/wiedem/CheckerBlack.bmp")
     (moves
        (move-type jumptype)
           (long-jump n)
           (long-jump e)
           (long-jump w)

        (move-type normaltype)
           (checker-shift n)
           (checker-shift e)
           (checker-shift w)
           (checker-shift ne)
           (checker-shift nw)
     )
  )

  (piece
     (name King)
     (image First "../images/wiedem/CheckerKingWhite.bmp"
            Second "../images/wiedem/CheckerKingBlack.bmp")
     (moves
        (move-type jumptype)
           (king-jump n)
           (king-jump e)
           (king-jump w)
           (king-jump s)

        (move-type continuetype)
           (king-jump n)
           (king-jump e)
           (king-jump w)
           (king-jump s)

        (move-type normaltype)
           (king-shift n)
           (king-shift e)
           (king-shift w)
           (king-shift s)
           (king-shift ne)
           (king-shift nw)
           (king-shift se)
           (king-shift sw)
     )
  )
)

(define oc-shift (
  $1
  (verify empty?)
  add
))

(define oc-jump (
  $1
  (verify enemy?)
  capture
  $1
  (verify empty?)
  (add-partial jumptype)
))

(variant
  (title "Ossetian Checkers")
  (description "")
  (history  "Traditional game.")

  (board
    (image "../images/wiedem/ossetian7x7.bmp")
    (grid
      (start-rectangle 6 6 55 55)
      (dimensions
        ("a/b/c/d/e/f/g" (56 0)) ; files
        ("7/6/5/4/3/2/1" (0 56)) ; ranks
      )
      (directions (n 0 -1) (s 0 1) (e 1 0) (w -1 0)
                  (ne 1 -1) (nw -1 -1) (se 1 1) (sw -1 1)
                  (ee 2 0) (ww -2 0)
      ) 
    )
    (symmetry Second (n s) (s n) (nw sw) (sw nw) (ne se) (se ne))
    (zone (name promotion) (players First Second)
          (positions a1)
    )
  )

  (move-priorities normaltype)

  (piece
     (name Checker)
     (image First "../images/wiedem/CheckerWhite.bmp"
            Second "../images/wiedem/CheckerBlack.bmp")
     (attribute captured? false)
     (moves
        (move-type jumptype)
           (oc-jump n)
           (oc-jump s)
           (oc-jump w)
           (oc-jump e)
           (oc-jump nw)
           (oc-jump sw)
           (oc-jump ne)
           (oc-jump se)

        (move-type normaltype)
           (oc-shift n)
           (oc-shift nw)
           (oc-shift ne)
           (oc-jump n)
           (oc-jump s)
           (oc-jump w)
           (oc-jump e)
           (oc-jump nw)
           (oc-jump sw)
           (oc-jump ne)
           (oc-jump se)
     )
  )

  (board-setup
    (First (Checker a1 b1 c1 d1 e1 f1 g1  a2 b2 c2 d2 e2 f2 g2 a3 b3 c3 d3 e3 f3 g3) )
    (Second (Checker a5 b5 c5 d5 e5 f5 g5  a6 b6 c6 d6 e6 f6 g6 a7 b7 c7 d7 e7 f7 g7) )
  )
)

(variant
  (title "Gothic Checkers")
  (description "")
  (history  "Traditional game.")

  (piece
     (name Checker)
     (image First "../images/wiedem/CheckerWhite.bmp"
            Second "../images/wiedem/CheckerBlack.bmp")
     (attribute captured? false)
     (moves
        (move-type jumptype)
           (checker-jump n)
           (checker-jump e)
           (checker-jump w)
           (checker-jump nw)
           (checker-jump ne)

        (move-type normaltype)
           (checker-shift ne)
           (checker-shift nw)
     )
  )

  (piece
     (name King)
     (image First "../images/wiedem/CheckerKingWhite.bmp"
            Second "../images/wiedem/CheckerKingBlack.bmp")
     (attribute captured? false)
     (moves
        (move-type jumptype)
           (king-jump n)
           (king-jump e)
           (king-jump w)
           (king-jump s)
           (king-jump nw)
           (king-jump ne)
           (king-jump sw)
           (king-jump se)

        (move-type continuetype)
           (dama-king-continue n)
           (dama-king-continue e)
           (dama-king-continue w)
           (dama-king-continue s)
           (dama-king-continue nw)
           (dama-king-continue ne)
           (dama-king-continue sw)
           (dama-king-continue se)

        (move-type normaltype)
           (king-shift n)
           (king-shift e)
           (king-shift w)
           (king-shift s)
           (king-shift nw)
           (king-shift ne)
           (king-shift sw)
           (king-shift se)
     )
  )

  (board-setup
    (First (Checker a1 b1 c1 d1 e1 f1 g1 h1  a2 b2 c2 d2 e2 f2 g2 h2) )
    (Second (Checker a8 b8 c8 d8 e8 f8 g8 h8  a7 b7 c7 d7 e7 f7 g7 h7) )
  )
)

(variant
  (title "Croda")
  (description "")
  (history  "Croda was invented by the Croation mathematics professor and Draughts master Ljuban Dedic \
             in order to create a draughts game with a smaller margin of draws.")

  (piece
     (name Checker)
     (image First "../images/wiedem/CheckerWhite.bmp"
            Second "../images/wiedem/CheckerBlack.bmp")
     (attribute captured? false)
     (moves
        (move-type jumptype)
           (checker-jump n)
           (checker-jump e)
           (checker-jump w)
           (checker-jump s)

        (move-type normaltype)
           (checker-shift n)
           (checker-shift ne)
           (checker-shift nw)
     )
  )

  (board-setup
    (First (Checker a1 b1 c1 d1 e1 f1 g1 h1  a2 b2 c2 d2 e2 f2 g2 h2  a3 b3 c3 d3 e3 f3 g3 h3) )
    (Second (Checker a8 b8 c8 d8 e8 f8 g8 h8  a7 b7 c7 d7 e7 f7 g7 h7  a6 b6 c6 d6 e6 f6 g6 h6) )
  )
)

(define dameo-shift (
  $1
  (while (and friend? (piece? Checker))
      $1
  )
  (verify empty?)
  add
))

(variant
  (title "Dameo")
  (description "")
  (history  "Invented by Christian Freeling in 2000.")

  (piece
     (name Checker)
     (image First "../images/wiedem/CheckerWhite.bmp"
            Second "../images/wiedem/CheckerBlack.bmp")
     (attribute captured? false)
     (moves
        (move-type jumptype)
           (checker-jump n)
           (checker-jump e)
           (checker-jump w)
           (checker-jump s)

        (move-type normaltype)
           (checker-shift n)
           (checker-shift ne)
           (checker-shift nw)
           (dameo-shift n)
           (dameo-shift ne)
           (dameo-shift nw)
     )
  )

  (board-setup
    (First (Checker a1 b1 c1 d1 e1 f1 g1 h1  b2 c2 d2 e2 f2 g2  c3 d3 e3 f3) )
    (Second (Checker a8 b8 c8 d8 e8 f8 g8 h8  b7 c7 d7 e7 f7 g7  c6 d6 e6 f6) )
  )
)

(define persian-shift (
  (set-flag is-side (in-zone? side))
  $1
  (verify empty?)
  (verify (or (flag? is-side) (in-zone? side)))
  (if (in-zone? promotion)
      (add King)
   else
      add
  )
))

(define persian-king-shift (
  (set-flag is-side (in-zone? side))
  $1
  (verify empty?)
  (verify (or (flag? is-side) (in-zone? side)))
  add
))

(variant
  (title "Persian Checkers")
  (description "")
  (history  "Traditional game.")

  (board
    (image "../images/wiedem/chess8x8.bmp")
    (grid
      (start-rectangle 5 5 54 54)
      (dimensions
        ("a/b/c/d/e/f/g/h" (49 0)) ; files
        ("8/7/6/5/4/3/2/1" (0 49)) ; ranks
      )
      (directions (n 0 -2) (s 0 2) (e 2 0) (w -2 0)
                  (ne 1 -1) (nw -1 -1) (se 1 1) (sw -1 1)
      ) 
    )
    (symmetry Second (n s) (s n) (nw sw) (sw nw) (ne se) (se ne))
    (zone (name promotion) (players First)
          (positions a8 b8 c8 d8 e8 f8 g8 h8)
    )
    (zone (name promotion) (players Second)
          (positions a1 b1 c1 d1 e1 f1 g1 h1)
    )
    (zone (name side) (players First Second)
          (positions a1 a3 a5 a7 h2 h4 h6 h8 c1 e1 g1 b8 d8 f8)
    )
  )

  (piece
     (name Checker)
     (image First "../images/wiedem/CheckerWhite.bmp"
            Second "../images/wiedem/CheckerBlack.bmp")
     (moves
        (move-type jumptype)
           (long-jump nw)
           (long-jump ne)
           (long-jump sw)
           (long-jump se)

        (move-type normaltype)
           (checker-shift n)
           (persian-shift nw)
           (persian-shift ne)
     )
  )

  (piece
     (name King)
     (image First "../images/wiedem/CheckerKingWhite.bmp"
            Second "../images/wiedem/CheckerKingBlack.bmp")
     (moves
        (move-type jumptype)
           (king-jump nw)
           (king-jump ne)
           (king-jump sw)
           (king-jump se)

        (move-type continuetype)
           (king-jump nw)
           (king-jump ne)
           (king-jump sw)
           (king-jump se)

        (move-type normaltype)
           (king-shift n)
           (king-shift s)
           (persian-king-shift nw)
           (persian-king-shift sw)
           (persian-king-shift ne)
           (persian-king-shift se)
     )
  )

  (board-setup
    (First (Checker a1 c1 e1 g1  b2 d2 f2 h2  a3 c3 e3 g3) )
    (Second (Checker b8 d8 f8 h8  a7 c7 e7 g7  b6 d6 f6 h6) )
  )
)

(variant
  (title "-")
)

(variant
  (title "Checkers (English draughts)")
  (description "")
  (history  "Traditional game.")

  (option "maximal captures" false)

  (piece
     (name Checker)
     (image First "../images/wiedem/CheckerBlack.bmp"
            Second "../images/wiedem/CheckerWhite.bmp")
     (moves
        (move-type jumptype)
           (checker-jump nw)
           (checker-jump ne)

        (move-type normaltype)
           (checker-shift nw)
           (checker-shift ne)
     )
  )

  (piece
     (name King)
     (image First "../images/wiedem/CheckerKingBlack.bmp"
            Second "../images/wiedem/CheckerKingWhite.bmp")
     (moves
        (move-type jumptype)
           (damone-jump nw)
           (damone-jump ne)
           (damone-jump sw)
           (damone-jump se)

        (move-type normaltype)
           (damone-shift nw)
           (damone-shift ne)
           (damone-shift sw)
           (damone-shift se)
     )
  )

  (board-setup
    (First (Checker a1 c1 e1 g1  b2 d2 f2 h2  a3 c3 e3 g3) )
    (Second (Checker b8 d8 f8 h8  a7 c7 e7 g7  b6 d6 f6 h6) )
  )
)

(define italian-jump (
  $1
  (verify enemy?)
  (verify (piece? Checker))
  capture
  $1
  (verify empty?)
  (if (in-zone? promotion)
      (add Dama)
   else
      (add-partial jumptype)
  )
))

(define italian-shift (
  $1
  (verify empty?)
  (if (in-zone? promotion)
      (add Dama)
   else
      add
  )
))

(variant
  (title "Italian Checkers")
  (description "")
  (history  "Traditional game.")

  (option "maximal captures" 2)

  (board
    (image "../images/wiedem/italian.bmp")
    (grid
      (start-rectangle 5 5 54 54)
      (dimensions
        ("a/b/c/d/e/f/g/h" (49 0)) ; files
        ("8/7/6/5/4/3/2/1" (0 49)) ; ranks
      )
      (directions (n 0 -1) (s  0 1) (e 1 0) (w -1 0)
                  (ne 1 -1) (nw -1 -1) (se 1 1) (sw -1 1)
      ) 
    )
    (symmetry Second (nw sw) (sw nw) (ne se) (se ne))
    (zone (name promotion) (players First)
          (positions a8 b8 c8 d8 e8 f8 g8 h8)
    )
    (zone (name promotion) (players Second)
          (positions a1 b1 c1 d1 e1 f1 g1 h1)
    )
  )

  (piece
     (name Checker)
     (image First "../images/wiedem/CheckerBlack.bmp"
            Second "../images/wiedem/CheckerWhite.bmp")
     (moves
        (move-type jumptype)
           (italian-jump nw)
           (italian-jump ne)

        (move-type normaltype)
           (italian-shift nw)
           (italian-shift ne)
     )
  )

  (piece
     (name Dama)
     (image First "../images/wiedem/CheckerKingBlack.bmp"
            Second "../images/wiedem/CheckerKingWhite.bmp")
     (moves
        (move-type jumptype)
           (damone-jump nw)
           (damone-jump ne)
           (damone-jump sw)
           (damone-jump se)

        (move-type normaltype)
           (damone-shift nw)
           (damone-shift ne)
           (damone-shift sw)
           (damone-shift se)
     )
  )

  (board-setup
    (First (Checker b1 d1 f1 h1  a2 c2 e2 g2  b3 d3 f3 h3) )
    (Second (Checker a8 c8 e8 g8  b7 d7 f7 h7  a6 c6 e6 g6) )
  )
)

(define italian-king-jump (
  $1
  (verify enemy?)
  (verify (not (piece? Damone)))
  capture
  $1
  (verify empty?)
  (if (in-zone? damone-promotion)
      (add Damone)
   else
      (add-partial jumptype)
  )
))

(define italian-king-shift (
  $1
  (verify empty?)
  (if (in-zone? damone-promotion)
      (add Damone)
   else
      add
  )
))

(variant
  (title "Italian Damone")
  (description "")
  (history  "Traditional game.")

  (option "maximal captures" false)

  (board
    (image "../images/wiedem/italian.bmp")
    (grid
      (start-rectangle 5 5 54 54)
      (dimensions
        ("a/b/c/d/e/f/g/h" (49 0)) ; files
        ("8/7/6/5/4/3/2/1" (0 49)) ; ranks
      )
      (directions (ne 1 -1) (nw -1 -1) (se 1 1) (sw -1 1)) 
    )
    (symmetry Second (nw se) (se nw))
    (zone (name promotion) (players First)
          (positions a6 c8)
    )
    (zone (name promotion) (players Second)
          (positions f1 h3)
    )
    (zone (name damone-promotion) (players First)
          (positions a8)
    )
    (zone (name damone-promotion) (players Second)
          (positions h1)
    )
  )

  (piece
     (name Checker)
     (image First "../images/wiedem/CheckerBlack.bmp"
            Second "../images/wiedem/CheckerWhite.bmp")
     (moves
        (move-type jumptype)
           (italian-jump nw)
           (italian-jump ne)
           (italian-jump sw)

        (move-type normaltype)
           (italian-shift nw)
           (italian-shift ne)
           (italian-shift sw)
     )
  )

  (piece
     (name King)
     (image First "../images/wiedem/CheckerKingBlack.bmp"
            Second "../images/wiedem/CheckerKingWhite.bmp")
     (moves
        (move-type jumptype)
           (italian-king-jump nw)
           (italian-king-jump ne)
           (italian-king-jump sw)
           (italian-king-jump se)

        (move-type normaltype)
           (italian-king-shift nw)
           (italian-king-shift ne)
           (italian-king-shift sw)
           (italian-king-shift se)
     )
  )

  (piece
     (name Dama)
     (image First "../images/wiedem/CheckerKingBlack.bmp"
            Second "../images/wiedem/CheckerKingWhite.bmp")
     (moves
        (move-type jumptype)
           (damone-jump nw)
           (damone-jump ne)
           (damone-jump sw)
           (damone-jump se)

        (move-type normaltype)
           (damone-shift nw)
           (damone-shift ne)
           (damone-shift sw)
           (damone-shift se)
     )
  )

  (piece
     (name Damone)
     (image First "../images/wiedem/CheckerDamoneBlack.bmp"
            Second "../images/wiedem/CheckerDamoneWhite.bmp")
     (moves
        (move-type jumptype)
           (damone-jump nw)
           (damone-jump ne)
           (damone-jump sw)
           (damone-jump se)

        (move-type normaltype)
           (damone-shift nw)
           (damone-shift ne)
           (damone-shift sw)
           (damone-shift se)
     )
  )

  (board-setup
    (First 
        (Checker d1 e2 f3 g4 h5) 
        (King f1 h3) 
        (Damone h1) 
    )
    (Second 
        (Checker a4 b5 c6 d7 e8) 
        (King a6 c8) 
        (Damone a8) 
    )
  )

  (loss-condition  (First Second) (pieces-remaining 0 Damone))
)

(define international-checker-jump (
  (verify (not captured?))    
  $1
  (verify enemy?)
  (verify (not captured?))
  $1
  (verify empty?)
  (set-flag more-captures false)
  (if (in-zone? promotion)
      (king-captured-find $1)
      (king-captured-find $2)
      (king-captured-find $3)
   else
      (checker-captured-find $1)
      (checker-captured-find $2)
      (checker-captured-find $3)
  )
  (if (flag? more-captures)
      (opposite $1)
      (markit)
      $1
  )
  (if (not (flag? more-captures))
      (opposite $1) 
      (if enemy?
          capture
      )
      $1
      (capture-all)
  )
  (if (in-zone? promotion)
      (if (flag? more-captures)
          (add-partial jumptype)
       else
          (add King)
      )
   else
      (if (flag? more-captures)
          (add-partial jumptype)
       else
          add
      )
  )
))

(define int-checker-jump (
  $1
  (verify enemy?)
  capture
  $1
  (verify empty?)
  (set-flag more-captures false)
  (checker-captured-find $1)
  (checker-captured-find $2)
  (checker-captured-find $3)
  (if (flag? more-captures)
      (add-partial jumptype)
   else
      (if (in-zone? promotion)
          (add King)
       else
          add
      )
  )
))

(variant
  (title "International Checkers")
  (description "")
  (history  "Traditional game.")

  (option "maximal captures" false) ; bugfix (true)

  (board
    (image "../images/wiedem/chess10x10.bmp")
    (grid
      (start-rectangle 5 5 54 54)
      (dimensions
        ("a/b/c/d/e/f/g/h/i/j" (49 0)) ; files
        ("10/9/8/7/6/5/4/3/2/1" (0 49)) ; ranks
      )
      (directions (ne 1 -1) (nw -1 -1) (se 1 1) (sw -1 1)
                  (next 0 -1)
      ) 
    )
    (dummy a0)
    (links next (a0 a1) (a10 b1) (b10 c1) (c10 d1) (d10 e1) (e10 f1) (f10 g1) (g10 h1) (h10 i1) (i10 j1))
    (symmetry Second (nw sw) (sw nw) (ne se) (se ne))
    (zone (name promotion) (players First)
          (positions a10 b10 c10 d10 e10 f10 g10 h10 i10 j10)
    )
    (zone (name promotion) (players Second)
          (positions a1 b1 c1 d1 e1 f1 g1 h1 i1 j1)
    )
  )

  (piece
     (name Checker)
     (image First "../images/wiedem/CheckerWhite.bmp"
            Second "../images/wiedem/CheckerBlack.bmp")
     (attribute captured? false)
     (moves
        (move-type jumptype)
           (international-checker-jump nw sw ne)
           (international-checker-jump ne se nw)
           (international-checker-jump sw se nw)
           (international-checker-jump se ne sw)
;          (int-checker-jump nw sw ne)
;          (int-checker-jump ne se nw)
;          (int-checker-jump sw se nw)
;          (int-checker-jump se ne sw)

        (move-type normaltype)
           (checker-shift nw)
           (checker-shift ne)
     )
  )

  (piece
     (name King)
     (image First "../images/wiedem/CheckerKingWhite.bmp"
            Second "../images/wiedem/CheckerKingBlack.bmp")
     (attribute captured? false)
     (moves
        (move-type jumptype)
           (long-king-jump nw sw ne)
           (long-king-jump ne se nw)
           (long-king-jump sw se nw)
           (long-king-jump se ne sw)
;          (king-jump nw)
;          (king-jump ne)
;          (king-jump sw)
;          (king-jump se)

;       (move-type continuetype)
;          (king-jump nw)
;          (king-jump ne)
;          (king-jump sw)
;          (king-jump se)

        (move-type normaltype)
           (king-shift ne)
           (king-shift nw)
           (king-shift se)
           (king-shift sw)
     )
  )

  (board-setup
    (First (Checker a1 c1 e1 g1 i1  b2 d2 f2 h2 j2  a3 c3 e3 g3 i3  b4 d4 f4 h4 j4) )
    (Second (Checker b10 d10 f10 h10 j10  a9 c9 e9 g9 i9  b8 d8 f8 h8 j8  a7 c7 e7 g7 i7) )
  )
)

(variant
  (title "Pool Checkers")
  (description "")
  (history  "Traditional game.")

  (option "maximal captures" false)

  (piece
     (name Checker)
     (image First "../images/wiedem/CheckerWhite.bmp"
            Second "../images/wiedem/CheckerBlack.bmp")
     (attribute captured? false)
     (moves
        (move-type jumptype)
           (international-checker-jump nw sw ne)
           (international-checker-jump ne se nw)
           (international-checker-jump sw se nw)
           (international-checker-jump se ne sw)

        (move-type normaltype)
           (checker-shift nw)
           (checker-shift ne)
     )
  )

  (piece
     (name King)
     (image First "../images/wiedem/CheckerKingWhite.bmp"
            Second "../images/wiedem/CheckerKingBlack.bmp")
     (attribute captured? false)
     (moves
        (move-type jumptype)
           (long-king-jump nw sw ne)
           (long-king-jump ne se nw)
           (long-king-jump sw se nw)
           (long-king-jump se ne sw)

        (move-type normaltype)
           (king-shift ne)
           (king-shift nw)
           (king-shift se)
           (king-shift sw)
     )
  )

  (board-setup
    (First (Checker a1 c1 e1 g1  b2 d2 f2 h2  a3 c3 e3 g3) )
    (Second (Checker b8 d8 f8 h8  a7 c7 e7 g7  b6 d6 f6 h6) )
  )
)

(variant
  (title "Russian Checkers")
  (description "")
  (history  "Traditional game.")

  (option "maximal captures" false)

  (piece
     (name Checker)
     (image First "../images/wiedem/CheckerWhite.bmp"
            Second "../images/wiedem/CheckerBlack.bmp")
     (attribute captured? false)
     (moves
        (move-type jumptype)
           (long-checker-jump nw sw ne)
           (long-checker-jump ne se nw)
           (long-checker-jump sw se nw)
           (long-checker-jump se ne sw)

        (move-type normaltype)
           (checker-shift nw)
           (checker-shift ne)
     )
  )

  (piece
     (name King)
     (image First "../images/wiedem/CheckerKingWhite.bmp"
            Second "../images/wiedem/CheckerKingBlack.bmp")
     (attribute captured? false)
     (moves
        (move-type jumptype)
           (long-king-jump nw sw ne)
           (long-king-jump ne se nw)
           (long-king-jump sw se nw)
           (long-king-jump se ne sw)

        (move-type normaltype)
           (king-shift ne)
           (king-shift nw)
           (king-shift se)
           (king-shift sw)
     )
  )

  (board-setup
    (First (Checker a1 c1 e1 g1  b2 d2 f2 h2  a3 c3 e3 g3) )
    (Second (Checker b8 d8 f8 h8  a7 c7 e7 g7  b6 d6 f6 h6) )
  )
)

(variant
  (title "Brazilian Checkers")
  (description "")
  (history  "Traditional game.")

  (option "maximal captures" false) ; bugfix (true)

  (piece
     (name Checker)
     (image First "../images/wiedem/CheckerWhite.bmp"
            Second "../images/wiedem/CheckerBlack.bmp")
     (attribute captured? false)
     (moves
        (move-type jumptype)
           (international-checker-jump nw sw ne)
           (international-checker-jump ne se nw)
           (international-checker-jump sw se nw)
           (international-checker-jump se ne sw)

        (move-type normaltype)
           (checker-shift nw)
           (checker-shift ne)
     )
  )

  (piece
     (name King)
     (image First "../images/wiedem/CheckerKingWhite.bmp"
            Second "../images/wiedem/CheckerKingBlack.bmp")
     (attribute captured? false)
     (moves
        (move-type jumptype)
           (long-king-jump nw sw ne)
           (long-king-jump ne se nw)
           (long-king-jump sw se nw)
           (long-king-jump se ne sw)

        (move-type normaltype)
           (king-shift ne)
           (king-shift nw)
           (king-shift se)
           (king-shift sw)
     )
  )

  (board-setup
    (First (Checker a1 c1 e1 g1  b2 d2 f2 h2  a3 c3 e3 g3) )
    (Second (Checker b8 d8 f8 h8  a7 c7 e7 g7  b6 d6 f6 h6) )
  )
)

(variant
  (title "80 Cells Checkers")
  (description "")
  (history  "Invented by Nikolay Spancireti (1916-1991).")

  (option "maximal captures" false)

  (board
    (image "../images/wiedem/chess10x8.bmp")
    (grid
      (start-rectangle 5 5 54 54)
      (dimensions
        ("a/b/c/d/e/f/g/h/i/j" (49 0)) ; files
        ("8/7/6/5/4/3/2/1" (0 49)) ; ranks
      )
      (directions (ne 1 -1) (nw -1 -1) (se 1 1) (sw -1 1)
                  (next 0 -1)
      ) 
    )
    (dummy a0)
    (links next (a0 a1) (a8 b1) (b8 c1) (c8 d1) (d8 e1) (e8 f1) (f8 g1) (g8 h1) (h8 i1) (i8 j1))
    (symmetry Second (nw sw) (sw nw) (ne se) (se ne))
    (zone (name promotion) (players First)
          (positions a8 b8 c8 d8 e8 f8 g8 h8 i8 j8)
    )
    (zone (name promotion) (players Second)
          (positions a1 b1 c1 d1 e1 f1 g1 h1 i1 j1)
    )
  )

  (piece
     (name Checker)
     (image First "../images/wiedem/CheckerWhite.bmp"
            Second "../images/wiedem/CheckerBlack.bmp")
     (attribute captured? false)
     (moves
        (move-type jumptype)
           (long-checker-jump nw sw ne)
           (long-checker-jump ne se nw)
           (long-checker-jump sw se nw)
           (long-checker-jump se ne sw)

        (move-type normaltype)
           (checker-shift nw)
           (checker-shift ne)
     )
  )

  (piece
     (name King)
     (image First "../images/wiedem/CheckerKingWhite.bmp"
            Second "../images/wiedem/CheckerKingBlack.bmp")
     (attribute captured? false)
     (moves
        (move-type jumptype)
           (long-king-jump nw sw ne)
           (long-king-jump ne se nw)
           (long-king-jump sw se nw)
           (long-king-jump se ne sw)

        (move-type normaltype)
           (king-shift ne)
           (king-shift nw)
           (king-shift se)
           (king-shift sw)
     )
  )

  (board-setup
    (First (Checker a1 c1 e1 g1 i1  b2 d2 f2 h2 j2  a3 c3 e3 g3 i3) )
    (Second (Checker b8 d8 f8 h8 j8  a7 c7 e7 g7 i7  b6 d6 f6 h6 j6) )
  )
)

(variant
  (title "Canadian Checkers")
  (description "")
  (history  "Traditional game.")

  (option "maximal captures" false) ; bugfix (true)

  (board
    (image "../images/wiedem/chess12x12.bmp")
    (grid
      (start-rectangle 5 5 54 54)
      (dimensions
        ("a/b/c/d/e/f/g/h/i/j/k/l" (49 0)) ; files
        ("12/11/10/9/8/7/6/5/4/3/2/1" (0 49)) ; ranks
      )
      (directions (ne 1 -1) (nw -1 -1) (se 1 1) (sw -1 1)
                  (next 0 -1)
      ) 
    )
    (dummy a0)
    (links next (a0 a1) (a12 b1) (b12 c1) (c12 d1) (d12 e1) (e12 f1) (f12 g1) (g12 h1) (h12 i1) (i12 j1) (j12 k1) (k12 l1))
    (symmetry Second (nw sw) (sw nw) (ne se) (se ne))
    (zone (name promotion) (players First)
          (positions a12 b12 c12 d12 e12 f12 g12 h12 i12 j12 k12 l12)
    )
    (zone (name promotion) (players Second)
          (positions a1 b1 c1 d1 e1 f1 g1 h1 i1 j1 k1 l1)
    )
  )

  (piece
     (name Checker)
     (image First "../images/wiedem/CheckerWhite.bmp"
            Second "../images/wiedem/CheckerBlack.bmp")
     (attribute captured? false)
     (moves
        (move-type jumptype)
           (international-checker-jump nw sw ne)
           (international-checker-jump ne se nw)
           (international-checker-jump sw se nw)
           (international-checker-jump se ne sw)

        (move-type normaltype)
           (checker-shift nw)
           (checker-shift ne)
     )
  )

  (piece
     (name King)
     (image First "../images/wiedem/CheckerKingWhite.bmp"
            Second "../images/wiedem/CheckerKingBlack.bmp")
     (attribute captured? false)
     (moves
        (move-type jumptype)
           (long-king-jump nw sw ne)
           (long-king-jump ne se nw)
           (long-king-jump sw se nw)
           (long-king-jump se ne sw)

        (move-type normaltype)
           (king-shift ne)
           (king-shift nw)
           (king-shift se)
           (king-shift sw)
     )
  )

  (board-setup
    (First (Checker a1 c1 e1 g1 i1 k1  b2 d2 f2 h2 j2 l2  a3 c3 e3 g3 i3 k3  b4 d4 f4 h4 j4 l4  a5 c5 e5 g5 i5 k5) )
    (Second (Checker b12 d12 f12 h12 j12 l12  a11 c11 e11 g11 i11 k11  b10 d10 f10 h10 j10 l10  a9 c9 e9 g9 i9 k9  b8 d8 f8 h8 j8 l8) )
  )
)

(define frisian-checker-jump (
  (verify (not captured?))    
  $1
  (verify enemy?)
  (verify (not captured?))
  $1
  (verify empty?)
  (set-flag more-captures false)
  (if (in-zone? promotion)
      (king-captured-find $1)
      (king-captured-find $2)
      (king-captured-find $3)
      (king-captured-find $4)
      (king-captured-find $5)
      (king-captured-find $6)
      (king-captured-find $7)
   else
      (checker-captured-find $1)
      (checker-captured-find $2)
      (checker-captured-find $3)
      (checker-captured-find $4)
      (checker-captured-find $5)
      (checker-captured-find $6)
      (checker-captured-find $7)
  )
  (if (flag? more-captures)
      (opposite $1)
      (markit)
      $1
  )
  (if (not (flag? more-captures))
      (opposite $1) 
      (if enemy?
          capture
      )
      $1
      (capture-all)
  )
  (if (in-zone? promotion)
      (if (flag? more-captures)
          (add-partial jumptype)
       else
          (add King)
      )
   else
      (if (flag? more-captures)
          (add-partial jumptype)
       else
          add
      )
  )
))

(define frisian-king-jump (
  (verify (not captured?))    
  (while (or (empty? $1) captured?)
      $1
  )
  (verify (enemy? $1))
  $1
  (verify (not captured?))    
  (verify (empty? $1))
  $1
  (while empty?
      (set-flag more-captures false)
      (king-captured-find $1)
      (king-captured-find $2)
      (king-captured-find $3)
      (king-captured-find $4)
      (king-captured-find $5)
      (king-captured-find $6)
      (king-captured-find $7)
      mark
      (while empty? 
          (opposite $1)
      ) 
      (if (flag? more-captures)
          (markit)
      )
      back
      (if (flag? more-captures)
          (add-partial jumptype)
       else
          mark
          (opposite $1)
          (while empty?
             (opposite $1)
          )
          (if enemy?
              capture
          )
          back
          (capture-all)
          add
      )
      $1
  )
))

(variant
  (title "Frisian Checkers")
  (description "")
  (history  "Traditional game.")

  (option "maximal captures" 2) ; bugfix (2)

  (board
    (image "../images/wiedem/chess10x10.bmp")
    (grid
      (start-rectangle 5 5 54 54)
      (dimensions
        ("a/b/c/d/e/f/g/h/i/j" (49 0)) ; files
        ("10/9/8/7/6/5/4/3/2/1" (0 49)) ; ranks
      )
      (directions (n 0 -2) (s 0 2) (e 2 0) (w -2 0)
                  (ne 1 -1) (nw -1 -1) (se 1 1) (sw -1 1)
                  (next 0 -1)
      ) 
    )
    (dummy a0)
    (links next (a0 a1) (a10 b1) (b10 c1) (c10 d1) (d10 e1) (e10 f1) (f10 g1) (g10 h1) (h10 i1) (i10 j1))
    (symmetry Second (nw sw) (sw nw) (ne se) (se ne))
    (zone (name promotion) (players First)
          (positions a10 b10 c10 d10 e10 f10 g10 h10 i10 j10)
    )
    (zone (name promotion) (players Second)
          (positions a1 b1 c1 d1 e1 f1 g1 h1 i1 j1)
    )
  )

  (piece
     (name Checker)
     (image First "../images/wiedem/CheckerWhite.bmp"
            Second "../images/wiedem/CheckerBlack.bmp")
     (attribute captured? false)
     (moves
        (move-type jumptype)
           (long-jump nw)
           (long-jump ne)
           (long-jump sw)
           (long-jump se)
           (long-jump n)
           (long-jump s)
           (long-jump w)
           (long-jump e)

        (move-type normaltype)
           (checker-shift nw)
           (checker-shift ne)
     )
  )

  (piece
     (name King)
     (image First "../images/wiedem/CheckerKingWhite.bmp"
            Second "../images/wiedem/CheckerKingBlack.bmp")
     (attribute captured? false)
     (moves
        (move-type jumptype)
           (king-jump nw)
           (king-jump ne)
           (king-jump sw)
           (king-jump se)
           (king-jump n)
           (king-jump s)
           (king-jump w)
           (king-jump e)

        (move-type continuetype)
           (king-jump nw)
           (king-jump ne)
           (king-jump sw)
           (king-jump se)
           (king-jump n)
           (king-jump s)
           (king-jump w)
           (king-jump e)

        (move-type normaltype)
           (king-shift ne)
           (king-shift nw)
           (king-shift se)
           (king-shift sw)
     )
  )

  (board-setup
    (First (Checker a1 c1 e1 g1 i1  b2 d2 f2 h2 j2  a3 c3 e3 g3 i3  b4 d4 f4 h4 j4) )
    (Second (Checker b10 d10 f10 h10 j10  a9 c9 e9 g9 i9  b8 d8 f8 h8 j8  a7 c7 e7 g7 i7) )
  )
)

(variant
  (title "Czech Checkers")
  (description "")
  (history  "Traditional game.")

  (option "maximal captures" 2)

  (piece
     (name Checker)
     (image First "../images/wiedem/CheckerWhite.bmp"
            Second "../images/wiedem/CheckerBlack.bmp")
     (moves
        (move-type jumptype)
           (checker-jump nw)
           (checker-jump ne)

        (move-type normaltype)
           (checker-shift nw)
           (checker-shift ne)
     )
  )

  (piece
     (name King)
     (image First "../images/wiedem/CheckerKingWhite.bmp"
            Second "../images/wiedem/CheckerKingBlack.bmp")
     (moves
        (move-type jumptype)
           (king-jump nw)
           (king-jump ne)
           (king-jump sw)
           (king-jump se)

        (move-type continuetype)
           (king-jump nw)
           (king-jump ne)
           (king-jump sw)
           (king-jump se)

        (move-type normaltype)
           (king-shift nw)
           (king-shift ne)
           (king-shift sw)
           (king-shift se)
     )
  )

  (board-setup
    (First (Checker a1 c1 e1 g1  b2 d2 f2 h2  a3 c3 e3 g3) )
    (Second (Checker b8 d8 f8 h8  a7 c7 e7 g7  b6 d6 f6 h6) )
  )
)

(variant
  (title "Thai Checkers")
  (description "")
  (history  "Traditional game.")

  (piece
     (name Checker)
     (image First "../images/wiedem/CheckerBlack.bmp"
            Second "../images/wiedem/CheckerWhite.bmp")
     (moves
        (move-type jumptype)
           (checker-jump nw)
           (checker-jump ne)

        (move-type normaltype)
           (checker-shift nw)
           (checker-shift ne)
     )
  )

  (piece
     (name King)
     (image First "../images/wiedem/CheckerKingBlack.bmp"
            Second "../images/wiedem/CheckerKingWhite.bmp")
     (moves
        (move-type jumptype)
           (short-king-jump nw)
           (short-king-jump ne)
           (short-king-jump sw)
           (short-king-jump se)

        (move-type continuetype)
           (short-king-continue nw)
           (short-king-continue ne)
           (short-king-continue sw)
           (short-king-continue se)

        (move-type normaltype)
           (king-shift nw)
           (king-shift ne)
           (king-shift sw)
           (king-shift se)
     )
  )

  (board-setup
    (First (Checker a1 c1 e1 g1  b2 d2 f2 h2) )
    (Second (Checker b8 d8 f8 h8  a7 c7 e7 g7) )
  )
)

(variant
  (title "-")
)

(variant
  (title "Losing Checkers")
  (description "")
  (history  "Traditional game.")

  (option "maximal captures" false)

  (piece
     (name Checker)
     (image First "../images/wiedem/CheckerBlack.bmp"
            Second "../images/wiedem/CheckerWhite.bmp")
     (moves
        (move-type jumptype)
           (checker-jump nw)
           (checker-jump ne)

        (move-type normaltype)
           (checker-shift nw)
           (checker-shift ne)
     )
  )

  (piece
     (name King)
     (image First "../images/wiedem/CheckerKingBlack.bmp"
            Second "../images/wiedem/CheckerKingWhite.bmp")
     (moves
        (move-type jumptype)
           (damone-jump nw)
           (damone-jump ne)
           (damone-jump sw)
           (damone-jump se)

        (move-type normaltype)
           (damone-shift nw)
           (damone-shift ne)
           (damone-shift sw)
           (damone-shift se)
     )
  )

  (board-setup
    (First (Checker a1 c1 e1 g1  b2 d2 f2 h2  a3 c3 e3 g3) )
    (Second (Checker b8 d8 f8 h8  a7 c7 e7 g7  b6 d6 f6 h6) )
  )

  (win-condition (First Second) (pieces-remaining 0) )
  (win-condition (First Second) stalemated )
)

(define first-checker-shift (
  $1
  (verify empty?)
  (if (in-zone? first-promotion-zone)
      (add FirstKing)
   else
      add
  )
))

(define second-checker-shift (
  $1
  (verify empty?)
  (if (in-zone? second-promotion-zone)
      (add SecondKing)
   else
      add
  )
))

(define first-long-jump (
  $1
  (verify (or (piece? SecondChecker) (piece? SecondKing)))
  capture
  $1
  (verify empty?)
  (if (in-zone? first-promotion-zone)
      (add-partial FirstKing jumptype)
   else
      (add-partial jumptype)
  )
))

(define second-long-jump (
  $1
  (verify (or (piece? FirstChecker) (piece? FirstKing)))
  capture
  $1
  (verify empty?)
  (if (in-zone? second-promotion-zone)
      (add-partial SecondKing jumptype)
   else
      (add-partial jumptype)
  )
))

(define first-king-jump (
  (while (empty? $1)
      $1
  )
  $1
  (verify (or (piece? SecondChecker) (piece? SecondKing)))
  (verify (empty? $1))
  $1
  (while empty?
      mark
      (while empty? 
        (opposite $1)
      ) 
      capture
      back
      (add-partial continuetype)
      $1
  )
))

(define second-king-jump (
  (while (empty? $1)
      $1
  )
  $1
  (verify (or (piece? FirstChecker) (piece? FirstKing)))
  (verify (empty? $1))
  $1
  (while empty?
      mark
      (while empty? 
        (opposite $1)
      ) 
      capture
      back
      (add-partial continuetype)
      $1
  )
))

(variant
  (title "Stavropol Checkers")
  (description "")
  (history  "Unknown Inventor.")

  (option "maximal captures" false)

  (players First Second Neurtal)
  (turn-order (First Neurtal) (Second Neurtal))

  (board
    (image "../images/wiedem/chess8x8.bmp")
    (grid
      (start-rectangle 5 5 54 54)
      (dimensions
        ("a/b/c/d/e/f/g/h" (49 0)) ; files
        ("8/7/6/5/4/3/2/1" (0 49)) ; ranks
      )
      (directions (n 0 -1) (s 0 1) (e 1 0) (w -1 0)
                  (ne 1 -1) (nw -1 -1) (se 1 1) (sw -1 1)
                  (ee 2 0) (ww -2 0)
                  (next 0 -1)
      ) 
    )
    (dummy a0)
    (links next (a0 a1) (a8 b1) (b8 c1) (c8 d1) (d8 e1) (e8 f1) (f8 g1) (g8 h1))
    (zone (name first-promotion-zone) (players Neurtal) (positions a8 b8 c8 d8 e8 f8 g8 h8) )
    (zone (name second-promotion-zone) (players Neurtal) (positions a1 b1 c1 d1 e1 f1 g1 h1) )
    (zone (name promotion) (players First)
          (positions a8 b8 c8 d8 e8 f8 g8 h8)
    )
    (zone (name promotion) (players Second)
          (positions a1 b1 c1 d1 e1 f1 g1 h1)
    )
  )

  (piece
     (name FirstChecker)
     (image Neurtal "../images/wiedem/CheckerWhite.bmp")
     (attribute captured? false)
     (moves
        (move-type jumptype)
           (first-long-jump nw)
           (first-long-jump ne)
           (first-long-jump sw)
           (first-long-jump se)

        (move-type normaltype)
           (first-checker-shift nw)
           (first-checker-shift ne)
     )
  )

  (piece
     (name SecondChecker)
     (image Neurtal "../images/wiedem/CheckerBlack.bmp")
     (attribute captured? false)
     (moves
        (move-type jumptype)
           (second-long-jump nw)
           (second-long-jump ne)
           (second-long-jump sw)
           (second-long-jump se)

        (move-type normaltype)
           (second-checker-shift sw)
           (second-checker-shift se)
     )
  )

  (piece
     (name FirstKing)
     (image Neurtal "../images/wiedem/CheckerKingWhite.bmp")
     (attribute captured? false)
     (moves
        (move-type jumptype)
           (first-king-jump nw)
           (first-king-jump ne)
           (first-king-jump sw)
           (first-king-jump se)

        (move-type normaltype)
           (king-shift ne)
           (king-shift nw)
           (king-shift se)
           (king-shift sw)
     )
  )

  (piece
     (name SecondKing)
     (image Neurtal "../images/wiedem/CheckerKingBlack.bmp")
     (attribute captured? false)
     (moves
        (move-type jumptype)
           (second-king-jump nw)
           (second-king-jump ne)
           (second-king-jump sw)
           (second-king-jump se)

        (move-type normaltype)
           (king-shift ne)
           (king-shift nw)
           (king-shift se)
           (king-shift sw)
     )
  )

  (board-setup
    (Neurtal (FirstChecker a1 c1 e1 g1  b2 d2 f2 h2  a3 c3 e3 g3) )
    (Neurtal (SecondChecker b8 d8 f8 h8  a7 c7 e7 g7  b6 d6 f6 h6) )
  )

  (loss-condition (First) (and (total-piece-count 0 FirstChecker) (total-piece-count 0 FirstKing)))
  (loss-condition (Second) (and (total-piece-count 0 SecondChecker) (total-piece-count 0 SecondKing)))
)

(define clear-all
   mark  
   a0 
   (while (on-board? next) 
      next
      (if (piece? Checker)
          (set-attribute captured? false)
      )
   )
   back  
)

(define north-jump (
  $1
  (verify enemy?)
  (if (piece? King)
      (change-type Checker)
      (set-attribute captured? true)
   else
      capture
  )
  $1
  (verify empty?)
  (clear-all)
  (if (in-zone? promotion)
      (add-partial King jumptype)
   else
      (set-attribute captured? false)
      (add-partial continuetype)
  )
))

(define north-jump-continue (
  $1
  (verify enemy?)
  (if (piece? King)
      (change-type Checker)
      (set-attribute captured? true)
   else
      (verify (not captured?))
      capture
  )
  $1
  (verify empty?)
  (if (in-zone? promotion)
      (add-partial King jumptype)
   else
      (add-partial continuetype)
  )
))

(define north-king-jump (
  (while (empty? $1)
      $1
  )
  (verify (enemy? $1))
  $1
  (verify (empty? $1))
  $1
  (while empty?
      mark
      (while empty? 
        (opposite $1)
      ) 
      (if (piece? King)
          (change-type Checker)
          (set-attribute captured? true)
       else
          capture
      )
      back
      (clear-all)
      (add-partial continuetype)
      $1
  )
))

(define north-king-continue (
  (while (empty? $1)
      $1
      (verify not-last-from?)
  )
  (verify (enemy? $1))
  $1
  (verify (empty? $1))
  $1
  (while empty?
      mark
      (while empty? 
        (opposite $1)
      ) 
      (if (piece? King)
          (change-type Checker)
          (set-attribute captured? true)
       else
          (verify (not captured?))
          capture
      )
      back
      (add-partial continuetype)
      $1
  )
))

(define north-shift (
  (clear-all)
  $1
  (verify empty?)
  (if (in-zone? promotion)
      (add King)
   else
      (set-attribute captured? false)
      add
  )
))

(define north-king-shift (
  (clear-all)
  (while (empty? $1)
      $1
      add
  )
))

(variant
  (title "Northern Checkers")
  (description "")
  (history  "Unknown Inventor.")

  (piece
     (name Checker)
     (image First "../images/wiedem/CheckerWhite.bmp"
            Second "../images/wiedem/CheckerBlack.bmp")
     (attribute captured? false)
     (moves
        (move-type jumptype)
           (north-jump nw)
           (north-jump ne)
           (north-jump sw)
           (north-jump se)

        (move-type continuetype)
           (north-jump-continue nw)
           (north-jump-continue ne)
           (north-jump-continue sw)
           (north-jump-continue se)

        (move-type normaltype)
           (north-shift nw)
           (north-shift ne)
     )
  )

  (piece
     (name King)
     (image First "../images/wiedem/CheckerKingWhite.bmp"
            Second "../images/wiedem/CheckerKingBlack.bmp")
     (attribute captured? false)
     (moves
        (move-type jumptype)
           (north-king-jump nw)
           (north-king-jump ne)
           (north-king-jump sw)
           (north-king-jump se)

        (move-type continuetype)
           (north-king-continue nw)
           (north-king-continue ne)
           (north-king-continue sw)
           (north-king-continue se)

        (move-type normaltype)
           (north-king-shift ne)
           (north-king-shift nw)
           (north-king-shift se)
           (north-king-shift sw)
     )
  )

  (board-setup
    (First (Checker a1 c1 e1 g1  b2 d2 f2 h2  a3 c3 e3 g3) )
    (Second (Checker b8 d8 f8 h8  a7 c7 e7 g7  b6 d6 f6 h6) )
  )
)

(variant
  (title "Northern Kings")
  (description "")
  (history  "Variant of the Northern Checkers.")

  (piece
     (name Checker)
     (image First "../images/wiedem/CheckerWhite.bmp"
            Second "../images/wiedem/CheckerBlack.bmp")
     (attribute captured? false)
     (moves
        (move-type jumptype)
           (north-jump nw)
           (north-jump ne)
           (north-jump sw)
           (north-jump se)

        (move-type continuetype)
           (north-jump-continue nw)
           (north-jump-continue ne)
           (north-jump-continue sw)
           (north-jump-continue se)

        (move-type normaltype)
           (north-shift nw)
           (north-shift ne)
     )
  )

  (piece
     (name King)
     (image First "../images/wiedem/CheckerKingWhite.bmp"
            Second "../images/wiedem/CheckerKingBlack.bmp")
     (attribute captured? false)
     (moves
        (move-type jumptype)
           (north-king-jump nw)
           (north-king-jump ne)
           (north-king-jump sw)
           (north-king-jump se)

        (move-type continuetype)
           (north-king-continue nw)
           (north-king-continue ne)
           (north-king-continue sw)
           (north-king-continue se)

        (move-type normaltype)
           (north-king-shift ne)
           (north-king-shift nw)
           (north-king-shift se)
           (north-king-shift sw)
     )
  )

  (board-setup
    (First (King a1 c1 e1 g1  b2 d2 f2 h2  a3 c3 e3 g3) )
    (Second (King b8 d8 f8 h8  a7 c7 e7 g7  b6 d6 f6 h6) )
  )
)

(define na-jump (
  $1
  (verify enemy?)
  (verify (empty? $1))
  (add-partial jumptype)
))

(variant
  (title "North American Checkers")
  (description "")
  (history  "Unknown Inventor.")

  (option "maximal captures" false)

  (piece
     (name Checker)
     (image First "../images/wiedem/CheckerBlack.bmp"
            Second "../images/wiedem/CheckerWhite.bmp")
     (moves
        (move-type jumptype)
           (checker-jump nw)
           (checker-jump ne)

        (move-type normaltype)
           (checker-shift nw)
           (checker-shift ne)
     )
  )

  (piece
     (name King)
     (image First "../images/wiedem/CheckerKingBlack.bmp"
            Second "../images/wiedem/CheckerKingWhite.bmp")
     (moves
        (move-type jumptype)
           (na-jump nw)
           (na-jump ne)
           (na-jump sw)
           (na-jump se)

        (move-type normaltype)
           (damone-shift nw)
           (damone-shift ne)
           (damone-shift sw)
           (damone-shift se)
     )
  )

  (board-setup
    (First (Checker a1 c1 e1 g1  b2 d2 f2 h2  a3 c3 e3 g3) )
    (Second (Checker b8 d8 f8 h8  a7 c7 e7 g7  b6 d6 f6 h6) )
  )
)
